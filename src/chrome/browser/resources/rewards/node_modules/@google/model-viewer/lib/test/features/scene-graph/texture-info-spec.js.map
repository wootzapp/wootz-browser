{"version":3,"file":"texture-info-spec.js","sourceRoot":"","sources":["../../../../src/test/features/scene-graph/texture-info-spec.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAGH,OAAO,EAAC,kBAAkB,EAAC,MAAM,0BAA0B,CAAC;AAC5D,OAAO,EAAC,YAAY,EAAC,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAC,SAAS,EAAC,MAAM,kBAAkB,CAAC;AAE3C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,MAAM,aAAa,GACf,SAAS,CAAC,yDAAyD,CAAC,CAAC;AAEzE,KAAK,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACrC,KAAK,CAAC,cAAc,EAAE,GAAG,EAAE;QACzB,IAAI,OAA2B,CAAC;QAChC,IAAI,gBAA6B,CAAC;QAClC,IAAI,eAA4B,CAAC;QAEjC,KAAK,CAAC,KAAK,IAAI,EAAE;YACf,OAAO,GAAG,IAAI,kBAAkB,EAAE,CAAC;YACnC,OAAO,CAAC,GAAG,GAAG,aAAa,CAAC;YAC5B,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC9D,MAAM,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAEpC,gBAAgB,GAAG,OAAO,CAAC,KAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC;YAC7D,eAAe;gBACX,OAAO,CAAC,KAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,gBAAgB,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,GAAG,EAAE;YACZ,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;YACpC,0CAA0C;YAC1C,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC5C,0CAA0C;YAC1C,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;YACjC,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,aAAa,CAAC,SAAS,CACjD,mEAAmE,CAAC,CAAC,CAAC;YAE1E,8DAA8D;YAC9D,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACrC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC;YAEhD,iEAAiE;YACjE,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {TextureInfo} from '../../../features/scene-graph/texture-info.js';\nimport {ModelViewerElement} from '../../../model-viewer.js';\nimport {waitForEvent} from '../../../utilities.js';\nimport {assetPath} from '../../helpers.js';\n\nconst expect = chai.expect;\nconst DUCK_GLB_PATH =\n    assetPath('models/glTF-Sample-Models/2.0/Duck/glTF-Binary/Duck.glb');\n\nsuite('scene-graph/texture-info', () => {\n  suite('texture-info', () => {\n    let element: ModelViewerElement;\n    let emptyTextureInfo: TextureInfo;\n    let baseTextureInfo: TextureInfo;\n\n    setup(async () => {\n      element = new ModelViewerElement();\n      element.src = DUCK_GLB_PATH;\n      document.body.insertBefore(element, document.body.firstChild);\n      await waitForEvent(element, 'load');\n\n      emptyTextureInfo = element.model!.materials[0].normalTexture;\n      baseTextureInfo =\n          element.model!.materials[0].pbrMetallicRoughness.baseColorTexture;\n    });\n\n    teardown(() => {\n      document.body.removeChild(element);\n    });\n\n    test('empty slot is null', async () => {\n      // The duck doesn't have a normal texture.\n      expect(emptyTextureInfo.texture).to.be.null;\n    });\n\n    test('non-empty slot is not null', async () => {\n      // The duck doesn't have a normal texture.\n      expect(baseTextureInfo.texture).to.not.be.null;\n    });\n\n    test('call setTexture', async () => {\n      const texture = await element.createTexture(assetPath(\n          'models/glTF-Sample-Models/2.0/BoxTextured/glTF/CesiumLogoFlat.png'));\n\n      // Setting a texture, the normal texture should _not_ be null.\n      emptyTextureInfo.setTexture(texture);\n      expect(emptyTextureInfo.texture).to.not.be.null;\n\n      // Clearing a texture, the normal texture _should_ be null again.\n      emptyTextureInfo.setTexture(null);\n      expect(emptyTextureInfo.texture).to.be.null;\n    });\n  });\n});\n"]}