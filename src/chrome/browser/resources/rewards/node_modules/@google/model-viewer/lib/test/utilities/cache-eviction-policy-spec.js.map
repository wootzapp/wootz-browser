{"version":3,"file":"cache-eviction-policy-spec.js","sourceRoot":"","sources":["../../../src/test/utilities/cache-eviction-policy-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CacheEvictionPolicy} from '../../utilities/cache-eviction-policy.js';\n\nconst expect = chai.expect;\n\nsuite('CacheEvictionPolicy', () => {\n  let cache: Set<string>;\n  let policy: CacheEvictionPolicy<string>;\n\n  setup(() => {\n    cache = new Set();\n    policy = new CacheEvictionPolicy(cache);\n  });\n\n  test('reports zero retainers for uncached items', () => {\n    policy.retain('foo');\n\n    expect(policy.retainerCount('bar')).to.be.equal(0);\n  });\n\n  test('accounts for total retainers of cached items', () => {\n    policy.retain('foo');\n    policy.retain('foo');\n    policy.release('foo');\n    policy.retain('foo');\n    policy.release('foo');\n\n    expect(policy.retainerCount('foo')).to.be.equal(1);\n  });\n\n  test('ignores non-retained cached items within the threshold', () => {\n    cache.add('foo');\n    policy.retain('foo');\n    policy.release('foo');\n\n    expect(policy.retainerCount('foo')).to.be.equal(0);\n    expect(cache.has('foo')).to.be.true;\n  });\n\n  test('deletes non-retained cached items outside the threshold', () => {\n    cache.add('foo');\n    policy.retain('foo');\n\n    policy.evictionThreshold = 0;\n    policy.release('foo');\n\n    expect(policy.retainerCount('foo')).to.be.equal(0);\n    expect(cache.has('foo')).to.be.false;\n  });\n\n  test('deletes non-retained cached items least-recently-used first', () => {\n    cache.add('foo');\n    cache.add('bar');\n\n    policy.retain('foo');\n    policy.retain('bar');\n\n    policy.evictionThreshold = 1;\n\n    policy.release('foo');\n    policy.release('bar');\n\n    expect(policy.retainerCount('foo')).to.be.equal(0);\n    expect(policy.retainerCount('bar')).to.be.equal(0);\n    expect(cache.has('foo')).to.be.false;\n    expect(cache.has('bar')).to.be.true;\n  });\n});"]}