{"version":3,"file":"Debugger.js","sourceRoot":"","sources":["../../src/three-components/Debugger.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAEH,OAAO,EAAC,IAAI,EAAE,kBAAkB,EAAE,aAAa,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,iBAAiB,EAAC,MAAM,OAAO,CAAC;AAwBjH;;;;;;;;GAQG;AACH,MAAM,OAAO,QAAQ;IACnB,YAAY,QAAkB;QAC5B,mCAAmC;QACnC,QAAQ,CAAC,aAAa,CAAC,KAAK,GAAG,EAAC,iBAAiB,EAAE,IAAI,EAAC,CAAC;QACzD,oEAAoE;QACpE,0EAA0E;QAC1E,QAAQ;QACR,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAC9B,6BAA6B,EAAE;gBAC7B,MAAM,EAAE;oBACN,QAAQ;oBACR,KAAK,EAAE;wBACL,cAAc;wBACd,OAAO;wBACP,IAAI;wBACJ,KAAK;wBACL,aAAa;wBACb,kBAAkB;wBAClB,iBAAiB;qBAClB;iBACF;aACF,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,KAAiB;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAC9B,gCAAgC,EAAE,EAAC,MAAM,EAAE,EAAC,KAAK,EAAC,EAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,WAAW,CAAC,KAAiB;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAC9B,kCAAkC,EAAE,EAAC,MAAM,EAAE,EAAC,KAAK,EAAC,EAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;CACF","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Mesh, OrthographicCamera, PlaneGeometry, Scene, ShaderMaterial, Texture, WebGLRenderTarget} from 'three';\n\nimport {Constructor} from '../utilities.js';\n\nimport {ModelScene} from './ModelScene.js';\nimport {Renderer} from './Renderer.js';\n\nexport interface ModelViewerRendererDebugDetails {\n  renderer: Renderer;\n  THREE: {\n    ShaderMaterial: Constructor<ShaderMaterial>;\n    PlaneGeometry: Constructor<PlaneGeometry>;\n    OrthographicCamera: Constructor<OrthographicCamera>;\n    WebGLRenderTarget: Constructor<WebGLRenderTarget>;\n    Texture: Constructor<Texture>;\n    Scene: Constructor<Scene>;\n    Mesh: Constructor<Mesh>;\n  };\n}\n\nexport interface ModelViewerSceneDetails {\n  scene: ModelScene\n}\n\n/**\n * This Debugger exposes internal details of the <model-viewer> rendering\n * substructure so that external tools can more easily inspect and operate on\n * them.\n *\n * It also activates shader debugging on the associated GL context. Shader\n * debugging trades performance for useful error information, so it is not\n * recommended to activate this unless needed.\n */\nexport class Debugger {\n  constructor(renderer: Renderer) {\n    // Force WebGL shader debugging on:\n    renderer.threeRenderer.debug = {checkShaderErrors: true};\n    // Announce debug details at microtask timing to give the `Renderer`\n    // constructor time to complete its initialization, just to be on the safe\n    // side:\n    Promise.resolve().then(() => {\n      self.dispatchEvent(new CustomEvent<ModelViewerRendererDebugDetails>(\n          'model-viewer-renderer-debug', {\n            detail: {\n              renderer,\n              THREE: {\n                ShaderMaterial,\n                Texture,\n                Mesh,\n                Scene,\n                PlaneGeometry,\n                OrthographicCamera,\n                WebGLRenderTarget\n              }\n            }\n          }));\n    });\n  }\n\n  addScene(scene: ModelScene) {\n    self.dispatchEvent(new CustomEvent<ModelViewerSceneDetails>(\n        'model-viewer-scene-added-debug', {detail: {scene}}));\n  }\n\n  removeScene(scene: ModelScene) {\n    self.dispatchEvent(new CustomEvent<ModelViewerSceneDetails>(\n        'model-viewer-scene-removed-debug', {detail: {scene}}));\n  }\n}\n"]}