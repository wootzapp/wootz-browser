{"version":3,"file":"texture.js","sourceRoot":"","sources":["../../../src/features/scene-graph/texture.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAOH,OAAO,EAAC,KAAK,EAAC,MAAM,YAAY,CAAC;AACjC,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,eAAe,EAAC,MAAM,wBAAwB,CAAC;AAItE,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AAC/B,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAEnC;;GAEG;AACH,MAAM,OAAO,OAAQ,SAAQ,eAAe;IAI1C,YACI,QAAoB,EACpB,YAA+B,EAC/B,cAAgC,IAAI,EACpC,cAAgC,IAAI,EACpC,YAA4B,IAAI;QAElC,KAAK,CACD,QAAQ,EACR,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAiB,EAC7C,IAAI,GAAG,CAAe,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/D,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;QAClE,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IAC9D,CAAC;IAED,IAAI,IAAI;QACN,OAAQ,IAAI,CAAC,aAAa,CAAS,CAAC,IAAI,IAAI,EAAE,CAAC;IACjD,CAAC;IAED,IAAI,IAAI,CAAC,IAAY;QAClB,IAAI,CAAC,aAAa,CAAS,CAAC,IAAI,GAAG,IAAI,CAAC;IAC3C,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;CACF","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Texture as ThreeTexture} from 'three';\n\nimport {Image as GLTFImage, Sampler as GLTFSampler, Texture as GLTFTexture} from '../../three-components/gltf-instance/gltf-2.0.js';\n\nimport {Texture as TextureInterface} from './api.js';\nimport {Image} from './image.js';\nimport {Sampler} from './sampler.js';\nimport {$sourceObject, ThreeDOMElement} from './three-dom-element.js';\n\n\n\nconst $image = Symbol('image');\nconst $sampler = Symbol('sampler');\n\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Texture extends ThreeDOMElement implements TextureInterface {\n  private[$image]: Image;\n  private[$sampler]: Sampler;\n\n  constructor(\n      onUpdate: () => void,\n      threeTexture: ThreeTexture|null,\n      gltfTexture: GLTFTexture|null = null,\n      gltfSampler: GLTFSampler|null = null,\n      gltfImage: GLTFImage|null = null,\n  ) {\n    super(\n        onUpdate,\n        gltfTexture ? gltfTexture : {} as GLTFTexture,\n        new Set<ThreeTexture>(threeTexture ? [threeTexture] : []));\n\n    this[$sampler] = new Sampler(onUpdate, threeTexture, gltfSampler);\n    this[$image] = new Image(onUpdate, threeTexture, gltfImage);\n  }\n\n  get name(): string {\n    return (this[$sourceObject] as any).name || '';\n  }\n\n  set name(name: string) {\n    (this[$sourceObject] as any).name = name;\n  }\n\n  get sampler(): Sampler {\n    return this[$sampler];\n  }\n\n  get source(): Image {\n    return this[$image];\n  }\n}\n"]}