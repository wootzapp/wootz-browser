{"version":3,"file":"constants.js","sourceRoot":"","sources":["../src/constants.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// NOTE(cdata): The HAS_WEBXR_* constants can be enabled in Chrome by turning on\n// the appropriate flags. However, just because we have the API does not\n// guarantee that AR will work.\nexport const HAS_WEBXR_DEVICE_API = navigator.xr != null &&\n    (self as any).XRSession != null && navigator.xr.isSessionSupported != null;\n\nexport const HAS_WEBXR_HIT_TEST_API = HAS_WEBXR_DEVICE_API &&\n    (self as any).XRSession.prototype.requestHitTestSource != null;\n\nexport const HAS_RESIZE_OBSERVER = self.ResizeObserver != null;\n\nexport const HAS_INTERSECTION_OBSERVER = self.IntersectionObserver != null;\n\nexport const IS_WEBXR_AR_CANDIDATE = HAS_WEBXR_HIT_TEST_API;\n\nexport const IS_MOBILE = (() => {\n  const userAgent =\n      navigator.userAgent || navigator.vendor || (self as any).opera;\n  let check = false;\n  // eslint-disable-next-line\n  if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n          .test(userAgent) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n          .test(userAgent.substr(0, 4))) {\n    check = true;\n  }\n  return check;\n})();\n\nexport const IS_CHROMEOS = /\\bCrOS\\b/.test(navigator.userAgent);\n\nexport const IS_ANDROID = /android/i.test(navigator.userAgent);\n\n// Prior to iOS 13, detecting iOS Safari was relatively straight-forward.\n// As of iOS 13, Safari on iPad (in its default configuration) reports the same\n// user-agent string as Safari on desktop MacOS. Strictly speaking, we only care\n// about iOS for the purposes if selecting for cases where Quick Look is known\n// to be supported. However, for API correctness purposes, we must rely on\n// known, detectable signals to distinguish iOS Safari from MacOS Safari. At the\n// time of this writing, there are no non-iOS/iPadOS Apple devices with\n// multi-touch displays.\n// @see https://stackoverflow.com/questions/57765958/how-to-detect-ipad-and-ipad-os-version-in-ios-13-and-up\n// @see https://forums.developer.apple.com/thread/119186\n// @see https://github.com/google/model-viewer/issues/758\nexport const IS_IOS =\n    (/iPad|iPhone|iPod/.test(navigator.userAgent) && !(self as any).MSStream) ||\n    (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);\n\n// @see https://developer.chrome.com/multidevice/user-agent\nexport const IS_SAFARI = /Safari\\//.test(navigator.userAgent);\nexport const IS_FIREFOX = /firefox/i.test(navigator.userAgent);\nexport const IS_OCULUS = /OculusBrowser/.test(navigator.userAgent);\nexport const IS_IOS_CHROME = IS_IOS && /CriOS\\//.test(navigator.userAgent);\nexport const IS_IOS_SAFARI = IS_IOS && IS_SAFARI;\n\nexport const IS_SCENEVIEWER_CANDIDATE = IS_ANDROID && !IS_FIREFOX && !IS_OCULUS;\n\n// Extend Window type with webkit property,\n// required to check if iOS is running within a WKWebView browser instance.\ndeclare global {\n    interface Window {\n      webkit?: any;\n    }\n}\n\nexport const IS_WKWEBVIEW = Boolean(window.webkit && window.webkit.messageHandlers);\n\n// If running in iOS Safari proper, and not within a WKWebView component instance, check for ARQL feature support.\n// Otherwise, if running in a WKWebView instance, check for known ARQL compatible iOS browsers, including:\n// Chrome (CriOS), Edge (EdgiOS), Firefox (FxiOS), Google App (GSA), DuckDuckGo (DuckDuckGo).\n// All other iOS browsers / apps will fail by default.\nexport const IS_AR_QUICKLOOK_CANDIDATE = (() => {\n    if(IS_IOS){\n        if(!IS_WKWEBVIEW){            \n            const tempAnchor = document.createElement('a');\n            return Boolean(tempAnchor.relList && tempAnchor.relList.supports && tempAnchor.relList.supports('ar'));\n        } else {\n            return  Boolean(/CriOS\\/|EdgiOS\\/|FxiOS\\/|GSA\\/|DuckDuckGo\\//.test(navigator.userAgent));\n        }\n    } else {\n        return false;\n    }\n})();\n"]}