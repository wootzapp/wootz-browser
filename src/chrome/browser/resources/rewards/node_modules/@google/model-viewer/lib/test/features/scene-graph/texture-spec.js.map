{"version":3,"file":"texture-spec.js","sourceRoot":"","sources":["../../../../src/test/features/scene-graph/texture-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Texture as ThreeTexture} from 'three';\n\nimport {$threeTexture} from '../../../features/scene-graph/image.js';\nimport {Texture} from '../../../features/scene-graph/texture.js';\nimport {$correlatedObjects} from '../../../features/scene-graph/three-dom-element.js';\nimport {ModelViewerElement} from '../../../model-viewer.js';\nimport {waitForEvent} from '../../../utilities.js';\nimport {assetPath} from '../../helpers.js';\n\n\n\nconst expect = chai.expect;\n\nconst ASTRONAUT_GLB_PATH = assetPath('models/Astronaut.glb');\nsuite('scene-graph/texture', () => {\n  suite('Texture', () => {\n    let element: ModelViewerElement;\n    let texture: Texture|null;\n\n    setup(async () => {\n      element = new ModelViewerElement();\n      element.src = ASTRONAUT_GLB_PATH;\n      document.body.insertBefore(element, document.body.firstChild);\n      await waitForEvent(element, 'load');\n\n      texture = await element.createTexture(assetPath(\n          'models/glTF-Sample-Models/2.0/BoxTextured/glTF/CesiumLogoFlat.png'));\n\n      element.model!.materials[0]\n          .pbrMetallicRoughness.baseColorTexture!.setTexture(texture);\n    });\n\n    teardown(() => {\n      document.body.removeChild(element);\n      texture = null;\n    });\n\n\n    test('Create a texture', async () => {\n      expect(texture).to.not.be.null;\n    });\n\n    test('Set a texture', async () => {\n      // Gets new UUID to compare with UUID of texture accessible through the\n      // material.\n      const newUUID: string|undefined = texture?.source[$threeTexture]?.uuid;\n\n      const threeTexture: ThreeTexture =\n          element.model!.materials[0]\n              .pbrMetallicRoughness.baseColorTexture?.texture\n              ?.source[$threeTexture]!;\n\n      expect(threeTexture.uuid).to.be.equal(newUUID);\n    });\n\n    test('Verify legacy correlatedObjects are updated.', async () => {\n      const newUUID: string|undefined = texture?.source[$threeTexture]?.uuid;\n\n      const uuidFromTextureObject: string =\n          (element.model!.materials[0]\n               .pbrMetallicRoughness.baseColorTexture?.texture\n               ?.[$correlatedObjects]\n               ?.values()\n               .next()\n               .value as ThreeTexture)\n              .uuid;\n      expect(uuidFromTextureObject).to.be.equal(newUUID);\n\n      const uuidFromSamplerObject: string =\n          (element.model!.materials[0]\n               .pbrMetallicRoughness.baseColorTexture?.texture\n               ?.sampler[$correlatedObjects]\n               ?.values()\n               .next()\n               .value as ThreeTexture)\n              .uuid;\n      expect(uuidFromSamplerObject).to.be.equal(newUUID);\n\n      const uuidFromImageObject: string =\n          (element.model!.materials[0]\n               .pbrMetallicRoughness.baseColorTexture?.texture\n               ?.source[$correlatedObjects]\n               ?.values()\n               .next()\n               .value as ThreeTexture)\n              .uuid;\n      expect(uuidFromImageObject).to.be.equal(newUUID);\n    });\n  });\n});\n"]}