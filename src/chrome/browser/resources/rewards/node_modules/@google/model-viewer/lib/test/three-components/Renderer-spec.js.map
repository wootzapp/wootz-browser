{"version":3,"file":"Renderer-spec.js","sourceRoot":"","sources":["../../../src/test/three-components/Renderer-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Vector2} from 'three';\n\nimport {$controls} from '../../features/controls.js';\nimport {$intersectionObserver, $isElementInViewport, $onResize, $renderer, $scene, $updateSize, Camera, RendererInterface} from '../../model-viewer-base.js';\nimport {ModelViewerElement} from '../../model-viewer.js';\nimport {ModelScene} from '../../three-components/ModelScene.js';\nimport {Renderer} from '../../three-components/Renderer.js';\nimport {resolveDpr, waitForEvent} from '../../utilities.js';\nimport {assetPath} from '../helpers.js';\n\nconst expect = chai.expect;\nlet externalCamera: Camera;\nlet externalWidth = 0;\nlet externalHeight = 0;\n\nclass ExternalRenderer implements RendererInterface {\n  load(callback: (progress: number) => void) {\n    callback(1.0);\n    return Promise.resolve({framedRadius: 15, fieldOfViewAspect: 2});\n  }\n  render(camera: Camera) {\n    externalCamera = camera;\n  }\n  resize(width: number, height: number) {\n    externalWidth = width;\n    externalHeight = height;\n  }\n}\n\nfunction createScene(external: boolean = false): ModelScene {\n  const element = new ModelViewerElement();\n  document.body.insertBefore(element, document.body.firstChild);\n  element[$intersectionObserver]!.unobserve(element);\n  element[$isElementInViewport] = false;\n\n  if (external) {\n    const externalRenderer = new ExternalRenderer();\n    element.registerRenderer(externalRenderer);\n  }\n  element.src = assetPath('models/Astronaut.glb');\n\n  // manual render loop\n  element[$renderer].threeRenderer.setAnimationLoop(null);\n\n  return element[$scene];\n}\n\nfunction disposeScene(scene: ModelScene) {\n  const {element} = scene;\n  if (scene.externalRenderer != null) {\n    element.unregisterRenderer();\n  }\n  if (element.parentNode != null) {\n    element.parentNode.removeChild(element);\n  }\n}\n\nsuite('Renderer with two scenes', () => {\n  let scene: ModelScene;\n  let otherScene: ModelScene;\n  let renderer: Renderer;\n\n  setup(() => {\n    renderer = Renderer.singleton;\n    // Ensure tests are not rescaling\n    ModelViewerElement.minimumRenderScale = 1;\n    scene = createScene();\n    otherScene = createScene();\n  });\n\n  teardown(() => {\n    disposeScene(scene);\n    disposeScene(otherScene);\n    renderer.render(performance.now());\n  });\n\n  test('pre-renders eager, invisible scenes', async () => {\n    const sourceLoads = waitForEvent(scene.element, 'load');\n    (scene.element as ModelViewerElement).loading = 'eager';\n    await sourceLoads;\n\n    renderer.render(performance.now());\n    expect(scene.renderCount).to.be.equal(1, 'scene first render');\n    expect(otherScene.renderCount).to.be.equal(0, 'otherScene first render');\n  });\n\n  suite('and an externally-rendered scene', () => {\n    let externalScene: ModelScene;\n    let externalElement: ModelViewerElement;\n\n    setup(() => {\n      externalScene = createScene(true);\n      externalElement = externalScene.element as any;\n    });\n\n    teardown(() => {\n      disposeScene(externalScene);\n      renderer.render(performance.now());\n    });\n\n    test('load sets framing', async () => {\n      expect(externalScene.idealAspect).to.be.eq(0);\n\n      const sourceLoads = waitForEvent(externalScene.element, 'load');\n      externalElement[$isElementInViewport] = true;\n      await sourceLoads;\n\n      expect(externalScene.idealAspect).to.be.eq(2);\n      expect((externalElement as any)[$controls].options.minimumRadius)\n          .to.be.greaterThan(15);\n    });\n\n    test('camera-orbit updates camera in external render method', async () => {\n      const sceneVisible = waitForEvent(externalElement, 'poster-dismissed');\n      externalElement[$isElementInViewport] = true;\n      await sceneVisible;\n\n      const time = performance.now();\n      renderer.render(time);\n      const cameraY = externalCamera.viewMatrix[13];\n      expect(cameraY).to.not.eq(0);\n\n      externalElement.cameraOrbit = '45deg 45deg 1.6m';\n      await externalElement.updateComplete;\n\n      renderer.render(time + 1000);\n\n      expect(externalCamera.viewMatrix[13]).to.not.eq(cameraY);\n    });\n\n    test('resize forwards pixel dimensions', () => {\n      const width = 200;\n      const height = 400;\n      externalElement[$onResize]({width, height});\n\n      const dpr = resolveDpr();\n      expect(externalWidth).to.be.eq(width * dpr);\n      expect(externalHeight).to.be.eq(height * dpr);\n    });\n  });\n\n  suite('with two loaded scenes', () => {\n    setup(async () => {\n      const sceneVisible = waitForEvent(scene.element, 'poster-dismissed');\n      const otherSceneVisible =\n          waitForEvent(otherScene.element, 'poster-dismissed');\n      scene.element[$isElementInViewport] = true;\n      otherScene.element[$isElementInViewport] = true;\n      await Promise.all([sceneVisible, otherSceneVisible]);\n    });\n\n    test('renders only dirty scenes', () => {\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(1, 'scene first render');\n      expect(otherScene.renderCount).to.be.equal(1, 'otherScene first render');\n\n      scene.queueRender();\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(2, 'scene second render');\n      expect(otherScene.renderCount).to.be.equal(1, 'otherScene second render');\n    });\n\n    test('renders only visible scenes', () => {\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(1, 'scene first render');\n      expect(otherScene.renderCount).to.be.equal(1, 'otherScene first render');\n\n      scene.queueRender();\n      otherScene.queueRender();\n      otherScene.element[$isElementInViewport] = false;\n\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(2, 'scene second render');\n      expect(otherScene.renderCount).to.be.equal(1, 'otherScene second render');\n    });\n\n    test('uses the proper canvas when unregistering scenes', () => {\n      renderer.render(performance.now());\n\n      expect(renderer.canvas3D.parentElement).to.be.not.ok;\n      expect(scene.canvas.classList.contains('show'))\n          .to.be.eq(true, 'scene canvas should be shown with multiple scenes.');\n      expect(otherScene.canvas.classList.contains('show'))\n          .to.be.eq(\n              true, 'otherScene canvas should be shown with multiple scenes.');\n\n      renderer.unregisterScene(scene);\n      otherScene.queueRender();\n      renderer.render(performance.now());\n\n      expect(renderer.canvas3D.parentElement)\n          .to.be.eq(\n              otherScene.canvas.parentElement,\n              'webgl canvas should be shown with single scene.');\n      expect(otherScene.canvas.classList.contains('show'))\n          .to.be.eq(\n              false,\n              'otherScene canvas should not be shown when it is the only scene.');\n    });\n\n    test('when unregistering, does not re-render when not dirty', () => {\n      renderer.render(performance.now());\n      renderer.unregisterScene(scene);\n      renderer.render(performance.now());\n\n      expect(scene.renderCount)\n          .to.be.equal(1, 'scene should have rendered once');\n      expect(otherScene.renderCount)\n          .to.be.equal(1, 'otherScene should have rendered once');\n      expect(renderer.canvas3D.parentElement).to.be.not.ok;\n      expect(otherScene.canvas.classList.contains('show'))\n          .to.be.eq(true, 'otherScene canvas should still be shown.');\n    });\n\n    test(\n        'When registered, the scene canvas dimensions match the renderer size',\n        () => {\n          renderer.render(performance.now());\n          const oldSize = new Vector2();\n          renderer.threeRenderer.getSize(oldSize);\n\n          renderer.unregisterScene(scene);\n          otherScene.element[$updateSize]({width: 400, height: 200});\n          renderer.render(performance.now());\n\n          const size = new Vector2();\n          renderer.threeRenderer.getSize(size);\n          expect(size.x).to.be.greaterThan(oldSize.width, 'renderer width');\n          expect(size.y).to.be.greaterThan(oldSize.height, 'renderer height');\n\n          renderer.registerScene(scene);\n          renderer.render(performance.now());\n          expect(scene.canvas.width).to.be.eq(size.x, 'canvas width');\n          expect(scene.canvas.height).to.be.eq(size.y, 'canvas height');\n        });\n\n    suite('when resizing', () => {\n      let originalDpr: number;\n\n      setup(() => {\n        originalDpr = self.devicePixelRatio;\n      });\n\n      teardown(() => {\n        Object.defineProperty(self, 'devicePixelRatio', {value: originalDpr});\n      });\n\n      test('updates effective DPR', () => {\n        const {element} = scene;\n        const initialDpr = renderer.dpr;\n        const {width, height} = scene.getSize();\n\n        element[$onResize]({width, height});\n\n        Object.defineProperty(\n            self, 'devicePixelRatio', {value: initialDpr + 1});\n\n        renderer.render(performance.now());\n\n        const newDpr = renderer.dpr;\n\n        expect(newDpr).to.be.equal(initialDpr + 1);\n      });\n    });\n  });\n});\n"]}