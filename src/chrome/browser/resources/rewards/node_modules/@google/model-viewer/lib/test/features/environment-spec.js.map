{"version":3,"file":"environment-spec.js","sourceRoot":"","sources":["../../../src/test/features/environment-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Texture} from 'three';\n\nimport {BASE_OPACITY} from '../../features/environment.js';\nimport ModelViewerElementBase, {$scene} from '../../model-viewer-base.js';\nimport {ModelViewerElement} from '../../model-viewer.js';\nimport {ModelScene} from '../../three-components/ModelScene.js';\nimport {Renderer} from '../../three-components/Renderer.js';\nimport {timePasses, waitForEvent} from '../../utilities.js';\nimport {assetPath, rafPasses} from '../helpers.js';\n\nconst expect = chai.expect;\nconst ALT_BG_IMAGE_URL = assetPath('environments/white_furnace.hdr');\nconst HDR_BG_IMAGE_URL = assetPath('environments/spruit_sunrise_1k_HDR.hdr');\nconst MODEL_URL = assetPath('models/reflective-sphere.gltf');\n\n/**\n * Returns a promise that resolves when a given element is loaded\n * and has an environment map set that matches the passed in meta.\n */\nconst waitForLoadAndEnvMap = (element: ModelViewerElementBase) => {\n  const load = waitForEvent(element, 'poster-dismissed');\n  const envMap = waitForEvent(element[$scene], 'envmap-update');\n  return Promise.all([load, envMap]);\n};\n\nsuite('Environment', () => {\n  suiteTeardown(() => {\n    Renderer.resetSingleton();\n  });\n\n  let element: ModelViewerElement;\n  let scene: ModelScene;\n\n  setup(() => {\n    element = new ModelViewerElement();\n    scene = element[$scene];\n  });\n\n  teardown(() => element.parentNode && element.parentNode.removeChild(element));\n\n  test('only generates an environment when in the render tree', async () => {\n    let environmentChangeCount = 0;\n    const environmentChangeHandler = () => environmentChangeCount++;\n    element.addEventListener('environment-change', environmentChangeHandler);\n    element.style.display = 'none';\n    element.src = MODEL_URL;\n    document.body.insertBefore(element, document.body.firstChild);\n    await rafPasses();\n    expect(environmentChangeCount).to.be.eq(0);\n    element.style.display = 'block';\n    await waitForEvent(element, 'environment-change');\n    expect(environmentChangeCount).to.be.eq(1);\n    element.removeEventListener('environment-change', environmentChangeHandler);\n  });\n\n  suite('with no skybox-image property', () => {\n    let environmentChanges = 0;\n    suite('and a src property', () => {\n      setup(async () => {\n        const onLoad = waitForLoadAndEnvMap(element);\n        element.src = MODEL_URL;\n        document.body.insertBefore(element, document.body.firstChild);\n\n        environmentChanges = 0;\n        scene.addEventListener('envmap-update', () => {\n          environmentChanges++;\n        });\n        await onLoad;\n      });\n\n      teardown(() => {\n        document.body.removeChild(element);\n      });\n\n      test('applies a generated environment map on model', async function() {\n        expect(scene.environment!.name).to.be.eq('neutral');\n      });\n\n      test('changes the environment exactly once', async function() {\n        expect(environmentChanges).to.be.eq(1);\n      });\n    });\n  });\n\n  suite('exposure', () => {\n    setup(async () => {\n      element.src = MODEL_URL;\n      document.body.insertBefore(element, document.body.firstChild);\n      await waitForEvent(element, 'poster-dismissed');\n      scene.visible = true;\n    });\n\n    teardown(() => {\n      document.body.removeChild(element);\n    });\n\n    test('changes the tone mapping exposure of the renderer', async () => {\n      const renderer = Renderer.singleton;\n      const originalToneMappingExposure =\n          renderer.threeRenderer.toneMappingExposure;\n      element.exposure = 2.0;\n      await timePasses();\n      renderer.render(performance.now());\n\n      const newToneMappingExposure = renderer.threeRenderer.toneMappingExposure;\n\n      expect(newToneMappingExposure)\n          .to.be.greaterThan(originalToneMappingExposure);\n    });\n  });\n\n  suite('shadow-intensity', () => {\n    setup(async () => {\n      element.src = MODEL_URL;\n      document.body.insertBefore(element, document.body.firstChild);\n      await waitForEvent(element, 'poster-dismissed');\n    });\n\n    teardown(() => {\n      document.body.removeChild(element);\n    });\n\n    test('changes the opacity of the static shadow', async () => {\n      element.shadowIntensity = 1.0;\n      await timePasses();\n      const newIntensity = scene.shadow!.getIntensity();\n      expect(newIntensity).to.be.eq(BASE_OPACITY);\n    });\n  });\n\n  suite('environment-image', () => {\n    setup(async () => {\n      const onLoad = waitForLoadAndEnvMap(element);\n      element.setAttribute('src', MODEL_URL);\n      element.setAttribute('environment-image', HDR_BG_IMAGE_URL);\n      document.body.insertBefore(element, document.body.firstChild);\n      await onLoad;\n    });\n\n    teardown(() => {\n      document.body.removeChild(element);\n    });\n\n    test('applies environment-image environment map on model', () => {\n      expect(scene.environment!.name).to.be.eq(element.environmentImage);\n    });\n\n    suite('and environment-image subsequently removed', () => {\n      setup(async () => {\n        const envMapChanged = waitForEvent(scene, 'envmap-update');\n        element.removeAttribute('environment-image');\n        await envMapChanged;\n      });\n\n      test('reapplies generated environment map on model', () => {\n        expect(scene.environment!.name).to.be.eq('neutral');\n      });\n    });\n  });\n\n  suite('with skybox-image property', () => {\n    setup(async () => {\n      const onLoad = waitForLoadAndEnvMap(element);\n      element.setAttribute('src', MODEL_URL);\n      element.setAttribute('skybox-image', HDR_BG_IMAGE_URL);\n      document.body.insertBefore(element, document.body.firstChild);\n      await onLoad;\n    });\n\n    teardown(() => {\n      document.body.removeChild(element);\n    });\n\n    test('displays background with skybox-image', async function() {\n      expect((scene.background as Texture).name).to.be.eq(element.skyboxImage);\n    });\n\n    test('applies skybox-image environment map on model', async function() {\n      expect(scene.environment!.name).to.be.eq(element.skyboxImage);\n    });\n\n    suite('with an environment-image', () => {\n      setup(async () => {\n        const environmentChanged = waitForEvent(element, 'environment-change');\n        element.setAttribute('environment-image', ALT_BG_IMAGE_URL);\n        await environmentChanged;\n      });\n\n      test('prefers environment-image as environment map', () => {\n        expect(scene.environment!.name).to.be.eq(ALT_BG_IMAGE_URL);\n      });\n\n      suite('and environment-image subsequently removed', () => {\n        setup(async () => {\n          const environmentChanged =\n              waitForEvent(element, 'environment-change');\n          element.removeAttribute('environment-image');\n          await environmentChanged;\n        });\n\n        test('uses skybox-image as environment map', () => {\n          expect(scene.environment!.name).to.be.eq(HDR_BG_IMAGE_URL);\n        });\n      });\n\n      suite('and skybox-image subsequently removed', () => {\n        setup(async () => {\n          const envMapChanged = waitForEvent(scene, 'envmap-update');\n          element.removeAttribute('skybox-image');\n          await envMapChanged;\n        });\n\n        test('continues using environment-image as environment map', () => {\n          expect(scene.environment!.name).to.be.eq(ALT_BG_IMAGE_URL);\n        });\n\n        test('removes the background', async function() {\n          expect(scene.background).to.be.null;\n        });\n      });\n    });\n\n    suite('and skybox-image subsequently removed', () => {\n      setup(async () => {\n        const envMapChanged = waitForEvent(scene, 'envmap-update');\n        element.removeAttribute('skybox-image');\n        await envMapChanged;\n      });\n\n      test('removes the background', async function() {\n        expect(scene.background).to.be.null;\n      });\n\n      test('reapplies generated environment map on model', async function() {\n        expect(scene.environment!.name).to.be.eq('neutral');\n      });\n    });\n  });\n});\n"]}