{"version":3,"file":"Hotspot-spec.js","sourceRoot":"","sources":["../../../src/test/three-components/Hotspot-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Hotspot, HotspotVisibilityDetails} from '../../three-components/Hotspot.js';\nimport {waitForEvent} from '../../utilities.js';\n\nconst expect = chai.expect;\n\nsuite('Hotspot', () => {\n  suite('with only a name', () => {\n    test('has a DOM element', () => {\n      expect(new Hotspot({name: 'foo'}).element).to.be.ok;\n    });\n  });\n\n\n  suite('with assigned nodes', () => {\n    let host: HTMLElement;\n    let assigned: HTMLElement;\n\n    setup(() => {\n      host = document.createElement('div');\n      host.attachShadow({mode: 'open'});\n\n      assigned = document.createElement('div');\n      host.appendChild(assigned);\n\n      document.body.insertBefore(host, document.body.firstChild);\n    });\n\n    teardown(() => {\n      document.body.removeChild(host);\n    });\n\n    suite('with a configured visibilityAttribute', () => {\n      let hotspot: Hotspot;\n\n      setup(async () => {\n        hotspot = new Hotspot({name: 'foo'});\n        host.shadowRoot!.appendChild(hotspot.element);\n        assigned.slot = 'foo';\n        assigned.setAttribute('data-visibility-attribute', 'bar');\n      });\n\n      suite('when shown', () => {\n        setup(() => {\n          hotspot.show();\n        });\n\n        test('adds a corresponding data-* attribute to assigned nodes', () => {\n          expect(assigned.hasAttribute('data-bar')).to.be.true;\n        });\n\n        suite('and then hidden', () => {\n          setup(() => {\n            hotspot.hide();\n          });\n\n          test('removes the corresponding data-* attribute', () => {\n            expect(assigned.hasAttribute('data-bar')).to.be.false;\n          });\n        });\n      });\n    });\n\n    suite('when shown', () => {\n      let event: CustomEvent<HotspotVisibilityDetails>;\n      let hotspot: Hotspot;\n\n      setup(async () => {\n        hotspot = new Hotspot({name: 'foo'});\n        host.shadowRoot!.appendChild(hotspot.element);\n\n        assigned.slot = 'foo';\n\n        const assignedNodeHides = waitForEvent(assigned, 'hotspot-visibility');\n\n        hotspot.show();\n\n        event = await (\n            assignedNodeHides as\n            Promise<CustomEvent<HotspotVisibilityDetails>>);\n      });\n\n      test('dispatches a \"visibility-change\" on assigned nodes', async () => {\n        expect(event.detail.visible).to.be.true;\n      });\n\n\n      suite('and then hidden', () => {\n        test('dispatches a \"visibility-change\" on assigned nodes', async () => {\n          const assignedNodeHides =\n              waitForEvent(assigned, 'hotspot-visibility');\n\n          hotspot.hide();\n\n          const event = await (\n              assignedNodeHides as\n              Promise<CustomEvent<HotspotVisibilityDetails>>);\n\n          expect(event.detail.visible).to.be.false;\n        });\n      });\n    });\n  });\n});"]}