{"version":3,"file":"animation-spec.js","sourceRoot":"","sources":["../../../src/test/features/animation-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {$scene} from '../../model-viewer-base.js';\nimport {ModelViewerElement} from '../../model-viewer.js';\nimport {timePasses, waitForEvent} from '../../utilities.js';\nimport {assetPath} from '../helpers.js';\n\nconst expect = chai.expect;\n\nconst TOLERANCE_SEC = 0.1;\nconst NON_ANIMATED_GLB_PATH = assetPath('models/Astronaut.glb');\nconst ANIMATED_GLB_PATH = assetPath('models/RobotExpressive.glb');\nconst ANIMATED_GLB_DUPLICATE_ANIMATION_NAMES_PATH =\n    assetPath('models/DuplicateAnimationNames.glb');\n\nconst animationIsPlaying = (element: any, animationName?: string): boolean => {\n  const {currentAnimationAction} = element[$scene];\n\n  if (currentAnimationAction != null &&\n      (animationName == null ||\n       currentAnimationAction.getClip().name === animationName)) {\n    return element.paused === false &&\n        currentAnimationAction.enabled === true &&\n        !currentAnimationAction.paused;\n  }\n\n  return false;\n};\n\nconst animationWithIndexIsPlaying = (element: any, animationIndex = 0):\n    boolean => {\n      const {currentAnimationAction} = element[$scene];\n      const {_currentGLTF} = element[$scene];\n\n      if (currentAnimationAction != null && animationIndex >= 0 &&\n          animationIndex < _currentGLTF.animations.length &&\n          currentAnimationAction.getClip() ==\n              _currentGLTF.animations[animationIndex]) {\n        return element.paused === false &&\n            currentAnimationAction.enabled === true &&\n            !currentAnimationAction.paused;\n      }\n\n      return false;\n    }\n\nsuite('Animation', () => {\n  suite('a model with animations', () => {\n    let element: ModelViewerElement;\n\n    setup(async () => {\n      element = new ModelViewerElement();\n      element.src = ANIMATED_GLB_PATH;\n      document.body.insertBefore(element, document.body.firstChild);\n\n      await waitForEvent(element, 'poster-dismissed');\n    });\n\n    teardown(() => {\n      document.body.removeChild(element);\n    });\n\n    test('remains in a paused state', () => {\n      expect(element.paused).to.be.true;\n    });\n\n    suite('when play is invoked with no options', () => {\n      setup(async () => {\n        const animationsPlay = waitForEvent(element, 'play');\n        element.play();\n        await animationsPlay;\n      });\n\n      test('animations play', async () => {\n        expect(animationIsPlaying(element)).to.be.true;\n      });\n\n      test('has a duration greater than 0', () => {\n        expect(element.duration).to.be.greaterThan(0);\n      });\n\n      suite('when pause is invoked after a delay', () => {\n        const delaySeconds = 0.2;\n        setup(async () => {\n          await timePasses(1000 * delaySeconds);\n          const animationsPause = waitForEvent(element, 'pause');\n          element.pause();\n          await animationsPause;\n        });\n\n        test('animations pause', () => {\n          expect(animationIsPlaying(element)).to.be.false;\n        });\n\n        test('has a current time close to the delay', () => {\n          expect(element.currentTime)\n              .to.be.closeTo(delaySeconds, TOLERANCE_SEC);\n        });\n\n        test('changing currentTime triggers render', () => {\n          element.currentTime = 5;\n          expect(element[$scene].shouldRender()).to.be.true;\n        });\n\n        suite('when play is invoked again', () => {\n          setup(async () => {\n            const animationsPlay = waitForEvent(element, 'play');\n            element.play();\n            await animationsPlay;\n          });\n\n          test('animations play', () => {\n            expect(animationIsPlaying(element)).to.be.true;\n          });\n\n          test('has a duration greater than 0', () => {\n            expect(element.duration).to.be.greaterThan(0);\n          });\n\n          test('has a current time close to the delay', () => {\n            expect(element.currentTime)\n                .to.be.closeTo(delaySeconds, TOLERANCE_SEC);\n          });\n        })\n      });\n    });\n\n    suite('when play is invoked with options', () => {\n      setup(async () => {\n        element.animationName = 'Punch';\n        await element.updateComplete;\n        const animationsPlay = waitForEvent(element, 'play');\n        element.play({repetitions: 2, pingpong: true});\n        await animationsPlay;\n      });\n\n      test('plays forward, backward, and stops', async () => {\n        await timePasses(element.duration * 0.8 * 1000);\n        expect(animationIsPlaying(element), 'failed to start playing!')\n            .to.be.true;\n        const t = element.currentTime;\n\n        await timePasses(element.duration * 1.0 * 1000);\n        expect(animationIsPlaying(element), 'not playing after 1.8 * duration!')\n            .to.be.true;\n        expect(element.currentTime, 'not playing backwards!').to.be.lessThan(t);\n\n        await timePasses(element.duration * 0.4 * 1000);\n        expect(animationIsPlaying(element), 'failed to stop playing!')\n            .to.be.false;\n        expect(element.currentTime, 'did not return to beginning of animation!')\n            .to.be.equal(0);\n      });\n    });\n\n    suite('when configured to autoplay', () => {\n      setup(async () => {\n        element.autoplay = true;\n        await timePasses();\n      });\n\n      test('plays an animation', () => {\n        expect(animationIsPlaying(element)).to.be.true;\n      });\n\n      test('has a duration greater than 0', () => {\n        expect(element.duration).to.be.greaterThan(0);\n      });\n\n      test('plays the first animation by default', () => {\n        expect(animationIsPlaying(element, element.availableAnimations[0]))\n            .to.be.true;\n      });\n\n      suite('with a specified animation-name', () => {\n        setup(async () => {\n          element.animationName = element.availableAnimations[1];\n          await timePasses();\n        });\n\n        test('plays the specified animation', () => {\n          expect(animationIsPlaying(element, element.availableAnimations[1]))\n              .to.be.true;\n        });\n      });\n\n      suite('with an invalid animation-name', () => {\n        setup(async () => {\n          element.animationName = 'invalid-animation-name';\n          await timePasses();\n        });\n\n        test('plays the first animation', () => {\n          expect(animationIsPlaying(element, element.availableAnimations[0]))\n              .to.be.true;\n        });\n      });\n\n      suite('with a specified index as animation-name', () => {\n        setup(async () => {\n          element.animationName = '1';\n          await timePasses();\n        });\n\n        test('plays the specified animation', () => {\n          expect(animationWithIndexIsPlaying(element, 1)).to.be.true;\n        });\n      });\n\n      suite('with an invalid index as animation-name', () => {\n        setup(async () => {\n          element.animationName = '-1';\n          await timePasses();\n        });\n\n        test('plays the first animation', () => {\n          expect(animationWithIndexIsPlaying(element, 0)).to.be.true;\n        });\n      });\n\n      suite('a model with duplicate animation names', () => {\n        setup(async () => {\n          element.src = ANIMATED_GLB_DUPLICATE_ANIMATION_NAMES_PATH;\n          await waitForEvent(element, 'load');\n          element.animationName = '1';\n          await timePasses();\n        });\n\n        test('plays the specified animation', () => {\n          expect(animationWithIndexIsPlaying(element, 1)).to.be.true;\n        });\n\n        suite('when playing a duplicate animation by name', () => {\n          setup(async () => {\n            element.animationName = element.availableAnimations[1];\n            await timePasses();\n          });\n\n          test(\n              'fails to play the specified animation and plays the last animation with that name instead',\n              () => {\n                expect(animationWithIndexIsPlaying(element, 3)).to.be.true;\n              });\n        });\n      });\n\n      suite('a model without animations', () => {\n        setup(async () => {\n          element.src = NON_ANIMATED_GLB_PATH;\n          await waitForEvent(element, 'load');\n        });\n\n        test('does not play an animation', () => {\n          expect(animationIsPlaying(element)).to.be.false;\n        });\n\n        test('has a duration of 0', () => {\n          expect(element.duration).to.be.equal(0);\n        });\n\n        suite('with a specified animation-name', () => {\n          setup(async () => {\n            element.animationName = element.availableAnimations[1];\n            await timePasses();\n          });\n\n          test('does not play an animation', () => {\n            expect(animationIsPlaying(element)).to.be.false;\n          });\n        });\n\n        suite('with a specified animation by index', () => {\n          setup(async () => {\n            element.animationName = '1';\n            await timePasses();\n          });\n\n          test('does not play an animation', () => {\n            expect(animationIsPlaying(element)).to.be.false;\n          });\n        });\n      });\n    });\n  });\n});\n"]}