{"version":3,"file":"utilities-spec.js","sourceRoot":"","sources":["../../src/test/utilities-spec.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAEH,OAAO,EAAC,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,IAAI,EAAC,MAAM,iBAAiB,CAAC;AAExE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE;IAClB,KAAK,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC3B,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAC3C,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAC/C,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC9D,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;YAEjC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,YAAY,EAAE,GAAG,EAAE;QACvB,KAAK,CAAC,wCAAwC,EAAE,GAAG,EAAE;YACnD,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;gBAC3C,MAAM,WAAW,GAAG,UAAU,EAAE,CAAC;gBACjC,wDAAwD;gBACxD,6DAA6D;gBAC7D,YAAY;gBACZ,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAExC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACvD,IAAI,CAAC,IAAI,CACL,kCAAkC,EAClC,GAAG,EAAE;gBACD,yDAAyD;gBACzD,qCAAqC;gBACrC,QAAQ;gBACR,oDAAoD;YACxD,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE;QACjB,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAC3C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAC3C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE;QAClB,IAAI,CAAC,mDAAmD,EAAE,GAAG,EAAE;YAC7D,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mDAAmD,EAAE,GAAG,EAAE;YAC7D,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iDAAiD,EAAE,GAAG,EAAE;YAC3D,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {clamp, deserializeUrl, resolveDpr, step} from '../utilities.js';\n\nconst expect = chai.expect;\n\nsuite('utils', () => {\n  suite('deserializeUrl', () => {\n    test('returns a string given a string', () => {\n      expect(deserializeUrl('foo')).to.be.a('string');\n    });\n\n    test('returns null given a null-ish value', () => {\n      expect(deserializeUrl(null)).to.be.equal(null);\n    });\n\n    test('yields a url on the same origin for relative paths', () => {\n      const {origin} = window.location;\n\n      expect(deserializeUrl('foo')!.indexOf(origin)).to.be.equal(0);\n    });\n  });\n\n  suite('resolveDpr', () => {\n    suite('when <meta name=\"viewport\"> is present', () => {\n      test('resolves the device pixel ratio', () => {\n        const resolvedDpr = resolveDpr();\n        // NOTE(cdata): The main test frame is assumed to have a\n        // <meta name=\"viewport\">. If this changes, it is probably by\n        // accident.\n        const actualDpr = self.devicePixelRatio;\n\n        expect(resolvedDpr).to.be.equal(actualDpr);\n      });\n    });\n\n    suite('when <meta name=\"viewport\"> is not present', () => {\n      test.skip(\n          'caps the device pixel ratio to 1',\n          () => {\n              // There is not a good way to test this given the current\n              // factoring and bundling constraints\n              // TODO:\n              // https://github.com/google/model-viewer/issues/262\n          });\n    });\n  });\n\n  suite('step', () => {\n    test('returns 0 for values below edge', () => {\n      expect(step(0.5, 0.1)).to.be.equal(0);\n    });\n\n    test('returns 1 for values above edge', () => {\n      expect(step(0.5, 0.9)).to.be.equal(1);\n    });\n  });\n\n  suite('clamp', () => {\n    test('numbers below lower limit adjusted to lower limit', () => {\n      expect(clamp(1.0, 2.0, 3.0)).to.be.equal(2.0);\n    });\n\n    test('numbers above upper limit adjusted to upper limit', () => {\n      expect(clamp(4.0, 2.0, 3.0)).to.be.equal(3.0);\n    });\n\n    test('numbers within lower and upper limits unchanged', () => {\n      expect(clamp(2.5, 2.0, 3.0)).to.be.equal(2.5);\n    });\n  });\n});\n"]}