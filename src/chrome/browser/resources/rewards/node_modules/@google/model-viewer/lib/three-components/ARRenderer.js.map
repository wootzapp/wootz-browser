{"version":3,"file":"ARRenderer.js","sourceRoot":"","sources":["../../src/three-components/ARRenderer.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAEH,OAAO,EAAsB,eAAe,EAAE,OAAO,EAAE,iBAAiB,EAAE,OAAO,EAAgB,MAAM,OAAO,CAAC;AAC/G,OAAO,EAAC,gBAAgB,EAAC,MAAM,8CAA8C,CAAC;AAG9E,OAAO,EAAC,kBAAkB,EAAE,sBAAsB,EAAC,MAAM,4BAA4B,CAAC;AACtF,OAA+B,EAAC,SAAS,EAAC,MAAM,yBAAyB,CAAC;AAC1E,OAAO,EAAC,mBAAmB,EAAC,MAAM,iBAAiB,CAAC;AAEpD,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AAEnC,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAG/C,2EAA2E;AAC3E,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,8EAA8E;AAC9E,0DAA0D;AAC1D,MAAM,mBAAmB,GAAG,GAAG,CAAC;AAChC,MAAM,aAAa,GAAG,GAAG,CAAC;AAC1B,8EAA8E;AAC9E,4EAA4E;AAC5E,wEAAwE;AACxE,6EAA6E;AAC7E,yBAAyB;AACzB,MAAM,aAAa,GAAG,EAAE,CAAC;AACzB,MAAM,eAAe,GAAG,GAAG,CAAC;AAC5B,MAAM,cAAc,GAAG,CAAC,GAAG,eAAe,CAAC;AAC3C,8EAA8E;AAC9E,SAAS;AACT,MAAM,kBAAkB,GAAG,IAAI,CAAC;AAChC,iDAAiD;AACjD,MAAM,YAAY,GAAG,EAAE,CAAC;AAKxB,MAAM,CAAC,MAAM,QAAQ,GAAgC;IACnD,cAAc,EAAE,gBAAgB;IAChC,eAAe,EAAE,iBAAiB;IAClC,aAAa,EAAE,eAAe;IAC9B,MAAM,EAAE,QAAQ;CACjB,CAAC;AAQF,MAAM,CAAC,MAAM,UAAU,GAAkC;IACvD,QAAQ,EAAE,UAAU;IACpB,YAAY,EAAE,cAAc;CAC7B,CAAC;AAMF,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;AAC9B,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;AAC9B,MAAM,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;AAClC,MAAM,MAAM,GAAG,IAAI,iBAAiB,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAEtD,MAAM,OAAO,UAAW,SAAQ,eAAe;IAyC7C,YAAoB,QAAkB;QACpC,KAAK,EAAE,CAAC;QADU,aAAQ,GAAR,QAAQ,CAAU;QAvC/B,mBAAc,GAAmB,IAAI,CAAC;QACtC,gBAAW,GAAG,KAAK,CAAC;QAEnB,iBAAY,GAAsB,IAAI,CAAC;QACvC,aAAQ,GAAgB,IAAI,CAAC;QAC7B,sBAAiB,GAAgB,IAAI,CAAC;QACtC,uBAAkB,GAAgB,IAAI,CAAC;QACvC,UAAK,GAAiB,IAAI,CAAC;QAC3B,qBAAgB,GAAyB,IAAI,CAAC;QAC9C,2BAAsB,GAAuC,IAAI,CAAC;QAClE,gBAAW,GAAuB,IAAI,CAAC;QACvC,oBAAe,GAAoB,IAAI,CAAC;QACxC,mBAAc,GAAoC,IAAI,CAAC;QACvD,6BAAwB,GAAqB,IAAI,CAAC;QAClD,YAAO,GAAqB,IAAI,CAAC;QACjC,YAAO,GAA0B,IAAI,CAAC;QAEtC,aAAQ,GAAG,IAAI,CAAC;QAChB,WAAM,GAAG,CAAC,CAAC;QACX,gBAAW,GAAG,KAAK,CAAC;QACpB,cAAS,GAAG,IAAI,OAAO,EAAE,CAAC;QAC1B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,kBAAa,GAAG,KAAK,CAAC;QACtB,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QACvB,qBAAgB,GAAG,IAAI,OAAO,EAAE,CAAC;QACjC,eAAU,GAAG,CAAC,CAAC;QACf,cAAS,GAAG,CAAC,CAAC;QACd,iBAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QAC7B,YAAO,GAAG,CAAC,CAAC;QACZ,cAAS,GAAG,CAAC,CAAC;QACd,YAAO,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,YAAO,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,YAAO,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,cAAS,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,gBAAW,GAAG,IAAI,MAAM,EAAE,CAAC;QAE3B,oCAA+B,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QA8LtE,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;gBAClD,IAAI,CAAC,YAAa,CAAC,OAAO,EAAE,CAAC;gBAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAChC,IAAI,CAAC,cAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aACjE;QACH,CAAC,CAAC;QA0NM,kBAAa,GAAG,CAAC,KAAY,EAAE,EAAE;YACvC,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC;YAC9C,IAAI,SAAS,IAAI,IAAI,EAAE;gBACrB,OAAO;aACR;YACD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAM,CAAC,kCAAkC,CAAC,SAAS,CAAC,CAAC;YAC1E,MAAM,KAAK,GAAG,IAAI,CAAC,cAAe,CAAC;YACnC,MAAM,GAAG,GAAG,IAAI,CAAC,YAAa,CAAC;YAE/B,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,IAAI,CAAC,WAAW,GAAI,KAA4B,CAAC,WAAW,CAAC;gBAC7D,MAAM,EAAC,IAAI,EAAC,GAAG,IAAI,CAAC,WAAY,CAAC,OAAQ,CAAC;gBAE1C,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,cAAe,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvE,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;gBAEhB,IAAI,WAAW,IAAI,IAAI,EAAE;oBACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBACzC;qBAAM,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;oBACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;iBAC1C;aACF;iBAAM,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/B,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;gBAChB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,MAAM,EAAC,UAAU,EAAC,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;aAC9C;QACH,CAAC,CAAC;QAEM,gBAAW,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,CAAC;gBACf,IAAI,CAAC,YAAa,CAAC,YAAY,GAAG,IAAI,CAAC,cAAe,CAAC,KAAK,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,YAAa,CAAC,IAAI,GAAG,KAAK,CAAA;QACjC,CAAC,CAAC;QAjcA,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;QAC5C,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,mBAAmB,EAAE,CAAC;QAEtB,MAAM,OAAO,GACT,MAAM,SAAS,CAAC,EAAG,CAAC,cAAe,CAAC,cAAc,EAAE;YAClD,gBAAgB,EAAE,CAAC,UAAU,CAAC;YAC9B,gBAAgB,EAAE,CAAC,aAAa,EAAE,kBAAkB,CAAC;YACrD,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC,SAAS;SAC5D,CAAC,CAAC;QAEP,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QAErD,MAAM,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAEhD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE/C,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,oBAAoB;QACxB,IAAI;YACF,mBAAmB,EAAE,CAAC;YACtB,OAAO,MAAM,SAAS,CAAC,EAAG,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;SAC/D;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;YACpD,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YAC7C,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,OAAO,CAAC,KAAiB,EAAE,wBAAiC,KAAK;QAErE,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;SACpE;QAED,IAAI,qBAAqB,GAAG,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE;YACjE,qBAAqB,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QACnC,KAAK,CAAC,WAAW,EAAE,CAAC;QACpB,0CAA0C;QAC1C,MAAM,qBAAqB,CAAC;QAE5B,iCAAiC;QACjC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,UAAW,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAEtE,IAAI,qBAAqB,KAAK,IAAI,EAAE;YAClC,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAExD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,EAAE;gBACpD,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;oBAC9C,OAAO;iBACR;gBAED,MAAM,KAAK,GAAG,IAAI,CAAC,cAAe,CAAC;gBACnC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAExB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAC/C,CAAC,CAAC,CAAC;SACJ;QAED,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAErD,cAAc,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE;YAC1C,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAEjB,MAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,UAAW,CAAC,aAAa,CACnC,4BAA4B,CAAgB,CAAC;QACpE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACpC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAC3E,IAAI,CAAC,wBAAwB,GAAG,UAAU,CAAC;QAE3C,MAAM,cAAc,GAAG,MAAM,cAAc,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QAE5E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,GAAG,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,eAAe,CAAC;QAChD,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAE,yCAAyC;QAE1E,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;QAEvC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAE3D,MAAM,OAAO,GAAG,aAAa,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;QAC9C,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC;YACnC,SAAS,CAAC,CAAC;YACX,IAAI,KAAK,CACL,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACrB,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC;QAC9D,cAAc;aACT,oBAAqB,CACrB,EAAC,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,GAAG,EAAC,CAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAC9D,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;QACxC,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,YAAY;YACb,IAAI,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAClE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAE/B,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,eAAe,EAAC,CAAC,CAAC;IACzE,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,cAAc;QAClB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,OAAO;SACR;QAED,MAAM,cAAc,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7C,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI;YACF,MAAM,IAAI,CAAC,cAAe,CAAC,GAAG,EAAE,CAAC;YACjC,MAAM,cAAc,CAAC;SACtB;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;YAC3D,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;IACH,CAAC;IAED;;OAEG;IACH,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC;IACrC,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,YAAY;QACV,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;QAClC,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,MAAM,MAAM,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5B,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,mEAAmE;gBACnE,gBAAgB;gBAChB,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;aACpC;iBAAM;gBACL,uDAAuD;gBACvD,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;aACpC;YACD,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;SAC/C;IACH,CAAC;IAUO,kBAAkB;QACxB,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QACpC,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,OAAO,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAC/D,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAC3D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,MAAM,EAAC,OAAO,EAAC,GAAG,KAAK,CAAC;YAExB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;gBACxB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1B,IAAI,CAAC,OAAe,CAAC,OAAO,EAAE,CAAC;gBAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACrB;YAED,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5B,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACnC,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;aACjB;YACD,MAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC;YAC1C,IAAI,SAAS,IAAI,IAAI,EAAE;gBACrB,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;aACrC;YACD,KAAK,CAAC,uBAAuB,CACxB,OAAe,CAAC,sBAAsB,CAAC,EACvC,OAAe,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;YAC7B,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3C,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;YAEtB,KAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAC9D,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;YACtC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YACxC,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,CAAC;SACrD;QAED,wCAAwC;QACxC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAEzB,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC;QACjD,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACvC,UAAU,CAAC,mBAAmB,CAC1B,OAAO,EAAE,IAAI,CAAC,+BAA+B,CAAC,CAAC;YACnD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;SACtC;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAC9C,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,SAAS,CAAC,MAAM,EAAE,CAAC;YACnB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;SACpC;QAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,gBAAgB,IAAI,IAAI,EAAE;YAC5B,gBAAgB,CAAC,MAAM,EAAE,CAAC;YAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;YAC7B,IAAI,CAAC,YAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC/B,IAAI,CAAC,cAAe,EAAE,CAAC;SACxB;QAED,IAAI,CAAC,aAAa,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,cAAc,EAAC,CAAC,CAAC;IACxE,CAAC;IAEO,UAAU,CAAC,IAAY;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,cAAe,CAAC;QACnC,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,EAAS,CAAC;QAExC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACxB,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC;QAChC,MAAM,EAAC,QAAQ,EAAC,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC;QACjD,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE3D,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;QAED,uDAAuD;QACvD,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,wBAAwB,EAAE;YAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC5C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC,CAAC;SAChE;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,cAAe,CAAC,WAAW,CAAC,SAAS,CAAC;QACzD,MAAM,QAAQ,GAAG,KAAM,CAAC,WAAW,CAAC,IAAI,CAAE,CAAC;QAC3C,IAAI,CAAC,aAAa,CAAC,WAAW,CAC1B,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC/D,CAAC;IAEO,cAAc;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAe,CAAC;QACnC,MAAM,EAAC,QAAQ,EAAE,OAAO,EAAC,GAAG,KAAK,CAAC;QAClC,MAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAEnC,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,OAAQ,CAAC,qBAAqB,EAAE,CAAC;QAC9D,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAE7B,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC;QAE1E,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,GAChB,OAAsD;aAClD,cAAc,EAAE,CAAC;QAC1B,2CAA2C;QAC3C,MAAM,eAAe,GAAG,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC5D,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QACvE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC;QAEzB,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;aAC3B,GAAG,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;QAEjD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,MAAM,MAAM,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QACjC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEjC,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAElC,MAAM,EAAC,OAAO,EAAC,GAAG,IAAI,CAAC,KAAM,CAAC;QAC9B,OAAO,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5D,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO;aACF,qCAAsC,CACtC,EAAC,OAAO,EAAE,qBAAqB,EAAC,CAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YACvD,IAAI,CAAC,sBAAsB,GAAG,aAAa,CAAC;QAC9C,CAAC,CAAC,CAAC;IACT,CAAC;IAEO,gBAAgB;QACtB,MAAM,EAAC,IAAI,EAAC,GAAG,IAAI,CAAC,WAAY,CAAC,OAAQ,CAAC;QAC1C,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAa,CAAC,cAAc,CAC5C,IAAI,CAAC,cAAe,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,cAAe,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;YACtE,IAAI,OAAO,CAAC,MAAM,EAAE,GAAG,YAAY;gBACjC,OAAO,IAAI,CAAC;SACf;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEO,WAAW,CAAC,SAA0B;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,iBAAiB,EAAG,CAAC;QAC5D,MAAM,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,OAAO,IAAI,CAAC;SACb;QAED,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC7B,gDAAgD;YAChD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACzE;QACD,4EAA4E;QAC5E,mEAAmE;QACnE,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC;YACtD,WAAW,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC;IACX,CAAC;IAEM,WAAW,CAAC,KAAc;QAC/B,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACxC,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,OAAO;SACR;QAED,MAAM,cAAc,GAAG,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,cAAc,CAAC,MAAM,IAAI,CAAC,EAAE;YAC9B,OAAO;SACR;QAED,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,OAAO;SACR;QAED,IAAI,CAAC,YAAa,CAAC,IAAI,GAAG,IAAI,CAAC;QAE/B,yEAAyE;QACzE,0BAA0B;QAC1B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;aAClC;SACF;QAED,SAAS,CAAC,MAAM,EAAE,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,aAAa,EAAC,CAAC,CAAC;IACvE,CAAC;IA2CO,WAAW,CAAC,OAAwC;QAE1D,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAQ,CAAC,IAAI,CAAC;QACvD,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAQ,CAAC,IAAI,CAAC;QACvD,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACzC,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACtC,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE;YACtB,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;SACzB;aAAM,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE;YAC9B,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,OAAO;YACL,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;YACxD,QAAQ,EAAE,QAAQ;SACnB,CAAC;IACJ,CAAC;IAEO,YAAY,CAAC,KAAc;QACjC,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAC9C,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACnE,OAAO;SACR;QACD,MAAM,OAAO,GAAG,KAAK,CAAC,kCAAkC,CAAC,SAAS,CAAC,CAAC;QACpE,MAAM,KAAK,GAAG,IAAI,CAAC,cAAe,CAAC;QACnC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAE5B,4EAA4E;QAC5E,gEAAgE;QAChE,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtB,uEAAuE;gBACvE,gDAAgD;gBAChD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;iBAAM;gBACL,MAAM,EAAC,UAAU,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACzD,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;oBAC9B,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC;iBAC1B;gBACD,IAAI,KAAK,CAAC,QAAQ,EAAE;oBAClB,MAAM,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;oBAC3C,IAAI,CAAC,SAAS;wBACV,CAAC,KAAK,GAAG,eAAe,IAAI,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;iBACrE;aACF;YACD,OAAO;SACR;aAAM,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,wEAAwE;YACxE,sBAAsB;YACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,MAAM,EAAC,UAAU,EAAC,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,KAAK,CAAC;YACrC,OAAO;SACR;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAY,CAAC,OAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;YACjE,IAAI,CAAC,OAAO,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;aAAM,IAAI,IAAI,CAAC,aAAa,EAAE;YAC7B,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACvB,IAAI,MAAM,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,EAAE;oBAC3C,OAAO;iBACR;gBAED,IAAI,GAAG,GAAG,IAAI,CAAC;gBACf,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7B,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;iBAC1C;gBACD,IAAI,GAAG,IAAI,IAAI,EAAE;oBACf,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBAC/B;gBACD,IAAI,GAAG,IAAI,IAAI,EAAE;oBACf,OAAO;iBACR;gBAED,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAE7C,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;oBAC9B,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBAC/C,sEAAsE;oBACtE,sEAAsE;oBACtE,IAAI,MAAM,GAAG,CAAC,EAAE;wBACd,IAAI,CAAC,YAAa,CAAC,YAAY,GAAG,MAAM,GAAG,KAAK,CAAC;wBACjD,IAAI,CAAC,cAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;wBAC7C,uCAAuC;wBACvC,MAAM,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;wBAChE,MAAM,KAAK,GAAG,CAAC,MAAM,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBACnD,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;wBACrC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;qBACnD;iBACF;gBAED,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAEO,SAAS,CAAC,KAAa;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,cAAe,CAAC;QACnC,MAAM,EAAC,QAAQ,EAAE,GAAG,EAAC,GAAG,KAAK,CAAC;QAC9B,MAAM,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC;QACnD,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;QAC/B,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,YAAa,CAAC;QAE/B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;YACzD,IAAI,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,GAAG,QAAQ,CAAC;YACzB,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;YAC1D,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;YAC1D,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;YAC1D,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEtB,MAAM,QAAQ,GACV,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YAChE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAE9C,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;gBACvB,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1B,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;oBACxD,GAAG,CAAC,YAAY,GAAG,MAAM,GAAG,QAAQ,CAAC;oBACrC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;iBAC/B;qBAAM,IAAI,MAAM,KAAK,CAAC,EAAE;oBACvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC;oBACjB,KAAK,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;iBAC/C;aACF;SACF;QACD,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzB,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC1B,yEAAyE;QACzE,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IACvE,CAAC;IAED;;OAEG;IACI,YAAY,CAAC,IAAY,EAAE,KAAc;QAC9C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,EAAE,IAAI,CAAC,MAAM,CAAC;QACd,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,iBAAiB,EAAG,CAAC;QAC5D,MAAM,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAE3C,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,WAAW,EAAE;YACvE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,EAAC,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,YAAY,EAAC,CAAC,CAAC;SACzE;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;QAClC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE;YAC1D,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC3B,OAAO;SACR;QAED,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,aAAa,CAAC,EAAC,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,QAAQ,EAAC,CAAC,CAAC;SACrE;QAED,6DAA6D;QAC7D,+DAA+D;QAC/D,2DAA2D;QAC3D,yBAAyB;QACzB,IAAI,WAAW,GAAY,IAAI,CAAC;QAChC,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAEtB,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAExB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAEzB,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,QAAS,CAAC;gBACpC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACtB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;gBAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAErB,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACxC;YAED,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;YACpD,WAAW,GAAG,KAAK,CAAC;SACrB;IACH,CAAC;CACF","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Event as ThreeEvent, EventDispatcher, Matrix4, PerspectiveCamera, Vector3, WebGLRenderer} from 'three';\nimport {XREstimatedLight} from 'three/examples/jsm/webxr/XREstimatedLight.js';\n\nimport {ControlsInterface} from '../features/controls.js';\nimport {$currentBackground, $currentEnvironmentMap} from '../features/environment.js';\nimport ModelViewerElementBase, {$onResize} from '../model-viewer-base.js';\nimport {assertIsArCandidate} from '../utilities.js';\n\nimport {Damper} from './Damper.js';\nimport {ModelScene} from './ModelScene.js';\nimport {PlacementBox} from './PlacementBox.js';\nimport {Renderer} from './Renderer.js';\n\n// number of initial null pose XRFrames allowed before we post not-tracking\nconst INIT_FRAMES = 30;\n// AR shadow is not user-configurable. This is to pave the way for AR lighting\n// estimation, which will be used once available in WebXR.\nconst AR_SHADOW_INTENSITY = 0.8;\nconst ROTATION_RATE = 1.5;\n// Angle down (towards bottom of screen) from camera center ray to use for hit\n// testing against the floor. This makes placement faster and more intuitive\n// assuming the phone is in portrait mode. This seems to be a reasonable\n// assumption for the start of the session and UI will lack landscape mode to\n// encourage upright use.\nconst HIT_ANGLE_DEG = 20;\nconst SCALE_SNAP_HIGH = 1.3;\nconst SCALE_SNAP_LOW = 1 / SCALE_SNAP_HIGH;\n// For automatic dynamic viewport scaling, don't let the scale drop below this\n// limit.\nconst MIN_VIEWPORT_SCALE = 0.25;\n// Furthest away you can move an object (meters).\nconst MAX_DISTANCE = 10;\n\nexport type ARStatus =\n    'not-presenting'|'session-started'|'object-placed'|'failed';\n\nexport const ARStatus: {[index: string]: ARStatus} = {\n  NOT_PRESENTING: 'not-presenting',\n  SESSION_STARTED: 'session-started',\n  OBJECT_PLACED: 'object-placed',\n  FAILED: 'failed'\n};\n\nexport interface ARStatusEvent extends ThreeEvent {\n  status: ARStatus,\n}\n\nexport type ARTracking = 'tracking'|'not-tracking';\n\nexport const ARTracking: {[index: string]: ARTracking} = {\n  TRACKING: 'tracking',\n  NOT_TRACKING: 'not-tracking'\n};\n\nexport interface ARTrackingEvent extends ThreeEvent {\n  status: ARTracking,\n}\n\nconst vector3 = new Vector3();\nconst matrix4 = new Matrix4();\nconst hitPosition = new Vector3();\nconst camera = new PerspectiveCamera(45, 1, 0.1, 100);\n\nexport class ARRenderer extends EventDispatcher {\n  public threeRenderer: WebGLRenderer;\n  public currentSession: XRSession|null = null;\n  public placeOnWall = false;\n\n  private placementBox: PlacementBox|null = null;\n  private lastTick: number|null = null;\n  private turntableRotation: number|null = null;\n  private oldShadowIntensity: number|null = null;\n  private frame: XRFrame|null = null;\n  private initialHitSource: XRHitTestSource|null = null;\n  private transientHitTestSource: XRTransientInputHitTestSource|null = null;\n  private inputSource: XRInputSource|null = null;\n  private _presentedScene: ModelScene|null = null;\n  private resolveCleanup: ((...args: any[]) => void)|null = null;\n  private exitWebXRButtonContainer: HTMLElement|null = null;\n  private overlay: HTMLElement|null = null;\n  private xrLight: XREstimatedLight|null = null;\n\n  private tracking = true;\n  private frames = 0;\n  private initialized = false;\n  private oldTarget = new Vector3();\n  private placementComplete = false;\n  private isTranslating = false;\n  private isRotating = false;\n  private isTwoFingering = false;\n  private lastDragPosition = new Vector3();\n  private firstRatio = 0;\n  private lastAngle = 0;\n  private goalPosition = new Vector3();\n  private goalYaw = 0;\n  private goalScale = 1;\n  private xDamper = new Damper();\n  private yDamper = new Damper();\n  private zDamper = new Damper();\n  private yawDamper = new Damper();\n  private scaleDamper = new Damper();\n\n  private onExitWebXRButtonContainerClick = () => this.stopPresenting();\n\n  constructor(private renderer: Renderer) {\n    super();\n    this.threeRenderer = renderer.threeRenderer;\n    this.threeRenderer.xr.enabled = true;\n  }\n\n  async resolveARSession(): Promise<XRSession> {\n    assertIsArCandidate();\n\n    const session: XRSession =\n        await navigator.xr!.requestSession!('immersive-ar', {\n          requiredFeatures: ['hit-test'],\n          optionalFeatures: ['dom-overlay', 'light-estimation'],\n          domOverlay: this.overlay ? {root: this.overlay} : undefined\n        });\n\n    this.threeRenderer.xr.setReferenceSpaceType('local');\n\n    await this.threeRenderer.xr.setSession(session);\n\n    this.threeRenderer.xr.cameraAutoUpdate = false;\n\n    return session;\n  }\n\n  /**\n   * The currently presented scene, if any\n   */\n  get presentedScene() {\n    return this._presentedScene;\n  }\n\n  /**\n   * Resolves to true if the renderer has detected all the necessary qualities\n   * to support presentation in AR.\n   */\n  async supportsPresentation(): Promise<boolean> {\n    try {\n      assertIsArCandidate();\n      return await navigator.xr!.isSessionSupported('immersive-ar');\n    } catch (error) {\n      console.warn('Request to present in WebXR denied:');\n      console.warn(error);\n      console.warn('Falling back to next ar-mode');\n      return false;\n    }\n  }\n\n  /**\n   * Present a scene in AR\n   */\n  async present(scene: ModelScene, environmentEstimation: boolean = false):\n      Promise<void> {\n    if (this.isPresenting) {\n      console.warn('Cannot present while a model is already presenting');\n    }\n\n    let waitForAnimationFrame = new Promise<void>((resolve, _reject) => {\n      requestAnimationFrame(() => resolve());\n    });\n\n    scene.setHotspotsVisibility(false);\n    scene.queueRender();\n    // Render a frame to turn off the hotspots\n    await waitForAnimationFrame;\n\n    // This sets isPresenting to true\n    this._presentedScene = scene;\n    this.overlay = scene.element.shadowRoot!.querySelector('div.default');\n\n    if (environmentEstimation === true) {\n      this.xrLight = new XREstimatedLight(this.threeRenderer);\n\n      this.xrLight.addEventListener('estimationstart', () => {\n        if (!this.isPresenting || this.xrLight == null) {\n          return;\n        }\n\n        const scene = this.presentedScene!;\n        scene.add(this.xrLight);\n\n        scene.environment = this.xrLight.environment;\n      });\n    }\n\n    const currentSession = await this.resolveARSession();\n\n    currentSession.addEventListener('end', () => {\n      this.postSessionCleanup();\n    }, {once: true});\n\n    const exitButton = scene.element.shadowRoot!.querySelector(\n                           '.slot.exit-webxr-ar-button') as HTMLElement;\n    exitButton.classList.add('enabled');\n    exitButton.addEventListener('click', this.onExitWebXRButtonContainerClick);\n    this.exitWebXRButtonContainer = exitButton;\n\n    const viewerRefSpace = await currentSession.requestReferenceSpace('viewer');\n\n    this.tracking = true;\n    this.frames = 0;\n    this.initialized = false;\n\n    this.turntableRotation = scene.yaw;\n    this.goalYaw = scene.yaw;\n    this.goalScale = 1;\n\n    scene.background = null;\n\n    this.oldShadowIntensity = scene.shadowIntensity;\n    scene.setShadowIntensity(0.01);  // invisible, but not changing the shader\n\n    this.oldTarget.copy(scene.getTarget());\n\n    scene.element.addEventListener('load', this.onUpdateScene);\n\n    const radians = HIT_ANGLE_DEG * Math.PI / 180;\n    const ray = this.placeOnWall === true ?\n        undefined :\n        new XRRay(\n            new DOMPoint(0, 0, 0),\n            {x: 0, y: -Math.sin(radians), z: -Math.cos(radians)});\n    currentSession\n        .requestHitTestSource!\n        ({space: viewerRefSpace, offsetRay: ray})!.then(hitTestSource => {\n          this.initialHitSource = hitTestSource;\n        });\n\n    this.currentSession = currentSession;\n    this.placementBox =\n        new PlacementBox(scene, this.placeOnWall ? 'back' : 'bottom');\n    this.placementComplete = false;\n\n    this.lastTick = performance.now();\n    this.dispatchEvent({type: 'status', status: ARStatus.SESSION_STARTED});\n  }\n\n  /**\n   * If currently presenting a scene in AR, stops presentation and exits AR.\n   */\n  async stopPresenting() {\n    if (!this.isPresenting) {\n      return;\n    }\n\n    const cleanupPromise = new Promise((resolve) => {\n      this.resolveCleanup = resolve;\n    });\n\n    try {\n      await this.currentSession!.end();\n      await cleanupPromise;\n    } catch (error) {\n      console.warn('Error while trying to end WebXR AR session');\n      console.warn(error);\n\n      this.postSessionCleanup();\n    }\n  }\n\n  /**\n   * True if a scene is currently in the process of being presented in AR\n   */\n  get isPresenting(): boolean {\n    return this.presentedScene != null;\n  }\n\n  get target(): Vector3 {\n    return this.oldTarget;\n  }\n\n  updateTarget() {\n    const scene = this.presentedScene;\n    if (scene != null) {\n      const target = scene.getTarget();\n      this.oldTarget.copy(target);\n      if (this.placeOnWall) {\n        // Move the scene's target to the center of the back of the model's\n        // bounding box.\n        target.z = scene.boundingBox.min.z;\n      } else {\n        // Move the scene's target to the model's floor height.\n        target.y = scene.boundingBox.min.y;\n      }\n      scene.setTarget(target.x, target.y, target.z);\n    }\n  }\n\n  onUpdateScene = () => {\n    if (this.placementBox != null && this.isPresenting) {\n      this.placementBox!.dispose();\n      this.placementBox = new PlacementBox(\n          this.presentedScene!, this.placeOnWall ? 'back' : 'bottom');\n    }\n  };\n\n  private postSessionCleanup() {\n    const session = this.currentSession;\n    if (session != null) {\n      session.removeEventListener('selectstart', this.onSelectStart);\n      session.removeEventListener('selectend', this.onSelectEnd);\n      this.currentSession = null;\n    }\n\n    const scene = this.presentedScene;\n    this._presentedScene = null;\n    if (scene != null) {\n      const {element} = scene;\n\n      if (this.xrLight != null) {\n        scene.remove(this.xrLight);\n        (this.xrLight as any).dispose();\n        this.xrLight = null;\n      }\n\n      scene.position.set(0, 0, 0);\n      scene.scale.set(1, 1, 1);\n      scene.setShadowOffset(0);\n      const yaw = this.turntableRotation;\n      if (yaw != null) {\n        scene.yaw = yaw;\n      }\n      const intensity = this.oldShadowIntensity;\n      if (intensity != null) {\n        scene.setShadowIntensity(intensity);\n      }\n      scene.setEnvironmentAndSkybox(\n          (element as any)[$currentEnvironmentMap],\n          (element as any)[$currentBackground]);\n      const point = this.oldTarget;\n      scene.setTarget(point.x, point.y, point.z);\n      scene.xrCamera = null;\n\n      scene.element.removeEventListener('load', this.onUpdateScene);\n      scene.orientHotspots(0);\n      element.requestUpdate('cameraTarget');\n      element.requestUpdate('maxCameraOrbit');\n      element[$onResize](element.getBoundingClientRect());\n    }\n\n    // Force the Renderer to update its size\n    this.renderer.height = 0;\n\n    const exitButton = this.exitWebXRButtonContainer;\n    if (exitButton != null) {\n      exitButton.classList.remove('enabled');\n      exitButton.removeEventListener(\n          'click', this.onExitWebXRButtonContainerClick);\n      this.exitWebXRButtonContainer = null;\n    }\n\n    const hitSource = this.transientHitTestSource;\n    if (hitSource != null) {\n      hitSource.cancel();\n      this.transientHitTestSource = null;\n    }\n\n    const hitSourceInitial = this.initialHitSource;\n    if (hitSourceInitial != null) {\n      hitSourceInitial.cancel();\n      this.initialHitSource = null;\n    }\n\n    if (this.placementBox != null) {\n      this.placementBox!.dispose();\n      this.placementBox = null;\n    }\n\n    this.lastTick = null;\n    this.turntableRotation = null;\n    this.oldShadowIntensity = null;\n    this.frame = null;\n    this.inputSource = null;\n    this.overlay = null;\n\n    if (this.resolveCleanup != null) {\n      this.resolveCleanup!();\n    }\n\n    this.dispatchEvent({type: 'status', status: ARStatus.NOT_PRESENTING});\n  }\n\n  private updateView(view: XRView) {\n    const scene = this.presentedScene!;\n    const xr = this.threeRenderer.xr as any;\n\n    xr.updateCamera(camera);\n    scene.xrCamera = xr.getCamera();\n    const {elements} = scene.getCamera().matrixWorld;\n    scene.orientHotspots(Math.atan2(elements[1], elements[5]));\n\n    if (!this.initialized) {\n      this.placeInitially();\n      this.initialized = true;\n    }\n\n    // Use automatic dynamic viewport scaling if supported.\n    if (view.requestViewportScale && view.recommendedViewportScale) {\n      const scale = view.recommendedViewportScale;\n      view.requestViewportScale(Math.max(scale, MIN_VIEWPORT_SCALE));\n    }\n    const layer = this.currentSession!.renderState.baseLayer;\n    const viewport = layer!.getViewport(view)!;\n    this.threeRenderer.setViewport(\n        viewport.x, viewport.y, viewport.width, viewport.height);\n  }\n\n  private placeInitially() {\n    const scene = this.presentedScene!;\n    const {position, element} = scene;\n    const xrCamera = scene.getCamera();\n\n    const {width, height} = this.overlay!.getBoundingClientRect();\n    scene.setSize(width, height);\n\n    xrCamera.projectionMatrixInverse.copy(xrCamera.projectionMatrix).invert();\n\n    const {theta, radius} =\n        (element as ModelViewerElementBase & ControlsInterface)\n            .getCameraOrbit();\n    // Orient model to match the 3D camera view\n    const cameraDirection = xrCamera.getWorldDirection(vector3);\n    scene.yaw = Math.atan2(-cameraDirection.x, -cameraDirection.z) - theta;\n    this.goalYaw = scene.yaw;\n\n    position.copy(xrCamera.position)\n        .add(cameraDirection.multiplyScalar(radius));\n\n    this.updateTarget();\n    const target = scene.getTarget();\n    position.add(target).sub(this.oldTarget);\n\n    this.goalPosition.copy(position);\n\n    scene.setHotspotsVisibility(true);\n\n    const {session} = this.frame!;\n    session.addEventListener('selectstart', this.onSelectStart);\n    session.addEventListener('selectend', this.onSelectEnd);\n    session\n        .requestHitTestSourceForTransientInput!\n        ({profile: 'generic-touchscreen'})!.then(hitTestSource => {\n          this.transientHitTestSource = hitTestSource;\n        });\n  }\n\n  private getTouchLocation(): Vector3|null {\n    const {axes} = this.inputSource!.gamepad!;\n    let location = this.placementBox!.getExpandedHit(\n        this.presentedScene!, axes[0], axes[1]);\n    if (location != null) {\n      vector3.copy(location).sub(this.presentedScene!.getCamera().position);\n      if (vector3.length() > MAX_DISTANCE)\n        return null;\n    }\n    return location;\n  }\n\n  private getHitPoint(hitResult: XRHitTestResult): Vector3|null {\n    const refSpace = this.threeRenderer.xr.getReferenceSpace()!;\n    const pose = hitResult.getPose(refSpace);\n    if (pose == null) {\n      return null;\n    }\n\n    const hitMatrix = matrix4.fromArray(pose.transform.matrix);\n\n    if (this.placeOnWall === true) {\n      // Orient the model to the wall's normal vector.\n      this.goalYaw = Math.atan2(hitMatrix.elements[4], hitMatrix.elements[6]);\n    }\n    // Check that the y-coordinate of the normal is large enough that the normal\n    // is pointing up for floor placement; opposite for wall placement.\n    return hitMatrix.elements[5] > 0.75 !== this.placeOnWall ?\n        hitPosition.setFromMatrixPosition(hitMatrix) :\n        null;\n  }\n\n  public moveToFloor(frame: XRFrame) {\n    const hitSource = this.initialHitSource;\n    if (hitSource == null) {\n      return;\n    }\n\n    const hitTestResults = frame.getHitTestResults(hitSource);\n    if (hitTestResults.length == 0) {\n      return;\n    }\n\n    const hit = hitTestResults[0];\n    const hitPoint = this.getHitPoint(hit);\n    if (hitPoint == null) {\n      return;\n    }\n\n    this.placementBox!.show = true;\n\n    // If the user is translating, let the finger hit-ray take precedence and\n    // ignore this hit result.\n    if (!this.isTranslating) {\n      if (this.placeOnWall) {\n        this.goalPosition.copy(hitPoint);\n      } else {\n        this.goalPosition.y = hitPoint.y;\n      }\n    }\n\n    hitSource.cancel();\n    this.initialHitSource = null;\n    this.dispatchEvent({type: 'status', status: ARStatus.OBJECT_PLACED});\n  }\n\n  private onSelectStart = (event: Event) => {\n    const hitSource = this.transientHitTestSource;\n    if (hitSource == null) {\n      return;\n    }\n    const fingers = this.frame!.getHitTestResultsForTransientInput(hitSource);\n    const scene = this.presentedScene!;\n    const box = this.placementBox!;\n\n    if (fingers.length === 1) {\n      this.inputSource = (event as XRInputSourceEvent).inputSource;\n      const {axes} = this.inputSource!.gamepad!;\n\n      const hitPosition = box.getHit(this.presentedScene!, axes[0], axes[1]);\n      box.show = true;\n\n      if (hitPosition != null) {\n        this.isTranslating = true;\n        this.lastDragPosition.copy(hitPosition);\n      } else if (this.placeOnWall === false) {\n        this.isRotating = true;\n        this.lastAngle = axes[0] * ROTATION_RATE;\n      }\n    } else if (fingers.length === 2) {\n      box.show = true;\n      this.isTwoFingering = true;\n      const {separation} = this.fingerPolar(fingers);\n      this.firstRatio = separation / scene.scale.x;\n    }\n  };\n\n  private onSelectEnd = () => {\n    this.isTranslating = false;\n    this.isRotating = false;\n    this.isTwoFingering = false;\n    this.inputSource = null;\n    this.goalPosition.y +=\n        this.placementBox!.offsetHeight * this.presentedScene!.scale.x;\n    this.placementBox!.show = false\n  };\n\n  private fingerPolar(fingers: XRTransientInputHitTestResult[]):\n      {separation: number, deltaYaw: number} {\n    const fingerOne = fingers[0].inputSource.gamepad!.axes;\n    const fingerTwo = fingers[1].inputSource.gamepad!.axes;\n    const deltaX = fingerTwo[0] - fingerOne[0];\n    const deltaY = fingerTwo[1] - fingerOne[1];\n    const angle = Math.atan2(deltaY, deltaX);\n    let deltaYaw = this.lastAngle - angle;\n    if (deltaYaw > Math.PI) {\n      deltaYaw -= 2 * Math.PI;\n    } else if (deltaYaw < -Math.PI) {\n      deltaYaw += 2 * Math.PI;\n    }\n    this.lastAngle = angle;\n    return {\n      separation: Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n      deltaYaw: deltaYaw\n    };\n  }\n\n  private processInput(frame: XRFrame) {\n    const hitSource = this.transientHitTestSource;\n    if (hitSource == null) {\n      return;\n    }\n    if (!this.isTranslating && !this.isTwoFingering && !this.isRotating) {\n      return;\n    }\n    const fingers = frame.getHitTestResultsForTransientInput(hitSource);\n    const scene = this.presentedScene!;\n    const scale = scene.scale.x;\n\n    // Rotating, translating and scaling are mutually exclusive operations; only\n    // one can happen at a time, but we can switch during a gesture.\n    if (this.isTwoFingering) {\n      if (fingers.length < 2) {\n        // If we lose the second finger, stop scaling (in fact, stop processing\n        // input altogether until a new gesture starts).\n        this.isTwoFingering = false;\n      } else {\n        const {separation, deltaYaw} = this.fingerPolar(fingers);\n        if (this.placeOnWall === false) {\n          this.goalYaw += deltaYaw;\n        }\n        if (scene.canScale) {\n          const scale = separation / this.firstRatio;\n          this.goalScale =\n              (scale < SCALE_SNAP_HIGH && scale > SCALE_SNAP_LOW) ? 1 : scale;\n        }\n      }\n      return;\n    } else if (fingers.length === 2) {\n      // If we were rotating or translating and we get a second finger, switch\n      // to scaling instead.\n      this.isTranslating = false;\n      this.isRotating = false;\n      this.isTwoFingering = true;\n      const {separation} = this.fingerPolar(fingers);\n      this.firstRatio = separation / scale;\n      return;\n    }\n\n    if (this.isRotating) {\n      const angle = this.inputSource!.gamepad!.axes[0] * ROTATION_RATE;\n      this.goalYaw += angle - this.lastAngle;\n      this.lastAngle = angle;\n    } else if (this.isTranslating) {\n      fingers.forEach(finger => {\n        if (finger.inputSource !== this.inputSource) {\n          return;\n        }\n\n        let hit = null;\n        if (finger.results.length > 0) {\n          hit = this.getHitPoint(finger.results[0])\n        }\n        if (hit == null) {\n          hit = this.getTouchLocation();\n        }\n        if (hit == null) {\n          return;\n        }\n\n        this.goalPosition.sub(this.lastDragPosition);\n\n        if (this.placeOnWall === false) {\n          const offset = hit.y - this.lastDragPosition.y;\n          // When a lower floor is found, keep the model at the same height, but\n          // drop the placement box to the floor. The model falls on select end.\n          if (offset < 0) {\n            this.placementBox!.offsetHeight = offset / scale;\n            this.presentedScene!.setShadowOffset(offset);\n            // Interpolate hit ray up to drag plane\n            const cameraPosition = vector3.copy(scene.getCamera().position);\n            const alpha = -offset / (cameraPosition.y - hit.y);\n            cameraPosition.multiplyScalar(alpha);\n            hit.multiplyScalar(1 - alpha).add(cameraPosition);\n          }\n        }\n\n        this.goalPosition.add(hit);\n        this.lastDragPosition.copy(hit);\n      });\n    }\n  }\n\n  private moveScene(delta: number) {\n    const scene = this.presentedScene!;\n    const {position, yaw} = scene;\n    const boundingRadius = scene.boundingSphere.radius;\n    const goal = this.goalPosition;\n    const oldScale = scene.scale.x;\n    const box = this.placementBox!;\n\n    if (!goal.equals(position) || this.goalScale !== oldScale) {\n      let {x, y, z} = position;\n      x = this.xDamper.update(x, goal.x, delta, boundingRadius);\n      y = this.yDamper.update(y, goal.y, delta, boundingRadius);\n      z = this.zDamper.update(z, goal.z, delta, boundingRadius);\n      position.set(x, y, z);\n\n      const newScale =\n          this.scaleDamper.update(oldScale, this.goalScale, delta, 1);\n      scene.scale.set(newScale, newScale, newScale);\n\n      if (!this.isTranslating) {\n        const offset = goal.y - y;\n        if (this.placementComplete && this.placeOnWall === false) {\n          box.offsetHeight = offset / newScale;\n          scene.setShadowOffset(offset);\n        } else if (offset === 0) {\n          this.placementComplete = true;\n          box.show = false;\n          scene.setShadowIntensity(AR_SHADOW_INTENSITY);\n        }\n      }\n    }\n    box.updateOpacity(delta);\n    scene.updateTarget(delta);\n    // yaw must be updated last, since this also updates the shadow position.\n    scene.yaw = this.yawDamper.update(yaw, this.goalYaw, delta, Math.PI);\n  }\n\n  /**\n   * Only public to make it testable.\n   */\n  public onWebXRFrame(time: number, frame: XRFrame) {\n    this.frame = frame;\n    ++this.frames;\n    const refSpace = this.threeRenderer.xr.getReferenceSpace()!;\n    const pose = frame.getViewerPose(refSpace);\n\n    if (pose == null && this.tracking === true && this.frames > INIT_FRAMES) {\n      this.tracking = false;\n      this.dispatchEvent({type: 'tracking', status: ARTracking.NOT_TRACKING});\n    }\n\n    const scene = this.presentedScene;\n    if (pose == null || scene == null || !scene.element.loaded) {\n      this.threeRenderer.clear();\n      return;\n    }\n\n    if (this.tracking === false) {\n      this.tracking = true;\n      this.dispatchEvent({type: 'tracking', status: ARTracking.TRACKING});\n    }\n\n    // WebXR may return multiple views, i.e. for headset AR. This\n    // isn't really supported at this point, but make a best-effort\n    // attempt to render other views also, using the first view\n    // as the main viewpoint.\n    let isFirstView: boolean = true;\n    for (const view of pose.views) {\n      this.updateView(view);\n\n      if (isFirstView) {\n        this.moveToFloor(frame);\n\n        this.processInput(frame);\n\n        const delta = time - this.lastTick!;\n        this.moveScene(delta);\n        this.renderer.preRender(scene, time, delta);\n        this.lastTick = time;\n\n        scene.renderShadow(this.threeRenderer);\n      }\n\n      this.threeRenderer.render(scene, scene.getCamera());\n      isFirstView = false;\n    }\n  }\n}\n"]}