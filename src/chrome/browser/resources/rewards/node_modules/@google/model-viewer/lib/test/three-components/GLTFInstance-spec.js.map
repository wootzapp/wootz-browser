{"version":3,"file":"GLTFInstance-spec.js","sourceRoot":"","sources":["../../../src/test/three-components/GLTFInstance-spec.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAIH,OAAO,EAAC,SAAS,EAAE,YAAY,EAAe,MAAM,wCAAwC,CAAC;AAC7F,OAAO,EAAC,mBAAmB,EAAC,MAAM,eAAe,CAAC;AAGlD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,KAAK,CAAC,cAAc,EAAE,GAAG,EAAE;IACzB,IAAI,OAAa,CAAC;IAClB,IAAI,YAA0B,CAAC;IAE/B,KAAK,CAAC,KAAK,IAAI,EAAE;QACf,OAAO,GAAG,mBAAmB,EAAE,CAAC;QAChC,YAAY,GAAG,MAAM,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACjC,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC9C,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC;YACpD,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE;YACxB,IAAI,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;gBACxC,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC;gBACpD,MAAM,aAAa,GAAG,MAAM,YAAY,CAAC,KAAK,EAAE,CAAC;gBAEjD,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACrC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC/B,IAAI,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACnC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC9C,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {GLTF} from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nimport {$prepared, GLTFInstance, PreparedGLTF} from '../../three-components/GLTFInstance.js';\nimport {createFakeThreeGLTF} from '../helpers.js';\n\n\nconst expect = chai.expect;\n\nsuite('GLTFInstance', () => {\n  let rawGLTF: GLTF;\n  let preparedGLTF: PreparedGLTF;\n\n  setup(async () => {\n    rawGLTF = createFakeThreeGLTF();\n    preparedGLTF = await GLTFInstance.prepare(rawGLTF);\n  });\n\n  suite('with a prepared GLTF', () => {\n    test('exposes the same scene as the GLTF', () => {\n      const gltfInstance = new GLTFInstance(preparedGLTF);\n      expect(gltfInstance.scene).to.be.equal(preparedGLTF.scene);\n    });\n\n    suite('when cloned', () => {\n      test('creates a unique scene', async () => {\n        const gltfInstance = new GLTFInstance(preparedGLTF);\n        const cloneInstance = await gltfInstance.clone();\n\n        expect(cloneInstance.scene).to.be.ok;\n        expect(cloneInstance.scene).to.not.be.equal(gltfInstance.scene);\n      });\n    });\n  });\n\n  suite('preparing the GLTF', () => {\n    test('creates a prepared GLTF', () => {\n      expect(preparedGLTF).to.not.be.equal(rawGLTF);\n      expect(preparedGLTF[$prepared]).to.be.equal(true);\n    });\n  });\n});\n"]}