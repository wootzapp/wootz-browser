{"version":3,"file":"ModelScene.js","sourceRoot":"","sources":["../../src/three-components/ModelScene.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AnimationAction, AnimationClip, AnimationMixer, Box3, Camera, Euler, Event as ThreeEvent, LoopPingPong, LoopRepeat, Material, Matrix3, Mesh, Object3D, PerspectiveCamera, Raycaster, Scene, Sphere, Texture, Vector2, Vector3, WebGLRenderer} from 'three';\nimport {CSS2DRenderer} from 'three/examples/jsm/renderers/CSS2DRenderer.js';\n\nimport {$currentGLTF, $model, $originalGltfJson} from '../features/scene-graph.js';\nimport ModelViewerElementBase, {$renderer, RendererInterface} from '../model-viewer-base.js';\nimport {ModelViewerElement} from '../model-viewer.js';\nimport {normalizeUnit} from '../styles/conversions.js';\nimport {NumberNode, parseExpressions} from '../styles/parsers.js';\nimport {resolveDpr} from '../utilities.js';\n\nimport {Damper, SETTLING_TIME} from './Damper.js';\nimport {ModelViewerGLTFInstance} from './gltf-instance/ModelViewerGLTFInstance.js';\nimport {Hotspot} from './Hotspot.js';\nimport {reduceVertices} from './ModelUtils.js';\nimport {Shadow} from './Shadow.js';\n\nconst MIN_SHADOW_RATIO = 100;\n\nexport interface ModelLoadEvent extends ThreeEvent {\n  url: string;\n}\n\nexport interface ModelSceneConfig {\n  element: ModelViewerElementBase;\n  canvas: HTMLCanvasElement;\n  width: number;\n  height: number;\n}\n\nexport type IlluminationRole = 'primary'|'secondary';\n\nexport const IlluminationRole: {[index: string]: IlluminationRole} = {\n  Primary: 'primary',\n  Secondary: 'secondary'\n};\n\nconst view = new Vector3();\nconst target = new Vector3();\nconst normalWorld = new Vector3();\n\nconst raycaster = new Raycaster();\nconst vector3 = new Vector3();\nconst ndc = new Vector2();\n\n/**\n * A THREE.Scene object that takes a Model and CanvasHTMLElement and\n * constructs a framed scene based off of the canvas dimensions.\n * Provides lights and cameras to be used in a renderer.\n */\nexport class ModelScene extends Scene {\n  public element: ModelViewerElement;\n  public canvas: HTMLCanvasElement;\n  public annotationRenderer = new CSS2DRenderer();\n  public schemaElement = document.createElement('script');\n  public width = 1;\n  public height = 1;\n  public aspect = 1;\n  public scaleStep = 0;\n  public renderCount = 0;\n  public externalRenderer: RendererInterface|null = null;\n\n  // These default camera values are never used, as they are reset once the\n  // model is loaded and framing is computed.\n  public camera = new PerspectiveCamera(45, 1, 0.1, 100);\n  public xrCamera: Camera|null = null;\n\n  public url: string|null = null;\n  public target = new Object3D();\n  public animationNames: Array<string> = [];\n  public boundingBox = new Box3();\n  public boundingSphere = new Sphere();\n  public size = new Vector3();\n  public idealAspect = 0;\n  public framedFoVDeg = 0;\n\n  public shadow: Shadow|null = null;\n  public shadowIntensity = 0;\n  public shadowSoftness = 1;\n  public bakedShadows = new Set<Mesh>();\n\n  public exposure = 1;\n  public canScale = true;\n\n  private isDirty = false;\n\n  private goalTarget = new Vector3();\n  private targetDamperX = new Damper();\n  private targetDamperY = new Damper();\n  private targetDamperZ = new Damper();\n\n  private _currentGLTF: ModelViewerGLTFInstance|null = null;\n  private _model: Object3D|null = null;\n  private mixer: AnimationMixer;\n  private cancelPendingSourceChange: (() => void)|null = null;\n  private animationsByName: Map<string, AnimationClip> = new Map();\n  private currentAnimationAction: AnimationAction|null = null;\n\n  constructor({canvas, element, width, height}: ModelSceneConfig) {\n    super();\n\n    this.name = 'ModelScene';\n\n    this.element = element as ModelViewerElement;\n    this.canvas = canvas;\n\n    // These default camera values are never used, as they are reset once the\n    // model is loaded and framing is computed.\n    this.camera = new PerspectiveCamera(45, 1, 0.1, 100);\n    this.camera.name = 'MainCamera';\n\n    this.add(this.target);\n\n    this.setSize(width, height);\n\n    this.target.name = 'Target';\n\n    this.mixer = new AnimationMixer(this.target);\n\n    const {domElement} = this.annotationRenderer;\n    const {style} = domElement;\n    style.display = 'none';\n    style.pointerEvents = 'none';\n    style.position = 'absolute';\n    style.top = '0';\n    this.element.shadowRoot!.querySelector('.default')!.appendChild(domElement);\n\n    this.schemaElement.setAttribute('type', 'application/ld+json');\n  }\n\n  /**\n   * Function to create the context lazily, as when there is only one\n   * <model-viewer> element, the renderer's 3D context can be displayed\n   * directly. This extra context is necessary to copy the renderings into when\n   * there are more than one.\n   */\n  get context() {\n    return this.canvas.getContext('2d');\n  }\n\n  getCamera(): Camera {\n    return this.xrCamera != null ? this.xrCamera : this.camera;\n  }\n\n  queueRender() {\n    this.isDirty = true;\n  }\n\n  shouldRender() {\n    return this.isDirty;\n  }\n\n  hasRendered() {\n    this.isDirty = false;\n  }\n\n  forceRescale() {\n    this.scaleStep = -1;\n    this.queueRender();\n  }\n\n  /**\n   * Pass in a THREE.Object3D to be controlled\n   * by this model.\n   */\n  async setObject(model: Object3D) {\n    this.reset();\n    this._model = model;\n    this.target.add(model);\n    await this.setupScene();\n  }\n\n  /**\n   * Sets the model via URL.\n   */\n\n  async setSource(\n      url: string|null,\n      progressCallback: (progress: number) => void = () => {}) {\n    if (!url || url === this.url) {\n      progressCallback(1);\n      return;\n    }\n    this.reset();\n    this.url = url;\n\n    if (this.externalRenderer != null) {\n      const framingInfo = await this.externalRenderer.load(progressCallback);\n\n      this.boundingSphere.radius = framingInfo.framedRadius;\n      this.idealAspect = framingInfo.fieldOfViewAspect;\n      return;\n    }\n\n    // If we have pending work due to a previous source change in progress,\n    // cancel it so that we do not incur a race condition:\n    if (this.cancelPendingSourceChange != null) {\n      this.cancelPendingSourceChange!();\n      this.cancelPendingSourceChange = null;\n    }\n\n    let gltf: ModelViewerGLTFInstance;\n\n    try {\n      gltf = await new Promise<ModelViewerGLTFInstance>(\n          async (resolve, reject) => {\n            this.cancelPendingSourceChange = () => reject();\n            try {\n              const result = await this.element[$renderer].loader.load(\n                  url, this.element, progressCallback);\n              resolve(result);\n            } catch (error) {\n              reject(error);\n            }\n          });\n    } catch (error) {\n      if (error == null) {\n        // Loading was cancelled, so silently return\n        return;\n      }\n\n      throw error;\n    }\n\n    this.cancelPendingSourceChange = null;\n    this.reset();\n    this.url = url;\n    this._currentGLTF = gltf;\n\n    if (gltf != null) {\n      this._model = gltf.scene;\n      this.target.add(gltf.scene);\n    }\n\n    const {animations} = gltf!;\n    const animationsByName = new Map();\n    const animationNames = [];\n\n    for (const animation of animations) {\n      animationsByName.set(animation.name, animation);\n      animationNames.push(animation.name);\n    }\n\n    this.animations = animations;\n    this.animationsByName = animationsByName;\n    this.animationNames = animationNames;\n\n    await this.setupScene();\n  }\n\n  private async setupScene() {\n    this.applyTransform();\n    this.updateBoundingBox();\n\n    await this.updateFraming();\n\n    this.updateShadow();\n    this.setShadowIntensity(this.shadowIntensity);\n  }\n\n  reset() {\n    this.url = null;\n    this.queueRender();\n    if (this.shadow != null) {\n      this.shadow.setIntensity(0);\n    }\n    this.bakedShadows.clear();\n\n    const {_model} = this;\n    if (_model != null) {\n      _model.removeFromParent();\n      this._model = null;\n    }\n\n    const gltf = this._currentGLTF;\n    if (gltf != null) {\n      gltf.dispose();\n      this._currentGLTF = null;\n    }\n\n    if (this.currentAnimationAction != null) {\n      this.currentAnimationAction.stop();\n      this.currentAnimationAction = null;\n    }\n\n    this.mixer.stopAllAction();\n    this.mixer.uncacheRoot(this);\n  }\n\n  dispose() {\n    this.reset();\n    if (this.shadow != null) {\n      this.shadow.dispose();\n      this.shadow = null;\n    }\n    (this.element as any)[$currentGLTF] = null;\n    (this.element as any)[$originalGltfJson] = null;\n    (this.element as any)[$model] = null;\n  }\n\n  get currentGLTF() {\n    return this._currentGLTF;\n  }\n\n  /**\n   * Updates the ModelScene for a new container size in CSS pixels.\n   */\n  setSize(width: number, height: number) {\n    if (this.width === width && this.height === height) {\n      return;\n    }\n    this.width = Math.max(width, 1);\n    this.height = Math.max(height, 1);\n    this.annotationRenderer.setSize(width, height);\n\n    this.aspect = this.width / this.height;\n\n    if (this.externalRenderer != null) {\n      const dpr = resolveDpr();\n      this.externalRenderer.resize(width * dpr, height * dpr);\n    }\n\n    this.queueRender();\n  }\n\n  markBakedShadow(mesh: Mesh) {\n    mesh.userData.shadow = true;\n    this.bakedShadows.add(mesh);\n  }\n\n  unmarkBakedShadow(mesh: Mesh) {\n    mesh.userData.shadow = false;\n    mesh.visible = true;\n    this.bakedShadows.delete(mesh);\n    this.boundingBox.expandByObject(mesh);\n  }\n\n  findBakedShadows(group: Object3D) {\n    const boundingBox = new Box3();\n\n    group.traverse((object: Object3D) => {\n      const mesh = object as Mesh;\n      if (!mesh.isMesh) {\n        return;\n      }\n      const material = mesh.material as Material;\n      if (!material.transparent) {\n        return;\n      }\n      boundingBox.setFromObject(mesh);\n      const size = boundingBox.getSize(vector3);\n      const minDim = Math.min(size.x, size.y, size.z);\n      const maxDim = Math.max(size.x, size.y, size.z);\n      if (maxDim < MIN_SHADOW_RATIO * minDim) {\n        return;\n      }\n      this.markBakedShadow(mesh);\n    });\n  }\n\n  checkBakedShadows() {\n    const {min, max} = this.boundingBox;\n    const shadowBox = new Box3();\n    this.boundingBox.getSize(this.size);\n\n    for (const mesh of this.bakedShadows) {\n      shadowBox.setFromObject(mesh);\n      if (shadowBox.min.y < min.y + this.size.y / MIN_SHADOW_RATIO &&\n          shadowBox.min.x <= min.x && shadowBox.max.x >= max.x &&\n          shadowBox.min.z <= min.z && shadowBox.max.z >= max.z) {\n        // floor shadow\n        continue;\n      }\n      if (shadowBox.min.z < min.z + this.size.z / MIN_SHADOW_RATIO &&\n          shadowBox.min.x <= min.x && shadowBox.max.x >= max.x &&\n          shadowBox.min.y <= min.y && shadowBox.max.y >= max.y) {\n        // wall shadow\n        continue;\n      }\n      this.unmarkBakedShadow(mesh);\n    }\n  }\n\n  applyTransform() {\n    const {model} = this;\n    if (model == null) {\n      return;\n    }\n    const orientation = parseExpressions(this.element.orientation)[0]\n                            .terms as [NumberNode, NumberNode, NumberNode];\n\n    const roll = normalizeUnit(orientation[0]).number;\n    const pitch = normalizeUnit(orientation[1]).number;\n    const yaw = normalizeUnit(orientation[2]).number;\n\n    model.quaternion.setFromEuler(new Euler(pitch, yaw, roll, 'YXZ'));\n\n    const scale = parseExpressions(this.element.scale)[0]\n                      .terms as [NumberNode, NumberNode, NumberNode];\n\n    model.scale.set(scale[0].number, scale[1].number, scale[2].number);\n  }\n\n  updateBoundingBox() {\n    const {model} = this;\n    if (model == null) {\n      return;\n    }\n    this.target.remove(model);\n\n    this.findBakedShadows(model);\n\n    const bound = (box: Box3, vertex: Vector3): Box3 => {\n      return box.expandByPoint(vertex);\n    };\n    this.setBakedShadowVisibility(false);\n    this.boundingBox = reduceVertices(model, bound, new Box3());\n    // If there's nothing but the baked shadow, then it's not a baked shadow.\n    if (this.boundingBox.isEmpty()) {\n      this.setBakedShadowVisibility(true);\n      this.bakedShadows.forEach((mesh) => this.unmarkBakedShadow(mesh));\n      this.boundingBox = reduceVertices(model, bound, new Box3());\n    }\n    this.checkBakedShadows();\n    this.setBakedShadowVisibility();\n\n    this.boundingBox.getSize(this.size);\n\n    this.target.add(model);\n  }\n\n  /**\n   * Calculates the boundingSphere and idealAspect that allows the 3D\n   * object to be framed tightly in a 2D window of any aspect ratio without\n   * clipping at any camera orbit. The camera's center target point can be\n   * optionally specified. If no center is specified, it defaults to the center\n   * of the bounding box, which means asymmetric models will tend to be tight on\n   * one side instead of both. Proper choice of center can correct this.\n   */\n  async updateFraming() {\n    const {model} = this;\n    if (model == null) {\n      return;\n    }\n    this.target.remove(model);\n    this.setBakedShadowVisibility(false);\n    const {center} = this.boundingSphere;\n\n    this.element.requestUpdate('cameraTarget');\n    await this.element.updateComplete;\n    center.copy(this.getTarget());\n\n    const radiusSquared = (value: number, vertex: Vector3): number => {\n      return Math.max(value, center!.distanceToSquared(vertex));\n    };\n    this.boundingSphere.radius =\n        Math.sqrt(reduceVertices(model, radiusSquared, 0));\n\n    const horizontalTanFov = (value: number, vertex: Vector3): number => {\n      vertex.sub(center!);\n      const radiusXZ = Math.sqrt(vertex.x * vertex.x + vertex.z * vertex.z);\n      return Math.max(\n          value, radiusXZ / (this.idealCameraDistance() - Math.abs(vertex.y)));\n    };\n    this.idealAspect = reduceVertices(model, horizontalTanFov, 0) /\n        Math.tan((this.framedFoVDeg / 2) * Math.PI / 180);\n\n    this.setBakedShadowVisibility();\n    this.target.add(model);\n  }\n\n  setBakedShadowVisibility(visible: boolean = this.shadowIntensity <= 0) {\n    for (const shadow of this.bakedShadows) {\n      shadow.visible = visible;\n    }\n  }\n\n  idealCameraDistance(): number {\n    const halfFovRad = (this.framedFoVDeg / 2) * Math.PI / 180;\n    return this.boundingSphere.radius / Math.sin(halfFovRad);\n  }\n\n  /**\n   * Set's the framedFieldOfView based on the aspect ratio of the window in\n   * order to keep the model fully visible at any camera orientation.\n   */\n  adjustedFoV(fovDeg: number): number {\n    const vertical = Math.tan((fovDeg / 2) * Math.PI / 180) *\n        Math.max(1, this.idealAspect / this.aspect);\n    return 2 * Math.atan(vertical) * 180 / Math.PI;\n  }\n\n  getNDC(clientX: number, clientY: number): Vector2 {\n    if (this.xrCamera != null) {\n      ndc.set(clientX / window.screen.width, clientY / window.screen.height);\n    } else {\n      const rect = this.element.getBoundingClientRect();\n      ndc.set(\n          (clientX - rect.x) / this.width, (clientY - rect.y) / this.height);\n    }\n\n    ndc.multiplyScalar(2).subScalar(1);\n    ndc.y *= -1;\n    return ndc;\n  }\n\n  /**\n   * Returns the size of the corresponding canvas element.\n   */\n  getSize(): {width: number, height: number} {\n    return {width: this.width, height: this.height};\n  }\n\n  setEnvironmentAndSkybox(environment: Texture|null, skybox: Texture|null) {\n    if (this.element[$renderer].arRenderer.presentedScene === this) {\n      return;\n    }\n    this.environment = environment;\n    this.background = skybox;\n    this.queueRender();\n  }\n\n  /**\n   * Sets the point in model coordinates the model should orbit/pivot around.\n   */\n  setTarget(modelX: number, modelY: number, modelZ: number) {\n    this.goalTarget.set(-modelX, -modelY, -modelZ);\n  }\n\n  /**\n   * Set the decay time of, affects the speed of target transitions.\n   */\n  setTargetDamperDecayTime(decayMilliseconds: number) {\n    this.targetDamperX.setDecayTime(decayMilliseconds);\n    this.targetDamperY.setDecayTime(decayMilliseconds);\n    this.targetDamperZ.setDecayTime(decayMilliseconds);\n  }\n\n  /**\n   * Gets the point in model coordinates the model should orbit/pivot around.\n   */\n  getTarget(): Vector3 {\n    return this.goalTarget.clone().multiplyScalar(-1);\n  }\n\n  /**\n   * Shifts the model to the target point immediately instead of easing in.\n   */\n  jumpToGoal() {\n    this.updateTarget(SETTLING_TIME);\n  }\n\n  /**\n   * This should be called every frame with the frame delta to cause the target\n   * to transition to its set point.\n   */\n  updateTarget(delta: number): boolean {\n    const goal = this.goalTarget;\n    const target = this.target.position;\n    if (!goal.equals(target)) {\n      const normalization = this.boundingSphere.radius / 10;\n      let {x, y, z} = target;\n      x = this.targetDamperX.update(x, goal.x, delta, normalization);\n      y = this.targetDamperY.update(y, goal.y, delta, normalization);\n      z = this.targetDamperZ.update(z, goal.z, delta, normalization);\n      this.target.position.set(x, y, z);\n      this.target.updateMatrixWorld();\n      this.queueRender();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Yaw the +z (front) of the model toward the indicated world coordinates.\n   */\n  pointTowards(worldX: number, worldZ: number) {\n    const {x, z} = this.position;\n    this.yaw = Math.atan2(worldX - x, worldZ - z);\n  }\n\n  get model() {\n    return this._model;\n  }\n\n  /**\n   * Yaw is the scene's orientation about the y-axis, around the rotation\n   * center.\n   */\n  set yaw(radiansY: number) {\n    this.rotation.y = radiansY;\n    this.queueRender();\n  }\n\n  get yaw(): number {\n    return this.rotation.y;\n  }\n\n  set animationTime(value: number) {\n    this.mixer.setTime(value);\n    this.queueShadowRender();\n  }\n\n  get animationTime(): number {\n    if (this.currentAnimationAction != null) {\n      const loopCount =\n          Math.max((this.currentAnimationAction as any)._loopCount, 0);\n      if (this.currentAnimationAction.loop === LoopPingPong &&\n          (loopCount & 1) === 1) {\n        return this.duration - this.currentAnimationAction.time\n      } else {\n        return this.currentAnimationAction.time;\n      }\n    }\n\n    return 0;\n  }\n\n  set animationTimeScale(value: number) {\n    this.mixer.timeScale = value;\n  }\n\n  get animationTimeScale(): number {\n    return this.mixer.timeScale;\n  }\n\n  get duration(): number {\n    if (this.currentAnimationAction != null &&\n        this.currentAnimationAction.getClip()) {\n      return this.currentAnimationAction.getClip().duration;\n    }\n\n    return 0;\n  }\n\n  get hasActiveAnimation(): boolean {\n    return this.currentAnimationAction != null;\n  }\n\n  /**\n   * Plays an animation if there are any associated with the current model.\n   * Accepts an optional string name of an animation to play. If no name is\n   * provided, or if no animation is found by the given name, always falls back\n   * to playing the first animation.\n   */\n  playAnimation(\n      name: string|null = null, crossfadeTime: number = 0,\n      loopMode: number = LoopRepeat, repetitionCount: number = Infinity) {\n    if (this._currentGLTF == null) {\n      return;\n    }\n    const {animations} = this;\n    if (animations == null || animations.length === 0) {\n      console.warn(\n          `Cannot play animation (model does not have any animations)`);\n      return;\n    }\n\n    let animationClip = null;\n\n    if (name != null) {\n      animationClip = this.animationsByName.get(name);\n\n      if (animationClip == null) {\n        const parsedAnimationIndex = parseInt(name);\n\n        if (!isNaN(parsedAnimationIndex) && parsedAnimationIndex >= 0 &&\n            parsedAnimationIndex < animations.length) {\n          animationClip = animations[parsedAnimationIndex];\n        }\n      }\n    }\n\n    if (animationClip == null) {\n      animationClip = animations[0];\n    }\n\n    try {\n      const {currentAnimationAction: lastAnimationAction} = this;\n\n      const action = this.mixer.clipAction(animationClip, this);\n      this.currentAnimationAction = action;\n\n      if (this.element.paused) {\n        this.mixer.stopAllAction();\n      } else {\n        action.paused = false;\n        if (lastAnimationAction != null && action !== lastAnimationAction) {\n          action.crossFadeFrom(lastAnimationAction, crossfadeTime, false);\n        } else if (\n            this.animationTimeScale > 0 &&\n            this.animationTime == this.duration) {\n          // This is a workaround for what I believe is a three.js bug.\n          this.animationTime = 0;\n        }\n      }\n\n      action.setLoop(loopMode, repetitionCount);\n\n      action.enabled = true;\n      action.clampWhenFinished = true;\n\n      action.play();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  stopAnimation() {\n    this.currentAnimationAction = null;\n    this.mixer.stopAllAction();\n  }\n\n  updateAnimation(step: number) {\n    this.mixer.update(step);\n    this.queueShadowRender();\n  }\n\n  subscribeMixerEvent(event: string, callback: (...args: any[]) => void) {\n    this.mixer.addEventListener(event, callback);\n  }\n\n  /**\n   * Call if the object has been changed in such a way that the shadow's shape\n   * has changed (not a rotation about the Y axis).\n   */\n  updateShadow() {\n    const shadow = this.shadow;\n    if (shadow != null) {\n      const side = this.element.arPlacement === 'wall' ? 'back' : 'bottom';\n      shadow.setScene(this, this.shadowSoftness, side);\n      shadow.needsUpdate = true;\n    }\n  }\n\n  renderShadow(renderer: WebGLRenderer) {\n    const shadow = this.shadow;\n    if (shadow != null && shadow.needsUpdate == true) {\n      shadow.render(renderer, this);\n      shadow.needsUpdate = false;\n    }\n  }\n\n  private queueShadowRender() {\n    if (this.shadow != null) {\n      this.shadow.needsUpdate = true;\n    }\n  }\n\n  /**\n   * Sets the shadow's intensity, lazily creating the shadow as necessary.\n   */\n  setShadowIntensity(shadowIntensity: number) {\n    this.shadowIntensity = shadowIntensity;\n    if (this._currentGLTF == null) {\n      return;\n    }\n    this.setBakedShadowVisibility();\n    if (shadowIntensity <= 0 && this.shadow == null) {\n      return;\n    }\n\n    if (this.shadow == null) {\n      const side = this.element.arPlacement === 'wall' ? 'back' : 'bottom';\n      this.shadow = new Shadow(this, this.shadowSoftness, side);\n    }\n    this.shadow.setIntensity(shadowIntensity);\n  }\n\n  /**\n   * Sets the shadow's softness by mapping a [0, 1] softness parameter to the\n   * shadow's resolution. This involves reallocation, so it should not be\n   * changed frequently. Softer shadows are cheaper to render.\n   */\n  setShadowSoftness(softness: number) {\n    this.shadowSoftness = softness;\n    const shadow = this.shadow;\n    if (shadow != null) {\n      shadow.setSoftness(softness);\n    }\n  }\n\n  /**\n   * Shift the floor vertically from the bottom of the model's bounding box by\n   * offset (should generally be negative).\n   */\n  setShadowOffset(offset: number) {\n    const shadow = this.shadow;\n    if (shadow != null) {\n      shadow.setOffset(offset);\n    }\n  }\n\n  get raycaster() {\n    return raycaster;\n  }\n\n  /**\n   * This method returns the world position, model-space normal and texture\n   * coordinate of the point on the mesh corresponding to the input pixel\n   * coordinates given relative to the model-viewer element. If the mesh\n   * is not hit, the result is null.\n   */\n  positionAndNormalFromPoint(ndcPosition: Vector2, object: Object3D = this):\n      {position: Vector3, normal: Vector3, uv: Vector2|null}|null {\n    this.raycaster.setFromCamera(ndcPosition, this.getCamera());\n    const hits = this.raycaster.intersectObject(object, true);\n\n    const hit =\n        hits.find((hit) => hit.object.visible && !hit.object.userData.shadow);\n    if (hit == null || hit.face == null) {\n      return null;\n    }\n\n    if (hit.uv == null) {\n      return {position: hit.point, normal: hit.face.normal, uv: null};\n    }\n\n    hit.face.normal.applyNormalMatrix(\n        new Matrix3().getNormalMatrix(hit.object.matrixWorld));\n\n    return {position: hit.point, normal: hit.face.normal, uv: hit.uv};\n  }\n\n  /**\n   * The following methods are for operating on the set of Hotspot objects\n   * attached to the scene. These come from DOM elements, provided to slots by\n   * the Annotation Mixin.\n   */\n  addHotspot(hotspot: Hotspot) {\n    this.target.add(hotspot);\n    // This happens automatically in render(), but we do it early so that\n    // the slots appear in the shadow DOM and the elements get attached,\n    // allowing us to dispatch events on them.\n    this.annotationRenderer.domElement.appendChild(hotspot.element);\n  }\n\n  removeHotspot(hotspot: Hotspot) {\n    this.target.remove(hotspot);\n  }\n\n  /**\n   * Helper method to apply a function to all hotspots.\n   */\n  forHotspots(func: (hotspot: Hotspot) => void) {\n    const {children} = this.target;\n    for (let i = 0, l = children.length; i < l; i++) {\n      const hotspot = children[i];\n      if (hotspot instanceof Hotspot) {\n        func(hotspot);\n      }\n    }\n  }\n\n  /**\n   * Update the CSS visibility of the hotspots based on whether their normals\n   * point toward the camera.\n   */\n  updateHotspots(viewerPosition: Vector3) {\n    this.forHotspots((hotspot) => {\n      view.copy(viewerPosition);\n      target.setFromMatrixPosition(hotspot.matrixWorld);\n      view.sub(target);\n      normalWorld.copy(hotspot.normal)\n          .transformDirection(this.target.matrixWorld);\n      if (view.dot(normalWorld) < 0) {\n        hotspot.hide();\n      } else {\n        hotspot.show();\n      }\n    });\n  }\n\n  /**\n   * Rotate all hotspots to an absolute orientation given by the input number of\n   * radians. Zero returns them to upright.\n   */\n  orientHotspots(radians: number) {\n    this.forHotspots((hotspot) => {\n      hotspot.orient(radians);\n    });\n  }\n\n  /**\n   * Set the rendering visibility of all hotspots. This is used to hide them\n   * during transitions and such.\n   */\n  setHotspotsVisibility(visible: boolean) {\n    this.forHotspots((hotspot) => {\n      hotspot.visible = visible;\n    });\n  }\n\n  updateSchema(src: string|null) {\n    const {schemaElement, element} = this;\n    const {alt, poster, iosSrc} = element;\n    if (src != null) {\n      const encoding = [{\n        '@type': 'MediaObject',\n        contentUrl: src,\n        encodingFormat: src.split('.').pop()?.toLowerCase() === 'gltf' ?\n            'model/gltf+json' :\n            'model/gltf-binary'\n      }];\n\n      if (iosSrc) {\n        encoding.push({\n          '@type': 'MediaObject',\n          contentUrl: iosSrc,\n          encodingFormat: 'model/vnd.usdz+zip'\n        });\n      }\n\n      const structuredData = {\n        '@context': 'http://schema.org/',\n        '@type': '3DModel',\n        image: poster ?? undefined,\n        name: alt ?? undefined,\n        encoding\n      };\n\n      schemaElement.textContent = JSON.stringify(structuredData);\n      document.head.appendChild(schemaElement);\n    } else if (schemaElement.parentElement != null) {\n      schemaElement.parentElement.removeChild(schemaElement);\n    }\n  }\n}\n"]}