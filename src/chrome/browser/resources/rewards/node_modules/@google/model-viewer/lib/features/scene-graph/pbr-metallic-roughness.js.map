{"version":3,"file":"pbr-metallic-roughness.js","sourceRoot":"","sources":["../../../src/features/scene-graph/pbr-metallic-roughness.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Color, MeshStandardMaterial} from 'three';\n\nimport {GLTF, PBRMetallicRoughness as GLTFPBRMetallicRoughness} from '../../three-components/gltf-instance/gltf-2.0.js';\nimport {PBRMetallicRoughness as DefaultedPBRMetallicRoughness} from '../../three-components/gltf-instance/gltf-defaulted.js';\n\nimport {PBRMetallicRoughness as PBRMetallicRoughnessInterface, RGBA} from './api.js';\nimport {TextureInfo, TextureUsage} from './texture-info.js';\nimport {$correlatedObjects, $onUpdate, $sourceObject, ThreeDOMElement} from './three-dom-element.js';\n\n\n\nconst $threeMaterials = Symbol('threeMaterials');\nconst $baseColorTexture = Symbol('baseColorTexture');\nconst $metallicRoughnessTexture = Symbol('metallicRoughnessTexture');\n\n/**\n * PBR material properties facade implementation for Three.js materials\n */\nexport class PBRMetallicRoughness extends ThreeDOMElement implements\n    PBRMetallicRoughnessInterface {\n  private[$baseColorTexture]: TextureInfo;\n  private[$metallicRoughnessTexture]: TextureInfo;\n\n  private get[$threeMaterials](): Set<MeshStandardMaterial> {\n    return this[$correlatedObjects] as Set<MeshStandardMaterial>;\n  }\n\n  constructor(\n      onUpdate: () => void, gltf: GLTF,\n      pbrMetallicRoughness: GLTFPBRMetallicRoughness,\n      correlatedMaterials: Set<MeshStandardMaterial>) {\n    super(onUpdate, pbrMetallicRoughness, correlatedMaterials);\n\n    // Assign glTF default values\n    if (pbrMetallicRoughness.baseColorFactor == null) {\n      pbrMetallicRoughness.baseColorFactor = [1, 1, 1, 1];\n    }\n    if (pbrMetallicRoughness.roughnessFactor == null) {\n      pbrMetallicRoughness.roughnessFactor = 1;\n    }\n    if (pbrMetallicRoughness.metallicFactor == null) {\n      pbrMetallicRoughness.metallicFactor = 1;\n    }\n\n    const {\n      baseColorTexture: gltfBaseColorTexture,\n      metallicRoughnessTexture: gltfMetallicRoughnessTexture\n    } = pbrMetallicRoughness;\n\n    const {map, metalnessMap} = correlatedMaterials.values().next().value;\n\n    this[$baseColorTexture] = new TextureInfo(\n        onUpdate,\n        TextureUsage.Base,\n        map,\n        correlatedMaterials,\n        gltf,\n        gltfBaseColorTexture ? gltfBaseColorTexture : null);\n\n    this[$metallicRoughnessTexture] = new TextureInfo(\n        onUpdate,\n        TextureUsage.MetallicRoughness,\n        metalnessMap,\n        correlatedMaterials,\n        gltf,\n        gltfMetallicRoughnessTexture ? gltfMetallicRoughnessTexture : null);\n  }\n\n\n  get baseColorFactor(): RGBA {\n    return (this[$sourceObject] as DefaultedPBRMetallicRoughness)\n        .baseColorFactor;\n  }\n\n  get metallicFactor(): number {\n    return (this[$sourceObject] as DefaultedPBRMetallicRoughness)\n        .metallicFactor;\n  }\n\n  get roughnessFactor(): number {\n    return (this[$sourceObject] as DefaultedPBRMetallicRoughness)\n        .roughnessFactor;\n  }\n\n  get baseColorTexture(): TextureInfo {\n    return this[$baseColorTexture];\n  }\n\n  get metallicRoughnessTexture(): TextureInfo {\n    return this[$metallicRoughnessTexture];\n  }\n\n  setBaseColorFactor(rgba: RGBA|string) {\n    const color = new Color();\n    if (rgba instanceof Array) {\n      color.fromArray(rgba);\n    } else {\n      color.set(rgba).convertSRGBToLinear();\n    }\n    for (const material of this[$threeMaterials]) {\n      material.color.set(color);\n      if (rgba instanceof Array) {\n        material.opacity = (rgba)[3];\n      } else {\n        rgba = [0, 0, 0, material.opacity];\n        color.toArray(rgba);\n      }\n    }\n    const pbrMetallicRoughness =\n        this[$sourceObject] as DefaultedPBRMetallicRoughness;\n    pbrMetallicRoughness.baseColorFactor = rgba as RGBA;\n    this[$onUpdate]();\n  }\n\n  setMetallicFactor(value: number) {\n    for (const material of this[$threeMaterials]) {\n      material.metalness = value;\n    }\n    const pbrMetallicRoughness =\n        this[$sourceObject] as DefaultedPBRMetallicRoughness;\n    pbrMetallicRoughness.metallicFactor = value;\n    this[$onUpdate]();\n  }\n\n  setRoughnessFactor(value: number) {\n    for (const material of this[$threeMaterials]) {\n      material.roughness = value;\n    }\n    const pbrMetallicRoughness =\n        this[$sourceObject] as DefaultedPBRMetallicRoughness;\n    pbrMetallicRoughness.roughnessFactor = value;\n    this[$onUpdate]();\n  }\n}\n"]}