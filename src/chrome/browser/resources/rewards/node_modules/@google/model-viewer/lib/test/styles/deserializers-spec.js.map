{"version":3,"file":"deserializers-spec.js","sourceRoot":"","sources":["../../../src/test/styles/deserializers-spec.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAEH,OAAO,EAAC,uBAAuB,EAAC,MAAM,+BAA+B,CAAC;AAEtE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,KAAK,CAAC,eAAe,EAAE,GAAG,EAAE;IAC1B,KAAK,CAAC,yBAAyB,EAAE,GAAG,EAAE;QAEpC,IAAI,OAAiB,CAAC;QACtB,IAAI,kBAAkD,CAAC;QAEvD,KAAK,CAAC,GAAG,EAAE;YACT,OAAO,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;YAChD,kBAAkB,GAAG,uBAAuB,CAAS,OAAO,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2DAA2D,EAAE,GAAG,EAAE;YACrE,MAAM,YAAY,GAAG,kBAAkB,CAAC,qBAAqB,CAAC,CAAC;YAC/D,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YAChD,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACtD,MAAM,YAAY,GAAG,kBAAkB,CAAC,eAAe,CAAC,CAAC;YACzD,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAC/C,wDAAwD;YACxD,8DAA8D;YAC9D,MAAM,YAAY,GAAG,kBAAkB,CAAC,IAAW,CAAC,CAAC;YACrD,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {enumerationDeserializer} from '../../styles/deserializers.js';\n\nconst expect = chai.expect;\n\nsuite('deserializers', () => {\n  suite('enumerationDeserializer', () => {\n    type Animal = 'elephant'|'octopus'|'chinchilla';\n    let animals: Animal[];\n    let deserializeAnimals: (input: string) => Set<Animal>;\n\n    setup(() => {\n      animals = ['elephant', 'octopus', 'chinchilla'];\n      deserializeAnimals = enumerationDeserializer<Animal>(animals);\n    });\n\n    test('yields the members of the enumeration in the input string', () => {\n      const deserialized = deserializeAnimals('elephant chinchilla');\n      expect(deserialized.size).to.be.equal(2);\n      expect(deserialized.has('elephant')).to.be.true;\n      expect(deserialized.has('chinchilla')).to.be.true;\n    });\n\n    test('filters out non-members of the enumeration', () => {\n      const deserialized = deserializeAnimals('octopus paris');\n      expect(deserialized.size).to.be.equal(1);\n      expect(deserialized.has('octopus')).to.be.true;\n    });\n\n    test('yields an empty set from null input', () => {\n      // tsc would normally warn about null not being accepted\n      // but it is worth ensuring the correct behavior all the same:\n      const deserialized = deserializeAnimals(null as any);\n      expect(deserialized.size).to.be.equal(0);\n    });\n  });\n});"]}