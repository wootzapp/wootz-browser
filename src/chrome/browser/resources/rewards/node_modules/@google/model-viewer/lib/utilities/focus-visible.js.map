{"version":3,"file":"focus-visible.js","sourceRoot":"","sources":["../../src/utilities/focus-visible.ts"],"names":[],"mappings":"AAyBA;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,MAAM,yBAAyB,GAClC,CAA0C,UAAa,EAAK,EAAE;;IAC5D,MAAM,sBAAsB,GACxB,CAAC,QAA0B,EAAmC,EAAE;QAC9D,kEAAkE;QAClE,oEAAoE;QACpE,+BAA+B;QAC/B,IAAI,QAAQ,CAAC,UAAU,IAAI,IAAI;YAC3B,QAAQ,CAAC,YAAY,CAAC,uBAAuB,CAAC,EAAE;YAClD,OAAO,GAAG,EAAE,GAAE,CAAC,CAAC;SACjB;QAED,kEAAkE;QAClE,+BAA+B;QAC/B,IAAK,IAAY,CAAC,yBAAyB,EAAE;YAC1C,IAAY,CAAC,yBAAyB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;SAC9D;aAAM;YACL,MAAM,mBAAmB,GAAG,GAAG,EAAE;gBAC9B,IAAY,CAAC,yBAAyB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC/D,CAAC,CAAC;YACF,iEAAiE;YACjE,4DAA4D;YAC5D,+DAA+D;YAC/D,SAAS;YACT,IAAI,CAAC,gBAAgB,CACjB,8BAA8B,EAC9B,mBAAmB,EACnB,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;YAElB,OAAO,GAAG,EAAE;gBACV,IAAI,CAAC,mBAAmB,CACpB,8BAA8B,EAAE,mBAAmB,CAAC,CAAC;YAC3D,CAAC,CAAC;SACH;QAED,OAAO,GAAG,EAAE,GAAE,CAAC,CAAC;IAClB,CAAC,CAAC;IAEN,MAAM,wBAAwB,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;IAEnE,oEAAoE;IACpE,sEAAsE;IACtE,qCAAqC;IACrC,MAAM,uBAAwB,SAAQ,UAAU;QAAhD;;YACS,QAA0B,GACtB,IAAI,CAAC;QAmBlB,CAAC;QAlBC,gEAAgE;QAChE,YAAY;QACZ,iBAAiB;YACf,KAAK,CAAC,iBAAiB,IAAI,KAAK,CAAC,iBAAiB,EAAE,CAAC;YACrD,IAAI,IAAI,CAAC,wBAAwB,CAAC,IAAI,IAAI,EAAE;gBAC1C,IAAI,CAAC,wBAAwB,CAAC,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC;aAC/D;QACH,CAAC;QAED,oBAAoB;YAClB,KAAK,CAAC,oBAAoB,IAAI,KAAK,CAAC,oBAAoB,EAAE,CAAC;YAC3D,+DAA+D;YAC/D,mEAAmE;YACnE,IAAI,IAAI,CAAC,wBAAwB,CAAC,IAAI,IAAI,EAAE;gBAC1C,IAAI,CAAC,wBAAwB,CAAE,EAAE,CAAC;gBAClC,IAAI,CAAC,wBAAwB,CAAC,GAAG,IAAI,CAAC;aACvC;QACH,CAAC;KACF;SApBS,wBAAwB;IAoBjC,CAAC;IAEF,OAAO,uBAAuB,CAAC;AACjC,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Constructor} from '../utilities.js';\n\nexport interface OptionalLifecycleCallbacks {\n  connectedCallback?(): void;\n  disconnectedCallback?(): void;\n}\n\nexport type MixableBaseClass = HTMLElement&OptionalLifecycleCallbacks;\n\ntype EndPolyfillCoordinationCallback = () => void;\n\n/**\n * This mixin function is designed to be applied to a class that inherits\n * from HTMLElement. It makes it easy for a custom element to coordinate with\n * the :focus-visible polyfill.\n *\n * NOTE(cdata): The code here was adapted from an example proposed with the\n * introduction of ShadowDOM support in the :focus-visible polyfill.\n *\n * @see https://github.com/WICG/focus-visible/pull/196\n * @param {Function} SuperClass The base class implementation to decorate with\n * implementation that coordinates with the :focus-visible polyfill\n */\nexport const FocusVisiblePolyfillMixin =\n    <T extends Constructor<MixableBaseClass>>(SuperClass: T): T => {\n      const coordinateWithPolyfill =\n          (instance: MixableBaseClass): EndPolyfillCoordinationCallback => {\n            // If there is no shadow root, there is no need to coordinate with\n            // the polyfill. If we already coordinated with the polyfill, we can\n            // skip subsequent invocations:\n            if (instance.shadowRoot == null ||\n                instance.hasAttribute('data-js-focus-visible')) {\n              return () => {};\n            }\n\n            // The polyfill might already be loaded. If so, we can apply it to\n            // the shadow root immediately:\n            if ((self as any).applyFocusVisiblePolyfill) {\n              (self as any).applyFocusVisiblePolyfill(instance.shadowRoot);\n            } else {\n              const coordinationHandler = () => {\n                (self as any).applyFocusVisiblePolyfill(instance.shadowRoot);\n              };\n              // Otherwise, wait for the polyfill to be loaded lazily. It might\n              // never be loaded, but if it is then we can apply it to the\n              // shadow root at the appropriate time by waiting for the ready\n              // event:\n              self.addEventListener(\n                  'focus-visible-polyfill-ready',\n                  coordinationHandler,\n                  {once: true});\n\n              return () => {\n                self.removeEventListener(\n                    'focus-visible-polyfill-ready', coordinationHandler);\n              };\n            }\n\n            return () => {};\n          };\n\n      const $endPolyfillCoordination = Symbol('endPolyfillCoordination');\n\n      // IE11 doesn't natively support custom elements or JavaScript class\n      // syntax The mixin implementation assumes that the user will take the\n      // appropriate steps to support both:\n      class FocusVisibleCoordinator extends SuperClass {\n        private[$endPolyfillCoordination]: EndPolyfillCoordinationCallback|\n            null = null;\n        // Attempt to coordinate with the polyfill when connected to the\n        // document:\n        connectedCallback() {\n          super.connectedCallback && super.connectedCallback();\n          if (this[$endPolyfillCoordination] == null) {\n            this[$endPolyfillCoordination] = coordinateWithPolyfill(this);\n          }\n        }\n\n        disconnectedCallback() {\n          super.disconnectedCallback && super.disconnectedCallback();\n          // It's important to remove the polyfill event listener when we\n          // disconnect, otherwise we will leak the whole element via window:\n          if (this[$endPolyfillCoordination] != null) {\n            this[$endPolyfillCoordination]!();\n            this[$endPolyfillCoordination] = null;\n          }\n        }\n      };\n\n      return FocusVisibleCoordinator;\n    };"]}