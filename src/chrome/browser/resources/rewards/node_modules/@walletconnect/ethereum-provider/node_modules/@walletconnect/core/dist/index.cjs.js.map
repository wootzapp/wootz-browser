{"version":3,"file":"index.cjs.js","sources":["../../../node_modules/multiformats/esm/vendor/base-x.js","../../../node_modules/multiformats/esm/src/bytes.js","../../../node_modules/multiformats/esm/src/bases/base.js","../../../node_modules/multiformats/esm/src/bases/identity.js","../../../node_modules/multiformats/esm/src/bases/base2.js","../../../node_modules/multiformats/esm/src/bases/base8.js","../../../node_modules/multiformats/esm/src/bases/base10.js","../../../node_modules/multiformats/esm/src/bases/base16.js","../../../node_modules/multiformats/esm/src/bases/base32.js","../../../node_modules/multiformats/esm/src/bases/base36.js","../../../node_modules/multiformats/esm/src/bases/base58.js","../../../node_modules/multiformats/esm/src/bases/base64.js","../../../node_modules/multiformats/esm/src/bases/base256emoji.js","../../../node_modules/multiformats/esm/vendor/varint.js","../../../node_modules/multiformats/esm/src/varint.js","../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../node_modules/multiformats/esm/src/hashes/identity.js","../../../node_modules/multiformats/esm/src/codecs/json.js","../../../node_modules/multiformats/esm/src/basics.js","../node_modules/uint8arrays/esm/src/alloc.js","../node_modules/uint8arrays/esm/src/util/bases.js","../node_modules/uint8arrays/esm/src/from-string.js","../src/constants/core.ts","../src/constants/crypto.ts","../src/constants/keychain.ts","../src/constants/messages.ts","../src/constants/publisher.ts","../src/constants/relayer.ts","../src/constants/store.ts","../src/constants/subscriber.ts","../src/constants/pairing.ts","../src/constants/history.ts","../src/constants/expirer.ts","../src/constants/verify.ts","../src/constants/echo.ts","../src/constants/events.ts","../src/controllers/keychain.ts","../src/controllers/crypto.ts","../src/controllers/messages.ts","../src/controllers/publisher.ts","../src/controllers/topicmap.ts","../src/controllers/subscriber.ts","../src/controllers/relayer.ts","../src/controllers/store.ts","../src/controllers/pairing.ts","../src/controllers/history.ts","../src/controllers/expirer.ts","../../../node_modules/@walletconnect/window-getters/dist/cjs/index.js","../src/controllers/verify.ts","../src/controllers/echo.ts","../src/controllers/events.ts","../src/core.ts","../src/index.ts"],"sourcesContent":["function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","export const CORE_PROTOCOL = \"wc\";\nexport const CORE_VERSION = 2;\nexport const CORE_CONTEXT = \"core\";\n\nexport const CORE_STORAGE_PREFIX = `${CORE_PROTOCOL}@${CORE_VERSION}:${CORE_CONTEXT}:`;\n\nexport const CORE_DEFAULT = {\n  name: CORE_CONTEXT,\n  logger: \"error\",\n};\n\nexport const CORE_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const CRYPTO_CONTEXT = \"crypto\";\n\nexport const CRYPTO_CLIENT_SEED = \"client_ed25519_seed\";\n\nexport const CRYPTO_JWT_TTL = ONE_DAY;\n","export const KEYCHAIN_CONTEXT = \"keychain\";\n\nexport const KEYCHAIN_STORAGE_VERSION = \"0.3\";\n","export const MESSAGES_CONTEXT = \"messages\";\n\nexport const MESSAGES_STORAGE_VERSION = \"0.3\";\n","import { SIX_HOURS } from \"@walletconnect/time\";\n\nexport const PUBLISHER_DEFAULT_TTL = SIX_HOURS;\n\nexport const PUBLISHER_CONTEXT = \"publisher\";\n","export const RELAYER_DEFAULT_PROTOCOL = \"irn\";\n\nexport const RELAYER_DEFAULT_LOGGER = \"error\";\n\nexport const RELAYER_DEFAULT_RELAY_URL = \"wss://relay.walletconnect.org\";\n\nexport const RELAYER_CONTEXT = \"relayer\";\n\nexport const RELAYER_EVENTS = {\n  message: \"relayer_message\",\n  message_ack: \"relayer_message_ack\",\n  connect: \"relayer_connect\",\n  disconnect: \"relayer_disconnect\",\n  error: \"relayer_error\",\n  connection_stalled: \"relayer_connection_stalled\",\n  transport_closed: \"relayer_transport_closed\",\n  publish: \"relayer_publish\",\n};\n\nexport const RELAYER_SUBSCRIBER_SUFFIX = \"_subscription\";\n\nexport const RELAYER_PROVIDER_EVENTS = {\n  payload: \"payload\",\n  connect: \"connect\",\n  disconnect: \"disconnect\",\n  error: \"error\",\n};\n\nexport const RELAYER_RECONNECT_TIMEOUT = 0.1;\n\nexport const RELAYER_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n\n// Updated automatically via `new-version` npm script.\n\nexport const RELAYER_SDK_VERSION = \"2.15.2\";\n\n// delay to wait before closing the transport connection after init if not active\nexport const RELAYER_TRANSPORT_CUTOFF = 10_000;\n","export const STORE_STORAGE_VERSION = \"0.3\";\n\nexport const WALLETCONNECT_CLIENT_ID = \"WALLETCONNECT_CLIENT_ID\";\n","import { THIRTY_DAYS, FIVE_SECONDS } from \"@walletconnect/time\";\n\nexport const SUBSCRIBER_EVENTS = {\n  created: \"subscription_created\",\n  deleted: \"subscription_deleted\",\n  expired: \"subscription_expired\",\n  disabled: \"subscription_disabled\",\n  sync: \"subscription_sync\",\n  resubscribed: \"subscription_resubscribed\",\n};\n\nexport const SUBSCRIBER_DEFAULT_TTL = THIRTY_DAYS;\n\nexport const SUBSCRIBER_CONTEXT = \"subscription\";\n\nexport const SUBSCRIBER_STORAGE_VERSION = \"0.3\";\n\nexport const PENDING_SUB_RESOLUTION_TIMEOUT = FIVE_SECONDS * 1000;\n","import { THIRTY_DAYS, ONE_DAY, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { RelayerTypes, PairingJsonRpcTypes } from \"@walletconnect/types\";\n\nexport const PAIRING_CONTEXT = \"pairing\";\n\nexport const PAIRING_STORAGE_VERSION = \"0.3\";\n\nexport const PAIRING_DEFAULT_TTL = THIRTY_DAYS;\n\nexport const PAIRING_RPC_OPTS: Record<\n  PairingJsonRpcTypes.WcMethod | \"unregistered_method\",\n  {\n    req: RelayerTypes.PublishOptions;\n    res: RelayerTypes.PublishOptions;\n  }\n> = {\n  wc_pairingDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1000,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1001,\n    },\n  },\n  wc_pairingPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1002,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1003,\n    },\n  },\n  unregistered_method: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 0,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 0,\n    },\n  },\n};\n\nexport const PAIRING_EVENTS = {\n  create: \"pairing_create\",\n  expire: \"pairing_expire\",\n  delete: \"pairing_delete\",\n  ping: \"pairing_ping\",\n};\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const EXPIRER_CONTEXT = \"expirer\";\n\nexport const EXPIRER_EVENTS = {\n  created: \"expirer_created\",\n  deleted: \"expirer_deleted\",\n  expired: \"expirer_expired\",\n  sync: \"expirer_sync\",\n};\n\nexport const EXPIRER_STORAGE_VERSION = \"0.3\";\n\nexport const EXPIRER_DEFAULT_TTL = ONE_DAY;\n","export const VERIFY_CONTEXT = \"verify-api\";\n\nconst VERIFY_SERVER_COM = \"https://verify.walletconnect.com\";\nconst VERIFY_SERVER_ORG = \"https://verify.walletconnect.org\";\nexport const VERIFY_SERVER = VERIFY_SERVER_ORG;\nexport const VERIFY_SERVER_V3 = `${VERIFY_SERVER}/v3`;\n\nexport const TRUSTED_VERIFY_URLS = [VERIFY_SERVER_COM, VERIFY_SERVER_ORG];\n","export const ECHO_CONTEXT = \"echo\";\n\nexport const ECHO_URL = \"https://echo.walletconnect.com\";\n","export const EVENT_CLIENT_CONTEXT = \"event-client\";\n\nexport const EVENT_CLIENT_PAIRING_TRACES = {\n  pairing_started: \"pairing_started\",\n  pairing_uri_validation_success: \"pairing_uri_validation_success\",\n  pairing_uri_not_expired: \"pairing_uri_not_expired\",\n  store_new_pairing: \"store_new_pairing\",\n  subscribing_pairing_topic: \"subscribing_pairing_topic\",\n  subscribe_pairing_topic_success: \"subscribe_pairing_topic_success\",\n  existing_pairing: \"existing_pairing\",\n  pairing_not_expired: \"pairing_not_expired\",\n  emit_inactive_pairing: \"emit_inactive_pairing\",\n  emit_session_proposal: \"emit_session_proposal\",\n  subscribing_to_pairing_topic: \"subscribing_to_pairing_topic\",\n};\n\nexport const EVENT_CLIENT_PAIRING_ERRORS = {\n  no_wss_connection: \"no_wss_connection\",\n  no_internet_connection: \"no_internet_connection\",\n  malformed_pairing_uri: \"malformed_pairing_uri\",\n  active_pairing_already_exists: \"active_pairing_already_exists\",\n  subscribe_pairing_topic_failure: \"subscribe_pairing_topic_failure\",\n  pairing_expired: \"pairing_expired\",\n  proposal_expired: \"proposal_expired\",\n  proposal_listener_not_found: \"proposal_listener_not_found\",\n};\n\nexport const EVENT_CLIENT_SESSION_TRACES = {\n  session_approve_started: \"session_approve_started\",\n  proposal_not_expired: \"proposal_not_expired\",\n  session_namespaces_validation_success: \"session_namespaces_validation_success\",\n  create_session_topic: \"create_session_topic\",\n  subscribing_session_topic: \"subscribing_session_topic\",\n  subscribe_session_topic_success: \"subscribe_session_topic_success\",\n  publishing_session_approve: \"publishing_session_approve\",\n  session_approve_publish_success: \"session_approve_publish_success\",\n  store_session: \"store_session\",\n  publishing_session_settle: \"publishing_session_settle\",\n  session_settle_publish_success: \"session_settle_publish_success\",\n};\n\nexport const EVENT_CLIENT_SESSION_ERRORS = {\n  no_internet_connection: \"no_internet_connection\",\n  no_wss_connection: \"no_wss_connection\",\n  proposal_expired: \"proposal_expired\",\n  subscribe_session_topic_failure: \"subscribe_session_topic_failure\",\n  session_approve_publish_failure: \"session_approve_publish_failure\",\n  session_settle_publish_failure: \"session_settle_publish_failure\",\n  session_approve_namespace_validation_failure: \"session_approve_namespace_validation_failure\",\n  proposal_not_found: \"proposal_not_found\",\n};\n\nexport const EVENT_CLIENT_AUTHENTICATE_TRACES = {\n  authenticated_session_approve_started: \"authenticated_session_approve_started\",\n  authenticated_session_not_expired: \"authenticated_session_not_expired\",\n  chains_caip2_compliant: \"chains_caip2_compliant\",\n  chains_evm_compliant: \"chains_evm_compliant\",\n  create_authenticated_session_topic: \"create_authenticated_session_topic\",\n  cacaos_verified: \"cacaos_verified\",\n  store_authenticated_session: \"store_authenticated_session\",\n  subscribing_authenticated_session_topic: \"subscribing_authenticated_session_topic\",\n  subscribe_authenticated_session_topic_success: \"subscribe_authenticated_session_topic_success\",\n  publishing_authenticated_session_approve: \"publishing_authenticated_session_approve\",\n  authenticated_session_approve_publish_success: \"authenticated_session_approve_publish_success\",\n};\n\nexport const EVENT_CLIENT_AUTHENTICATE_ERRORS = {\n  no_internet_connection: \"no_internet_connection\",\n  no_wss_connection: \"no_wss_connection\",\n  missing_session_authenticate_request: \"missing_session_authenticate_request\",\n  session_authenticate_request_expired: \"session_authenticate_request_expired\",\n  chains_caip2_compliant_failure: \"chains_caip2_compliant_failure\",\n  chains_evm_compliant_failure: \"chains_evm_compliant_failure\",\n  invalid_cacao: \"invalid_cacao\",\n  subscribe_authenticated_session_topic_failure: \"subscribe_authenticated_session_topic_failure\",\n  authenticated_session_approve_publish_failure: \"authenticated_session_approve_publish_failure\",\n  authenticated_session_pending_request_not_found:\n    \"authenticated_session_pending_request_not_found\",\n};\n\nexport const EVENTS_STORAGE_VERSION = 0.1;\n\nexport const EVENTS_STORAGE_CONTEXT = \"event-client\";\n\nexport const EVENTS_STORAGE_CLEANUP_INTERVAL = 86400;\n\nexport const EVENTS_CLIENT_API_URL = \"https://pulse.walletconnect.com/batch\";\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IKeyChain } from \"@walletconnect/types\";\nimport { getInternalError, mapToObj, objToMap } from \"@walletconnect/utils\";\n\nimport { CORE_STORAGE_PREFIX, KEYCHAIN_CONTEXT, KEYCHAIN_STORAGE_VERSION } from \"../constants\";\n\nexport class KeyChain implements IKeyChain {\n  public keychain = new Map<string, string>();\n  public name = KEYCHAIN_CONTEXT;\n  public version = KEYCHAIN_STORAGE_VERSION;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IKeyChain[\"init\"] = async () => {\n    if (!this.initialized) {\n      const keychain = await this.getKeyChain();\n      if (typeof keychain !== \"undefined\") {\n        this.keychain = keychain;\n      }\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  public has: IKeyChain[\"has\"] = (tag) => {\n    this.isInitialized();\n    return this.keychain.has(tag);\n  };\n\n  public set: IKeyChain[\"set\"] = async (tag, key) => {\n    this.isInitialized();\n    this.keychain.set(tag, key);\n    await this.persist();\n  };\n\n  public get: IKeyChain[\"get\"] = (tag) => {\n    this.isInitialized();\n    const key = this.keychain.get(tag);\n    if (typeof key === \"undefined\") {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${tag}`);\n      throw new Error(message);\n    }\n    return key;\n  };\n\n  public del: IKeyChain[\"del\"] = async (tag) => {\n    this.isInitialized();\n    this.keychain.delete(tag);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setKeyChain(keychain: Map<string, string>) {\n    await this.core.storage.setItem<Record<string, string>>(this.storageKey, mapToObj(keychain));\n  }\n\n  private async getKeyChain() {\n    const keychain = await this.core.storage.getItem<Record<string, string>>(this.storageKey);\n    return typeof keychain !== \"undefined\" ? objToMap(keychain) : undefined;\n  }\n\n  private async persist() {\n    await this.setKeyChain(this.keychain);\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\nimport { ICore, ICrypto, IKeyChain } from \"@walletconnect/types\";\nimport * as relayAuth from \"@walletconnect/relay-auth\";\nimport { fromString } from \"uint8arrays/from-string\";\nimport {\n  decrypt,\n  deriveSymKey,\n  encrypt,\n  generateKeyPair as generateKeyPairUtil,\n  hashKey,\n  getInternalError,\n  generateRandomBytes32,\n  validateEncoding,\n  validateDecoding,\n  isTypeOneEnvelope,\n  deserialize,\n  decodeTypeByte,\n  BASE16,\n} from \"@walletconnect/utils\";\nimport { toString } from \"uint8arrays\";\n\nimport { CRYPTO_CONTEXT, CRYPTO_CLIENT_SEED, CRYPTO_JWT_TTL } from \"../constants\";\nimport { KeyChain } from \"./keychain\";\n\nexport class Crypto implements ICrypto {\n  public name = CRYPTO_CONTEXT;\n  public keychain: ICrypto[\"keychain\"];\n  public readonly randomSessionIdentifier = generateRandomBytes32();\n\n  private initialized = false;\n\n  constructor(public core: ICore, public logger: Logger, keychain?: IKeyChain) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n    this.keychain = keychain || new KeyChain(this.core, this.logger);\n  }\n\n  public init: ICrypto[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.keychain.init();\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public hasKeys: ICrypto[\"hasKeys\"] = (tag) => {\n    this.isInitialized();\n    return this.keychain.has(tag);\n  };\n\n  public getClientId: ICrypto[\"getClientId\"] = async () => {\n    this.isInitialized();\n    const seed = await this.getClientSeed();\n    const keyPair = relayAuth.generateKeyPair(seed);\n    const clientId = relayAuth.encodeIss(keyPair.publicKey);\n    return clientId;\n  };\n\n  public generateKeyPair: ICrypto[\"generateKeyPair\"] = () => {\n    this.isInitialized();\n    const keyPair = generateKeyPairUtil();\n    return this.setPrivateKey(keyPair.publicKey, keyPair.privateKey);\n  };\n\n  public signJWT: ICrypto[\"signJWT\"] = async (aud) => {\n    this.isInitialized();\n    const seed = await this.getClientSeed();\n    const keyPair = relayAuth.generateKeyPair(seed);\n    const sub = this.randomSessionIdentifier;\n    const ttl = CRYPTO_JWT_TTL;\n    const jwt = await relayAuth.signJWT(sub, aud, ttl, keyPair);\n    return jwt;\n  };\n\n  public generateSharedKey: ICrypto[\"generateSharedKey\"] = (\n    selfPublicKey,\n    peerPublicKey,\n    overrideTopic,\n  ) => {\n    this.isInitialized();\n    const selfPrivateKey = this.getPrivateKey(selfPublicKey);\n    const symKey = deriveSymKey(selfPrivateKey, peerPublicKey);\n    return this.setSymKey(symKey, overrideTopic);\n  };\n\n  public setSymKey: ICrypto[\"setSymKey\"] = async (symKey, overrideTopic) => {\n    this.isInitialized();\n    const topic = overrideTopic || hashKey(symKey);\n    await this.keychain.set(topic, symKey);\n    return topic;\n  };\n\n  public deleteKeyPair: ICrypto[\"deleteKeyPair\"] = async (publicKey: string) => {\n    this.isInitialized();\n    await this.keychain.del(publicKey);\n  };\n\n  public deleteSymKey: ICrypto[\"deleteSymKey\"] = async (topic: string) => {\n    this.isInitialized();\n    await this.keychain.del(topic);\n  };\n\n  public encode: ICrypto[\"encode\"] = async (topic, payload, opts) => {\n    this.isInitialized();\n    const params = validateEncoding(opts);\n    const message = safeJsonStringify(payload);\n    if (isTypeOneEnvelope(params)) {\n      const selfPublicKey = params.senderPublicKey;\n      const peerPublicKey = params.receiverPublicKey;\n      topic = await this.generateSharedKey(selfPublicKey, peerPublicKey);\n    }\n    const symKey = this.getSymKey(topic);\n    const { type, senderPublicKey } = params;\n    const result = encrypt({ type, symKey, message, senderPublicKey });\n    return result;\n  };\n\n  public decode: ICrypto[\"decode\"] = async (topic, encoded, opts) => {\n    this.isInitialized();\n    const params = validateDecoding(encoded, opts);\n    if (isTypeOneEnvelope(params)) {\n      const selfPublicKey = params.receiverPublicKey;\n      const peerPublicKey = params.senderPublicKey;\n      topic = await this.generateSharedKey(selfPublicKey, peerPublicKey);\n    }\n    try {\n      const symKey = this.getSymKey(topic);\n      const message = decrypt({ symKey, encoded });\n      const payload = safeJsonParse(message);\n      return payload;\n    } catch (error) {\n      this.logger.error(\n        `Failed to decode message from topic: '${topic}', clientId: '${await this.getClientId()}'`,\n      );\n      this.logger.error(error);\n    }\n  };\n\n  public getPayloadType: ICrypto[\"getPayloadType\"] = (encoded) => {\n    const deserialized = deserialize(encoded);\n    return decodeTypeByte(deserialized.type);\n  };\n\n  public getPayloadSenderPublicKey: ICrypto[\"getPayloadSenderPublicKey\"] = (encoded) => {\n    const deserialized = deserialize(encoded);\n    return deserialized.senderPublicKey\n      ? toString(deserialized.senderPublicKey, BASE16)\n      : undefined;\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setPrivateKey(publicKey: string, privateKey: string): Promise<string> {\n    await this.keychain.set(publicKey, privateKey);\n    return publicKey;\n  }\n\n  private getPrivateKey(publicKey: string) {\n    const privateKey = this.keychain.get(publicKey);\n    return privateKey;\n  }\n\n  private async getClientSeed(): Promise<Uint8Array> {\n    let seed = \"\";\n    try {\n      seed = this.keychain.get(CRYPTO_CLIENT_SEED);\n    } catch {\n      seed = generateRandomBytes32();\n      await this.keychain.set(CRYPTO_CLIENT_SEED, seed);\n    }\n    return fromString(seed, \"base16\");\n  }\n\n  private getSymKey(topic: string) {\n    const symKey = this.keychain.get(topic);\n    return symKey;\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IMessageTracker, MessageRecord } from \"@walletconnect/types\";\nimport { hashMessage, mapToObj, objToMap, getInternalError } from \"@walletconnect/utils\";\nimport { CORE_STORAGE_PREFIX, MESSAGES_CONTEXT, MESSAGES_STORAGE_VERSION } from \"../constants\";\n\nexport class MessageTracker extends IMessageTracker {\n  public messages = new Map<string, MessageRecord>();\n  public name = MESSAGES_CONTEXT;\n  public version = MESSAGES_STORAGE_VERSION;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public logger: Logger, public core: ICore) {\n    super(logger, core);\n    this.logger = generateChildLogger(logger, this.name);\n    this.core = core;\n  }\n\n  public init: IMessageTracker[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      try {\n        const messages = await this.getRelayerMessages();\n        if (typeof messages !== \"undefined\") {\n          this.messages = messages;\n        }\n\n        this.logger.debug(`Successfully Restored records for ${this.name}`);\n        this.logger.trace({ type: \"method\", method: \"restore\", size: this.messages.size });\n      } catch (e) {\n        this.logger.debug(`Failed to Restore records for ${this.name}`);\n        this.logger.error(e as any);\n      } finally {\n        this.initialized = true;\n      }\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  public set: IMessageTracker[\"set\"] = async (topic, message) => {\n    this.isInitialized();\n    const hash = hashMessage(message);\n    let messages = this.messages.get(topic);\n    if (typeof messages === \"undefined\") {\n      messages = {};\n    }\n    if (typeof messages[hash] !== \"undefined\") {\n      return hash;\n    }\n    messages[hash] = message;\n    this.messages.set(topic, messages);\n    await this.persist();\n    return hash;\n  };\n\n  public get: IMessageTracker[\"get\"] = (topic) => {\n    this.isInitialized();\n    let messages = this.messages.get(topic);\n    if (typeof messages === \"undefined\") {\n      messages = {};\n    }\n    return messages;\n  };\n\n  public has: IMessageTracker[\"has\"] = (topic, message) => {\n    this.isInitialized();\n    const messages = this.get(topic);\n    const hash = hashMessage(message);\n    return typeof messages[hash] !== \"undefined\";\n  };\n\n  public del: IMessageTracker[\"del\"] = async (topic) => {\n    this.isInitialized();\n    this.messages.delete(topic);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setRelayerMessages(messages: Map<string, MessageRecord>): Promise<void> {\n    await this.core.storage.setItem<Record<string, MessageRecord>>(\n      this.storageKey,\n      mapToObj(messages),\n    );\n  }\n\n  private async getRelayerMessages(): Promise<Map<string, MessageRecord> | undefined> {\n    const messages = await this.core.storage.getItem<Record<string, MessageRecord>>(\n      this.storageKey,\n    );\n    return typeof messages !== \"undefined\" ? objToMap(messages) : undefined;\n  }\n\n  private async persist() {\n    await this.setRelayerMessages(this.messages);\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { JsonRpcPayload, RequestArguments } from \"@walletconnect/jsonrpc-types\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { IPublisher, IRelayer, PublisherTypes, RelayerTypes } from \"@walletconnect/types\";\nimport {\n  getRelayProtocolApi,\n  getRelayProtocolName,\n  isUndefined,\n  createExpiringPromise,\n} from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\n\nimport { PUBLISHER_CONTEXT, PUBLISHER_DEFAULT_TTL, RELAYER_EVENTS } from \"../constants\";\nimport { getBigIntRpcId } from \"@walletconnect/jsonrpc-utils\";\nimport { ONE_MINUTE, ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\n\nexport class Publisher extends IPublisher {\n  public events = new EventEmitter();\n  public name = PUBLISHER_CONTEXT;\n  public queue = new Map<string, PublisherTypes.Params>();\n\n  private publishTimeout = toMiliseconds(ONE_MINUTE);\n  private failedPublishTimeout = toMiliseconds(ONE_SECOND);\n  private needsTransportRestart = false;\n\n  constructor(public relayer: IRelayer, public logger: Logger) {\n    super(relayer, logger);\n    this.relayer = relayer;\n    this.logger = generateChildLogger(logger, this.name);\n    this.registerEventListeners();\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public publish: IPublisher[\"publish\"] = async (topic, message, opts) => {\n    this.logger.debug(`Publishing Payload`);\n    this.logger.trace({ type: \"method\", method: \"publish\", params: { topic, message, opts } });\n\n    const ttl = opts?.ttl || PUBLISHER_DEFAULT_TTL;\n    const relay = getRelayProtocolName(opts);\n    const prompt = opts?.prompt || false;\n    const tag = opts?.tag || 0;\n    const id = opts?.id || (getBigIntRpcId().toString() as any);\n    const params = {\n      topic,\n      message,\n      opts: {\n        ttl,\n        relay,\n        prompt,\n        tag,\n        id,\n        attestation: opts?.attestation,\n      },\n    };\n    const failedPublishMessage = `Failed to publish payload, please try again. id:${id} tag:${tag}`;\n    const startPublish = Date.now();\n    let result;\n    let attempts = 1;\n\n    try {\n      /**\n       * Loop until the publish is successful or the timeout is reached\n       * The loop allows to retry to retry the publish in case of disconnect\n       */\n      while (result === undefined) {\n        // Terminate the publishing attempts if publisTimeout has been exceeded\n        if (Date.now() - startPublish > this.publishTimeout) {\n          throw new Error(failedPublishMessage);\n        }\n\n        this.logger.trace({ id, attempts }, `publisher.publish - attempt ${attempts}`);\n        const publish = await createExpiringPromise(\n          this.rpcPublish(topic, message, ttl, relay, prompt, tag, id, opts?.attestation).catch(\n            (e) => this.logger.warn(e),\n          ),\n          this.publishTimeout,\n          failedPublishMessage,\n        );\n        result = await publish;\n        attempts++;\n\n        if (!result) {\n          // small delay before retrying so we can limit retry to max 1 time per second\n          // if network is down `rpcPublish` will throw immediately\n          await new Promise((resolve) => setTimeout(resolve, this.failedPublishTimeout));\n        }\n      }\n      this.relayer.events.emit(RELAYER_EVENTS.publish, params);\n      this.logger.debug(`Successfully Published Payload`);\n      this.logger.trace({\n        type: \"method\",\n        method: \"publish\",\n        params: { id, topic, message, opts },\n      });\n    } catch (e) {\n      this.logger.debug(`Failed to Publish Payload`);\n      this.logger.error(e as any);\n      if (opts?.internal?.throwOnFailedPublish) {\n        throw e;\n      }\n      this.queue.set(id, params);\n    }\n  };\n\n  public on: IPublisher[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IPublisher[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IPublisher[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IPublisher[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private rpcPublish(\n    topic: string,\n    message: string,\n    ttl: number,\n    relay: RelayerTypes.ProtocolOptions,\n    prompt?: boolean,\n    tag?: number,\n    id?: number,\n    attestation?: string,\n  ) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.PublishParams> = {\n      method: api.publish,\n      params: {\n        topic,\n        message,\n        ttl,\n        prompt,\n        tag,\n        attestation,\n      },\n      id,\n    };\n    if (isUndefined(request.params?.prompt)) delete request.params?.prompt;\n    if (isUndefined(request.params?.tag)) delete request.params?.tag;\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"message\", direction: \"outgoing\", request });\n    return this.relayer.request(request);\n  }\n\n  private removeRequestFromQueue(id: string) {\n    this.queue.delete(id);\n  }\n\n  private checkQueue() {\n    this.queue.forEach(async (params) => {\n      const { topic, message, opts } = params;\n      await this.publish(topic, message, opts);\n    });\n  }\n\n  private registerEventListeners() {\n    this.relayer.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => {\n      // restart the transport if needed\n      // queue will be processed on the next pulse\n      if (this.needsTransportRestart) {\n        this.needsTransportRestart = false;\n        this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n        return;\n      }\n      this.checkQueue();\n    });\n    this.relayer.on(RELAYER_EVENTS.message_ack, (event: JsonRpcPayload) => {\n      this.removeRequestFromQueue(event.id.toString());\n    });\n  }\n}\n","import { ISubscriberTopicMap } from \"@walletconnect/types\";\n\nexport class SubscriberTopicMap implements ISubscriberTopicMap {\n  public map = new Map<string, string[]>();\n\n  get topics(): string[] {\n    return Array.from(this.map.keys());\n  }\n\n  public set: ISubscriberTopicMap[\"set\"] = (topic, id) => {\n    const ids = this.get(topic);\n    if (this.exists(topic, id)) return;\n    this.map.set(topic, [...ids, id]);\n  };\n\n  public get: ISubscriberTopicMap[\"get\"] = (topic) => {\n    const ids = this.map.get(topic);\n    return ids || [];\n  };\n\n  public exists: ISubscriberTopicMap[\"exists\"] = (topic, id) => {\n    const ids = this.get(topic);\n    return ids.includes(id);\n  };\n\n  public delete: ISubscriberTopicMap[\"delete\"] = (topic, id) => {\n    if (typeof id === \"undefined\") {\n      this.map.delete(topic);\n      return;\n    }\n    if (!this.map.has(topic)) return;\n    const ids = this.get(topic);\n    if (!this.exists(topic, id)) return;\n    const remaining = ids.filter((x) => x !== id);\n    if (!remaining.length) {\n      this.map.delete(topic);\n      return;\n    }\n    this.map.set(topic, remaining);\n  };\n\n  public clear: ISubscriberTopicMap[\"clear\"] = () => {\n    this.map.clear();\n  };\n}\n","import { EventEmitter } from \"events\";\nimport { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { ErrorResponse, RequestArguments } from \"@walletconnect/jsonrpc-types\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { ONE_MINUTE, Watch, toMiliseconds } from \"@walletconnect/time\";\nimport {\n  IRelayer,\n  ISubscriber,\n  RelayerTypes,\n  SubscriberEvents,\n  SubscriberTypes,\n} from \"@walletconnect/types\";\nimport {\n  getSdkError,\n  getInternalError,\n  getRelayProtocolApi,\n  getRelayProtocolName,\n  createExpiringPromise,\n  hashMessage,\n  isValidArray,\n} from \"@walletconnect/utils\";\nimport {\n  CORE_STORAGE_PREFIX,\n  SUBSCRIBER_CONTEXT,\n  SUBSCRIBER_EVENTS,\n  SUBSCRIBER_STORAGE_VERSION,\n  PENDING_SUB_RESOLUTION_TIMEOUT,\n  RELAYER_EVENTS,\n} from \"../constants\";\nimport { SubscriberTopicMap } from \"./topicmap\";\n\nexport class Subscriber extends ISubscriber {\n  public subscriptions = new Map<string, SubscriberTypes.Active>();\n  public topicMap = new SubscriberTopicMap();\n  public events = new EventEmitter();\n  public name = SUBSCRIBER_CONTEXT;\n  public version = SUBSCRIBER_STORAGE_VERSION;\n  public pending = new Map<string, SubscriberTypes.Params>();\n\n  private cached: SubscriberTypes.Active[] = [];\n  private initialized = false;\n  private pendingSubscriptionWatchLabel = \"pending_sub_watch_label\";\n  private pollingInterval = 20;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n  private subscribeTimeout = toMiliseconds(ONE_MINUTE);\n  private restartInProgress = false;\n  private clientId: string;\n  private batchSubscribeTopicsLimit = 500;\n  private pendingBatchMessages: RelayerTypes.MessageEvent[] = [];\n\n  constructor(public relayer: IRelayer, public logger: Logger) {\n    super(relayer, logger);\n    this.relayer = relayer;\n    this.logger = generateChildLogger(logger, this.name);\n    this.clientId = \"\"; // assigned in init\n  }\n\n  public init: ISubscriber[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      this.registerEventListeners();\n      this.clientId = await this.relayer.core.crypto.getClientId();\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return (\n      this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + \"//\" + this.name\n    );\n  }\n\n  get length() {\n    return this.subscriptions.size;\n  }\n\n  get ids() {\n    return Array.from(this.subscriptions.keys());\n  }\n\n  get values() {\n    return Array.from(this.subscriptions.values());\n  }\n\n  get topics() {\n    return this.topicMap.topics;\n  }\n\n  public subscribe: ISubscriber[\"subscribe\"] = async (topic, opts) => {\n    await this.restartToComplete();\n    this.isInitialized();\n    this.logger.debug(`Subscribing Topic`);\n    this.logger.trace({ type: \"method\", method: \"subscribe\", params: { topic, opts } });\n    try {\n      const relay = getRelayProtocolName(opts);\n      const params = { topic, relay };\n      this.pending.set(topic, params);\n      const id = await this.rpcSubscribe(topic, relay);\n      if (typeof id === \"string\") {\n        this.onSubscribe(id, params);\n        this.logger.debug(`Successfully Subscribed Topic`);\n        this.logger.trace({ type: \"method\", method: \"subscribe\", params: { topic, opts } });\n      }\n      return id;\n    } catch (e) {\n      this.logger.debug(`Failed to Subscribe Topic`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  };\n\n  public unsubscribe: ISubscriber[\"unsubscribe\"] = async (topic, opts) => {\n    await this.restartToComplete();\n    this.isInitialized();\n    if (typeof opts?.id !== \"undefined\") {\n      await this.unsubscribeById(topic, opts.id, opts);\n    } else {\n      await this.unsubscribeByTopic(topic, opts);\n    }\n  };\n\n  public isSubscribed: ISubscriber[\"isSubscribed\"] = async (topic: string) => {\n    // topic subscription is already resolved\n    if (this.topics.includes(topic)) return true;\n    const label = `${this.pendingSubscriptionWatchLabel}_${topic}`;\n    // wait for the subscription to resolve\n    const exists = await new Promise<boolean>((resolve, reject) => {\n      const watch = new Watch();\n      watch.start(label);\n      const interval = setInterval(() => {\n        if (!this.pending.has(topic) && this.topics.includes(topic)) {\n          clearInterval(interval);\n          watch.stop(label);\n          resolve(true);\n        }\n        if (watch.elapsed(label) >= PENDING_SUB_RESOLUTION_TIMEOUT) {\n          clearInterval(interval);\n          watch.stop(label);\n          reject(new Error(\"Subscription resolution timeout\"));\n        }\n      }, this.pollingInterval);\n    }).catch(() => false);\n    return exists;\n  };\n\n  public on: ISubscriber[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: ISubscriber[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: ISubscriber[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: ISubscriber[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  public start: ISubscriber[\"start\"] = async () => {\n    await this.onConnect();\n  };\n\n  public stop: ISubscriber[\"stop\"] = async () => {\n    await this.onDisconnect();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private hasSubscription(id: string, topic: string) {\n    let result = false;\n    try {\n      const subscription = this.getSubscription(id);\n      result = subscription.topic === topic;\n    } catch (e) {\n      // ignore error\n    }\n    return result;\n  }\n\n  private onEnable() {\n    this.cached = [];\n    this.initialized = true;\n  }\n\n  private onDisable() {\n    this.cached = this.values;\n    this.subscriptions.clear();\n    this.topicMap.clear();\n  }\n\n  private async unsubscribeByTopic(topic: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    const ids = this.topicMap.get(topic);\n    await Promise.all(ids.map(async (id) => await this.unsubscribeById(topic, id, opts)));\n  }\n\n  private async unsubscribeById(topic: string, id: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    this.logger.debug(`Unsubscribing Topic`);\n    this.logger.trace({ type: \"method\", method: \"unsubscribe\", params: { topic, id, opts } });\n    try {\n      const relay = getRelayProtocolName(opts);\n      await this.rpcUnsubscribe(topic, id, relay);\n      const reason = getSdkError(\"USER_DISCONNECTED\", `${this.name}, ${topic}`);\n      await this.onUnsubscribe(topic, id, reason);\n      this.logger.debug(`Successfully Unsubscribed Topic`);\n      this.logger.trace({ type: \"method\", method: \"unsubscribe\", params: { topic, id, opts } });\n    } catch (e) {\n      this.logger.debug(`Failed to Unsubscribe Topic`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  }\n\n  private async rpcSubscribe(topic: string, relay: RelayerTypes.ProtocolOptions) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.SubscribeParams> = {\n      method: api.subscribe,\n      params: {\n        topic,\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    try {\n      const subscribe = await createExpiringPromise(\n        this.relayer.request(request).catch((e) => this.logger.warn(e)),\n        this.subscribeTimeout,\n      );\n      const result = await subscribe;\n      // return null to indicate that the subscription failed\n      return result ? hashMessage(topic + this.clientId) : null;\n    } catch (err) {\n      this.logger.debug(`Outgoing Relay Subscribe Payload stalled`);\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n    }\n    return null;\n  }\n\n  private async rpcBatchSubscribe(subscriptions: SubscriberTypes.Params[]) {\n    if (!subscriptions.length) return;\n    const relay = subscriptions[0].relay;\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.BatchSubscribeParams> = {\n      method: api.batchSubscribe,\n      params: {\n        topics: subscriptions.map((s) => s.topic),\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    try {\n      const subscribe = await createExpiringPromise(\n        this.relayer.request(request).catch((e) => this.logger.warn(e)),\n        this.subscribeTimeout,\n      );\n      return await subscribe;\n    } catch (err) {\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n    }\n  }\n\n  private async rpcBatchFetchMessages(subscriptions: SubscriberTypes.Params[]) {\n    if (!subscriptions.length) return;\n    const relay = subscriptions[0].relay;\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.BatchFetchMessagesParams> = {\n      method: api.batchFetchMessages,\n      params: {\n        topics: subscriptions.map((s) => s.topic),\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    let result;\n    try {\n      const fetchMessagesPromise = await createExpiringPromise(\n        this.relayer.request(request).catch((e) => this.logger.warn(e)),\n        this.subscribeTimeout,\n      );\n      result = (await fetchMessagesPromise) as {\n        messages: RelayerTypes.MessageEvent[];\n      };\n    } catch (err) {\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n    }\n    return result;\n  }\n\n  private rpcUnsubscribe(topic: string, id: string, relay: RelayerTypes.ProtocolOptions) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.UnsubscribeParams> = {\n      method: api.unsubscribe,\n      params: {\n        topic,\n        id,\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    return this.relayer.request(request);\n  }\n\n  private onSubscribe(id: string, params: SubscriberTypes.Params) {\n    this.setSubscription(id, { ...params, id });\n    this.pending.delete(params.topic);\n  }\n\n  private onBatchSubscribe(subscriptions: SubscriberTypes.Active[]) {\n    if (!subscriptions.length) return;\n    subscriptions.forEach((subscription) => {\n      this.setSubscription(subscription.id, { ...subscription });\n      this.pending.delete(subscription.topic);\n    });\n  }\n\n  private async onUnsubscribe(topic: string, id: string, reason: ErrorResponse) {\n    this.events.removeAllListeners(id);\n    if (this.hasSubscription(id, topic)) {\n      this.deleteSubscription(id, reason);\n    }\n    await this.relayer.messages.del(topic);\n  }\n\n  private async setRelayerSubscriptions(subscriptions: SubscriberTypes.Active[]) {\n    await this.relayer.core.storage.setItem<SubscriberTypes.Active[]>(\n      this.storageKey,\n      subscriptions,\n    );\n  }\n\n  private async getRelayerSubscriptions() {\n    const subscriptions = await this.relayer.core.storage.getItem<SubscriberTypes.Active[]>(\n      this.storageKey,\n    );\n    return subscriptions;\n  }\n\n  private setSubscription(id: string, subscription: SubscriberTypes.Active) {\n    this.logger.debug(`Setting subscription`);\n    this.logger.trace({ type: \"method\", method: \"setSubscription\", id, subscription });\n    this.addSubscription(id, subscription);\n  }\n\n  private addSubscription(id: string, subscription: SubscriberTypes.Active) {\n    this.subscriptions.set(id, { ...subscription });\n    this.topicMap.set(subscription.topic, id);\n    this.events.emit(SUBSCRIBER_EVENTS.created, subscription);\n  }\n\n  private getSubscription(id: string) {\n    this.logger.debug(`Getting subscription`);\n    this.logger.trace({ type: \"method\", method: \"getSubscription\", id });\n    const subscription = this.subscriptions.get(id);\n    if (!subscription) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\n      throw new Error(message);\n    }\n    return subscription;\n  }\n\n  private deleteSubscription(id: string, reason: ErrorResponse) {\n    this.logger.debug(`Deleting subscription`);\n    this.logger.trace({ type: \"method\", method: \"deleteSubscription\", id, reason });\n    const subscription = this.getSubscription(id);\n    this.subscriptions.delete(id);\n    this.topicMap.delete(subscription.topic, id);\n    this.events.emit(SUBSCRIBER_EVENTS.deleted, {\n      ...subscription,\n      reason,\n    } as SubscriberEvents.Deleted);\n  }\n\n  private restart = async () => {\n    this.restartInProgress = true;\n    await this.restore();\n    await this.reset();\n    this.restartInProgress = false;\n  };\n\n  private async persist() {\n    await this.setRelayerSubscriptions(this.values);\n    this.events.emit(SUBSCRIBER_EVENTS.sync);\n  }\n\n  private async reset() {\n    if (this.cached.length) {\n      const numOfBatches = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);\n      for (let i = 0; i < numOfBatches; i++) {\n        const batch = this.cached.splice(0, this.batchSubscribeTopicsLimit);\n        await this.batchFetchMessages(batch);\n        await this.batchSubscribe(batch);\n      }\n    }\n    this.events.emit(SUBSCRIBER_EVENTS.resubscribed);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getRelayerSubscriptions();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.subscriptions.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored subscriptions for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", subscriptions: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private async batchSubscribe(subscriptions: SubscriberTypes.Params[]) {\n    if (!subscriptions.length) return;\n\n    const result = (await this.rpcBatchSubscribe(subscriptions)) as string[];\n    if (!isValidArray(result)) return;\n\n    this.onBatchSubscribe(result.map((id, i) => ({ ...subscriptions[i], id })));\n  }\n\n  private async batchFetchMessages(subscriptions: SubscriberTypes.Params[]) {\n    if (!subscriptions.length) return;\n    this.logger.trace(`Fetching batch messages for ${subscriptions.length} subscriptions`);\n    const response = await this.rpcBatchFetchMessages(subscriptions);\n    if (response && response.messages) {\n      this.pendingBatchMessages = this.pendingBatchMessages.concat(response.messages);\n    }\n  }\n\n  private async onConnect() {\n    await this.restart();\n    this.onEnable();\n  }\n\n  private onDisconnect() {\n    this.onDisable();\n  }\n\n  private async checkPending() {\n    if (!this.initialized || !this.relayer.connected) return;\n\n    const pendingSubscriptions: SubscriberTypes.Params[] = [];\n    this.pending.forEach((params) => {\n      pendingSubscriptions.push(params);\n    });\n    await this.batchSubscribe(pendingSubscriptions);\n\n    if (this.pendingBatchMessages.length) {\n      await this.relayer.handleBatchMessageEvents(this.pendingBatchMessages);\n      this.pendingBatchMessages = [];\n    }\n  }\n\n  private registerEventListeners() {\n    this.relayer.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, async () => {\n      await this.checkPending();\n    });\n    this.events.on(SUBSCRIBER_EVENTS.created, async (createdEvent: SubscriberEvents.Created) => {\n      const eventName = SUBSCRIBER_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\n      await this.persist();\n    });\n    this.events.on(SUBSCRIBER_EVENTS.deleted, async (deletedEvent: SubscriberEvents.Deleted) => {\n      const eventName = SUBSCRIBER_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\n      await this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  private async restartToComplete() {\n    if (!this.restartInProgress) return;\n\n    await new Promise<void>((resolve) => {\n      const interval = setInterval(() => {\n        if (!this.restartInProgress) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, this.pollingInterval);\n    });\n  }\n}\n","import { EventEmitter } from \"events\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport {\n  formatJsonRpcResult,\n  getBigIntRpcId,\n  IJsonRpcProvider,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  JsonRpcPayload,\n  JsonRpcRequest,\n  RequestArguments,\n} from \"@walletconnect/jsonrpc-utils\";\nimport WsConnection from \"@walletconnect/jsonrpc-ws-connection\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  pino,\n  Logger,\n} from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { ONE_MINUTE, ONE_SECOND, THIRTY_SECONDS, toMiliseconds } from \"@walletconnect/time\";\nimport {\n  ICore,\n  IMessageTracker,\n  IPublisher,\n  IRelayer,\n  ISubscriber,\n  RelayerOptions,\n  RelayerTypes,\n  SubscriberTypes,\n} from \"@walletconnect/types\";\nimport {\n  createExpiringPromise,\n  formatRelayRpcUrl,\n  isOnline,\n  subscribeToNetworkChange,\n  getBundleId,\n  getInternalError,\n  isNode,\n} from \"@walletconnect/utils\";\n\nimport {\n  RELAYER_SDK_VERSION,\n  RELAYER_CONTEXT,\n  RELAYER_DEFAULT_LOGGER,\n  RELAYER_EVENTS,\n  RELAYER_PROVIDER_EVENTS,\n  RELAYER_SUBSCRIBER_SUFFIX,\n  RELAYER_DEFAULT_RELAY_URL,\n  SUBSCRIBER_EVENTS,\n  RELAYER_RECONNECT_TIMEOUT,\n  RELAYER_TRANSPORT_CUTOFF,\n} from \"../constants\";\nimport { MessageTracker } from \"./messages\";\nimport { Publisher } from \"./publisher\";\nimport { Subscriber } from \"./subscriber\";\n\nexport class Relayer extends IRelayer {\n  public protocol = \"wc\";\n  public version = 2;\n\n  public core: ICore;\n  public logger: Logger;\n  public events = new EventEmitter();\n  public provider: IJsonRpcProvider;\n  public messages: IMessageTracker;\n  public subscriber: ISubscriber;\n  public publisher: IPublisher;\n  public name = RELAYER_CONTEXT;\n  public transportExplicitlyClosed = false;\n\n  private initialized = false;\n  private connectionAttemptInProgress = false;\n\n  private relayUrl: string;\n  private projectId: string | undefined;\n  private bundleId: string | undefined;\n  private connectionStatusPollingInterval = 20;\n  private staleConnectionErrors = [\"socket hang up\", \"stalled\", \"interrupted\"];\n  private hasExperiencedNetworkDisruption = false;\n  private requestsInFlight = new Map<\n    number,\n    {\n      promise: Promise<any>;\n      request: RequestArguments<RelayJsonRpc.SubscribeParams>;\n    }\n  >();\n\n  private pingTimeout: NodeJS.Timeout | undefined;\n  /**\n   * the relay pings the client 30 seconds after the last message was received\n   * meaning if we don't receive a message in 30 seconds, the connection can be considered dead\n   */\n  private heartBeatTimeout = toMiliseconds(THIRTY_SECONDS + ONE_SECOND);\n  private reconnectTimeout: NodeJS.Timeout | undefined;\n\n  constructor(opts: RelayerOptions) {\n    super(opts);\n    this.core = opts.core;\n    this.logger =\n      typeof opts.logger !== \"undefined\" && typeof opts.logger !== \"string\"\n        ? generateChildLogger(opts.logger, this.name)\n        : pino(getDefaultLoggerOptions({ level: opts.logger || RELAYER_DEFAULT_LOGGER }));\n    this.messages = new MessageTracker(this.logger, opts.core);\n    this.subscriber = new Subscriber(this, this.logger);\n    this.publisher = new Publisher(this, this.logger);\n\n    this.relayUrl = opts?.relayUrl || RELAYER_DEFAULT_RELAY_URL;\n    this.projectId = opts.projectId;\n    this.bundleId = getBundleId();\n\n    // re-assigned during init()\n    this.provider = {} as IJsonRpcProvider;\n  }\n\n  public async init() {\n    this.logger.trace(`Initialized`);\n    this.registerEventListeners();\n    await Promise.all([this.messages.init(), this.subscriber.init()]);\n    await this.transportOpen();\n    this.initialized = true;\n    setTimeout(async () => {\n      if (this.subscriber.topics.length === 0 && this.subscriber.pending.size === 0) {\n        this.logger.info(`No topics subscribed to after init, closing transport`);\n        await this.transportClose();\n        this.transportExplicitlyClosed = false;\n      }\n    }, RELAYER_TRANSPORT_CUTOFF);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get connected() {\n    // @ts-expect-error\n    return this.provider?.connection?.socket?.readyState === 1 ?? false;\n  }\n\n  get connecting() {\n    // @ts-expect-error\n    return this.provider?.connection?.socket?.readyState === 0 ?? false;\n  }\n\n  public async publish(topic: string, message: string, opts?: RelayerTypes.PublishOptions) {\n    this.isInitialized();\n    await this.publisher.publish(topic, message, opts);\n    await this.recordMessageEvent({\n      topic,\n      message,\n      // We don't have `publishedAt` from the relay server on outgoing, so use current time to satisfy type.\n      publishedAt: Date.now(),\n    });\n  }\n\n  public async subscribe(topic: string, opts?: RelayerTypes.SubscribeOptions) {\n    this.isInitialized();\n    let id = this.subscriber.topicMap.get(topic)?.[0] || \"\";\n    let resolvePromise: () => void;\n    const onSubCreated = (subscription: SubscriberTypes.Active) => {\n      if (subscription.topic === topic) {\n        this.subscriber.off(SUBSCRIBER_EVENTS.created, onSubCreated);\n        resolvePromise();\n      }\n    };\n\n    await Promise.all([\n      new Promise<void>((resolve) => {\n        resolvePromise = resolve;\n        this.subscriber.on(SUBSCRIBER_EVENTS.created, onSubCreated);\n      }),\n      new Promise<void>(async (resolve) => {\n        const result = await this.subscriber.subscribe(topic, opts);\n        id = result || id;\n        resolve();\n      }),\n    ]);\n    return id;\n  }\n\n  public request = async (request: RequestArguments<RelayJsonRpc.SubscribeParams>) => {\n    this.logger.debug(`Publishing Request Payload`);\n    const id = request.id || (getBigIntRpcId().toString() as any);\n    await this.toEstablishConnection();\n    try {\n      const requestPromise = this.provider.request(request);\n      this.requestsInFlight.set(id, {\n        promise: requestPromise,\n        request,\n      });\n      this.logger.trace(\n        {\n          id,\n          method: request.method,\n          topic: request.params?.topic,\n        },\n        \"relayer.request - attempt to publish...\",\n      );\n\n      /**\n       * During publish, we must listen for any disconnect event and reject the promise, else the publish would hang indefinitely\n       */\n      const result = await new Promise(async (resolve, reject) => {\n        const onDisconnect = () => {\n          reject(new Error(`relayer.request - publish interrupted, id: ${id}`));\n        };\n        this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\n        const res = await requestPromise;\n        this.provider.off(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\n        resolve(res);\n      });\n      this.logger.trace(\n        {\n          id,\n          method: request.method,\n          topic: request.params?.topic,\n        },\n        \"relayer.request - published\",\n      );\n      return result as JsonRpcPayload;\n    } catch (e) {\n      this.logger.debug(`Failed to Publish Request: ${id}`);\n      throw e;\n    } finally {\n      this.requestsInFlight.delete(id);\n    }\n  };\n\n  public async unsubscribe(topic: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    this.isInitialized();\n    await this.subscriber.unsubscribe(topic, opts);\n  }\n\n  public on(event: string, listener: any) {\n    this.events.on(event, listener);\n  }\n\n  public once(event: string, listener: any) {\n    this.events.once(event, listener);\n  }\n\n  public off(event: string, listener: any) {\n    this.events.off(event, listener);\n  }\n\n  public removeListener(event: string, listener: any) {\n    this.events.removeListener(event, listener);\n  }\n\n  public async transportDisconnect() {\n    if (!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0) {\n      try {\n        await Promise.all(\n          Array.from(this.requestsInFlight.values()).map((request) => request.promise),\n        );\n      } catch (e) {\n        this.logger.warn(e);\n      }\n    }\n\n    if (this.hasExperiencedNetworkDisruption || this.connected) {\n      await createExpiringPromise(this.provider.disconnect(), 2000, \"provider.disconnect()\").catch(\n        () => this.onProviderDisconnect(),\n      );\n    } else {\n      this.onProviderDisconnect();\n    }\n  }\n\n  public async transportClose() {\n    this.transportExplicitlyClosed = true;\n    await this.transportDisconnect();\n  }\n\n  public async transportOpen(relayUrl?: string) {\n    await this.confirmOnlineStateOrThrow();\n    if (relayUrl && relayUrl !== this.relayUrl) {\n      this.relayUrl = relayUrl;\n      await this.transportDisconnect();\n    }\n    // Always create new socket instance when trying to connect because if the socket was dropped due to `socket hang up` exception\n    // It wont be able to reconnect\n    await this.createProvider();\n    this.connectionAttemptInProgress = true;\n    this.transportExplicitlyClosed = false;\n    try {\n      await new Promise<void>(async (resolve, reject) => {\n        const onDisconnect = () => {\n          this.provider.off(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\n          reject(new Error(`Connection interrupted while trying to subscribe`));\n        };\n        this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, onDisconnect);\n\n        await createExpiringPromise(\n          this.provider.connect(),\n          toMiliseconds(ONE_MINUTE),\n          `Socket stalled when trying to connect to ${this.relayUrl}`,\n        )\n          .catch((e) => {\n            reject(e);\n          })\n          .finally(() => {\n            clearTimeout(this.reconnectTimeout);\n            this.reconnectTimeout = undefined;\n          });\n        this.subscriber.start().catch((error) => {\n          this.logger.error(error);\n          this.onDisconnectHandler();\n        });\n        this.hasExperiencedNetworkDisruption = false;\n        resolve();\n      });\n    } catch (e) {\n      this.logger.error(e);\n      const error = e as Error;\n      this.hasExperiencedNetworkDisruption = true;\n      if (!this.isConnectionStalled(error.message)) {\n        throw e;\n      }\n    } finally {\n      this.connectionAttemptInProgress = false;\n    }\n  }\n\n  public async restartTransport(relayUrl?: string) {\n    if (this.connectionAttemptInProgress) return;\n    this.relayUrl = relayUrl || this.relayUrl;\n    await this.confirmOnlineStateOrThrow();\n    await this.transportClose();\n    await this.transportOpen();\n  }\n\n  public async confirmOnlineStateOrThrow() {\n    if (await isOnline()) return;\n    throw new Error(\"No internet connection detected. Please restart your network and try again.\");\n  }\n\n  public async handleBatchMessageEvents(messages: RelayerTypes.MessageEvent[]) {\n    if (messages?.length === 0) {\n      this.logger.trace(\"Batch message events is empty. Ignoring...\");\n      return;\n    }\n    const sortedMessages = messages.sort((a, b) => a.publishedAt - b.publishedAt);\n    this.logger.trace(`Batch of ${sortedMessages.length} message events sorted`);\n    for (const message of sortedMessages) {\n      try {\n        await this.onMessageEvent(message);\n      } catch (e) {\n        this.logger.warn(e);\n      }\n    }\n    this.logger.trace(`Batch of ${sortedMessages.length} message events processed`);\n  }\n\n  // ---------- Private ----------------------------------------------- //\n  /*\n   * In Node, we must detect when the connection is stalled and terminate it.\n   * The logic is, if we don't receive ping from the relay within a certain time, we terminate the connection.\n   * The timer is refreshed on every message received from the relay.\n   *\n   * In the browser, ping/pong events are not exposed, so the above behaviour is handled by `subscribeToNetworkChange` and `isOnline` functions.\n   */\n  private startPingTimeout() {\n    if (!isNode()) return;\n    try {\n      //@ts-expect-error - Types are divergent between the node and browser WS API\n      if (this.provider?.connection?.socket) {\n        //@ts-expect-error\n        this.provider?.connection?.socket?.once(\"ping\", () => {\n          this.resetPingTimeout();\n        });\n      }\n      this.resetPingTimeout();\n    } catch (e) {\n      this.logger.warn(e);\n    }\n  }\n\n  private resetPingTimeout = () => {\n    if (!isNode()) return;\n    try {\n      clearTimeout(this.pingTimeout);\n      this.pingTimeout = setTimeout(() => {\n        //@ts-expect-error\n        this.provider?.connection?.socket?.terminate();\n      }, this.heartBeatTimeout);\n    } catch (e) {\n      this.logger.warn(e);\n    }\n  };\n\n  private isConnectionStalled(message: string) {\n    return this.staleConnectionErrors.some((error) => message.includes(error));\n  }\n\n  private async createProvider() {\n    if (this.provider.connection) {\n      this.unregisterProviderListeners();\n    }\n    const auth = await this.core.crypto.signJWT(this.relayUrl);\n\n    this.provider = new JsonRpcProvider(\n      new WsConnection(\n        formatRelayRpcUrl({\n          sdkVersion: RELAYER_SDK_VERSION,\n          protocol: this.protocol,\n          version: this.version,\n          relayUrl: this.relayUrl,\n          projectId: this.projectId,\n          auth,\n          useOnCloseEvent: true,\n          bundleId: this.bundleId,\n        }),\n      ),\n    );\n    this.registerProviderListeners();\n  }\n\n  private async recordMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\n    const { topic, message } = messageEvent;\n    await this.messages.set(topic, message);\n  }\n\n  private async shouldIgnoreMessageEvent(\n    messageEvent: RelayerTypes.MessageEvent,\n  ): Promise<boolean> {\n    const { topic, message } = messageEvent;\n\n    // Ignore if incoming `message` is clearly invalid.\n    if (!message || message.length === 0) {\n      this.logger.debug(`Ignoring invalid/empty message: ${message}`);\n      return true;\n    }\n\n    // Ignore if `topic` is not subscribed to.\n    if (!(await this.subscriber.isSubscribed(topic))) {\n      this.logger.debug(`Ignoring message for non-subscribed topic ${topic}`);\n      return true;\n    }\n\n    // Ignore if `message` is a duplicate.\n    const exists = this.messages.has(topic, message);\n    if (exists) {\n      this.logger.debug(`Ignoring duplicate message: ${message}`);\n    }\n    return exists;\n  }\n\n  private async onProviderPayload(payload: JsonRpcPayload) {\n    this.logger.debug(`Incoming Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"incoming\", payload });\n    if (isJsonRpcRequest(payload)) {\n      if (!payload.method.endsWith(RELAYER_SUBSCRIBER_SUFFIX)) return;\n      const event = (payload as JsonRpcRequest<RelayJsonRpc.SubscriptionParams>).params;\n      const { topic, message, publishedAt, attestation } = event.data;\n      const messageEvent: RelayerTypes.MessageEvent = { topic, message, publishedAt, attestation };\n      this.logger.debug(`Emitting Relayer Payload`);\n      this.logger.trace({ type: \"event\", event: event.id, ...messageEvent });\n      this.events.emit(event.id, messageEvent);\n      await this.acknowledgePayload(payload);\n      await this.onMessageEvent(messageEvent);\n    } else if (isJsonRpcResponse(payload)) {\n      this.events.emit(RELAYER_EVENTS.message_ack, payload);\n    }\n  }\n\n  private async onMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\n    if (await this.shouldIgnoreMessageEvent(messageEvent)) return;\n    this.events.emit(RELAYER_EVENTS.message, messageEvent);\n    await this.recordMessageEvent(messageEvent);\n  }\n\n  private async acknowledgePayload(payload: JsonRpcPayload) {\n    const response = formatJsonRpcResult(payload.id, true);\n    await this.provider.connection.send(response);\n  }\n\n  // ---------- Events Handlers ----------------------------------------------- //\n  private onPayloadHandler = (payload: JsonRpcPayload) => {\n    this.onProviderPayload(payload);\n    this.resetPingTimeout();\n  };\n\n  private onConnectHandler = () => {\n    this.logger.trace(\"relayer connected\");\n    this.startPingTimeout();\n    this.events.emit(RELAYER_EVENTS.connect);\n  };\n\n  private onDisconnectHandler = () => {\n    this.logger.trace(\"relayer disconnected\");\n    this.onProviderDisconnect();\n  };\n\n  private onProviderErrorHandler = (error: Error) => {\n    this.logger.error(error);\n    this.events.emit(RELAYER_EVENTS.error, error);\n    // close the transport when a fatal error is received as there's no way to recover from it\n    // usual cases are missing/invalid projectId, expired jwt token, invalid origin etc\n    this.logger.info(\"Fatal socket error received, closing transport\");\n    this.transportClose();\n  };\n\n  private registerProviderListeners = () => {\n    this.provider.on(RELAYER_PROVIDER_EVENTS.payload, this.onPayloadHandler);\n    this.provider.on(RELAYER_PROVIDER_EVENTS.connect, this.onConnectHandler);\n    this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, this.onDisconnectHandler);\n    this.provider.on(RELAYER_PROVIDER_EVENTS.error, this.onProviderErrorHandler);\n  };\n\n  private unregisterProviderListeners() {\n    this.provider.off(RELAYER_PROVIDER_EVENTS.payload, this.onPayloadHandler);\n    this.provider.off(RELAYER_PROVIDER_EVENTS.connect, this.onConnectHandler);\n    this.provider.off(RELAYER_PROVIDER_EVENTS.disconnect, this.onDisconnectHandler);\n    this.provider.off(RELAYER_PROVIDER_EVENTS.error, this.onProviderErrorHandler);\n    clearTimeout(this.pingTimeout);\n  }\n\n  private async registerEventListeners() {\n    let lastConnectedState = await isOnline();\n    subscribeToNetworkChange(async (connected: boolean) => {\n      // sometimes the network change event is triggered multiple times so avoid reacting to the samFe value\n      if (lastConnectedState === connected) return;\n\n      lastConnectedState = connected;\n      if (!connected) {\n        // when the device network is restarted, the socket might stay in false `connected` state\n        this.hasExperiencedNetworkDisruption = true;\n        await this.transportDisconnect();\n        this.transportExplicitlyClosed = false;\n      } else {\n        await this.restartTransport().catch((error) => this.logger.error(error));\n      }\n    });\n  }\n\n  private async onProviderDisconnect() {\n    await this.subscriber.stop();\n    this.requestsInFlight.clear();\n    clearTimeout(this.pingTimeout);\n    this.events.emit(RELAYER_EVENTS.disconnect);\n    this.connectionAttemptInProgress = false;\n    if (this.transportExplicitlyClosed) return;\n    if (this.reconnectTimeout) return;\n    this.reconnectTimeout = setTimeout(async () => {\n      await this.transportOpen().catch((error) => this.logger.error(error));\n    }, toMiliseconds(RELAYER_RECONNECT_TIMEOUT));\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  private async toEstablishConnection() {\n    await this.confirmOnlineStateOrThrow();\n    if (this.connected) return;\n    if (this.connectionAttemptInProgress) {\n      await new Promise<void>((resolve) => {\n        const interval = setInterval(() => {\n          if (this.connected) {\n            clearInterval(interval);\n            resolve();\n          }\n        }, this.connectionStatusPollingInterval);\n      });\n    }\n    await this.transportOpen();\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IStore } from \"@walletconnect/types\";\nimport {\n  getInternalError,\n  isProposalStruct,\n  isSessionStruct,\n  isUndefined,\n} from \"@walletconnect/utils\";\nimport { CORE_STORAGE_PREFIX, STORE_STORAGE_VERSION } from \"../constants\";\nimport isEqual from \"lodash.isequal\";\n\nexport class Store<Key, Data extends Record<string, any>> extends IStore<Key, Data> {\n  public map = new Map<Key, Data>();\n  public version = STORE_STORAGE_VERSION;\n\n  private cached: Data[] = [];\n  private initialized = false;\n\n  /**\n   * Regenerates the value key to retrieve it from cache\n   */\n  private getKey: ((data: Data) => Key) | undefined;\n\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  // stores recently deleted key to return different rejection message when key is not found\n  private recentlyDeleted: Key[] = [];\n  private recentlyDeletedLimit = 200;\n\n  /**\n   * @param {ICore} core Core\n   * @param {Logger} logger Logger\n   * @param {string} name Store's name\n   * @param {Store<Key, Data>[\"getKey\"]} getKey Regenerates the value key to retrieve it from cache\n   * @param {string} storagePrefix Prefixes value keys\n   */\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n    public name: string,\n    storagePrefix: string = CORE_STORAGE_PREFIX,\n    getKey: Store<Key, Data>[\"getKey\"] = undefined,\n  ) {\n    super(core, logger, name, storagePrefix);\n    this.logger = generateChildLogger(logger, this.name);\n    this.storagePrefix = storagePrefix;\n    this.getKey = getKey;\n  }\n\n  public init: IStore<Key, Data>[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n\n      await this.restore();\n\n      this.cached.forEach((value) => {\n        if (this.getKey && value !== null && !isUndefined(value)) {\n          this.map.set(this.getKey(value), value);\n        } else if (isProposalStruct(value)) {\n          // TODO(pedro) revert type casting as any\n          this.map.set(value.id as any, value);\n        } else if (isSessionStruct(value)) {\n          // TODO(pedro) revert type casting as any\n          this.map.set(value.topic as any, value);\n        }\n      });\n\n      this.cached = [];\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  get length() {\n    return this.map.size;\n  }\n\n  get keys() {\n    return Array.from(this.map.keys());\n  }\n\n  get values() {\n    return Array.from(this.map.values());\n  }\n\n  public set: IStore<Key, Data>[\"set\"] = async (key, value) => {\n    this.isInitialized();\n    if (this.map.has(key)) {\n      await this.update(key, value);\n    } else {\n      this.logger.debug(`Setting value`);\n      this.logger.trace({ type: \"method\", method: \"set\", key, value });\n      this.map.set(key, value);\n      await this.persist();\n    }\n  };\n\n  public get: IStore<Key, Data>[\"get\"] = (key) => {\n    this.isInitialized();\n    this.logger.debug(`Getting value`);\n    this.logger.trace({ type: \"method\", method: \"get\", key });\n    const value = this.getData(key);\n    return value;\n  };\n\n  public getAll: IStore<Key, Data>[\"getAll\"] = (filter) => {\n    this.isInitialized();\n    if (!filter) return this.values;\n\n    return this.values.filter((value) =>\n      Object.keys(filter).every((key) => isEqual(value[key], filter[key])),\n    );\n  };\n\n  public update: IStore<Key, Data>[\"update\"] = async (key, update) => {\n    this.isInitialized();\n    this.logger.debug(`Updating value`);\n    this.logger.trace({ type: \"method\", method: \"update\", key, update });\n    const value = { ...this.getData(key), ...update };\n    this.map.set(key, value);\n    await this.persist();\n  };\n\n  public delete: IStore<Key, Data>[\"delete\"] = async (key, reason) => {\n    this.isInitialized();\n    if (!this.map.has(key)) return;\n    this.logger.debug(`Deleting value`);\n    this.logger.trace({ type: \"method\", method: \"delete\", key, reason });\n    this.map.delete(key);\n    this.addToRecentlyDeleted(key);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private addToRecentlyDeleted(key: Key) {\n    this.recentlyDeleted.push(key);\n    // limit the size of the recentlyDeleted array, truncate the 100 oldest entries.\n    if (this.recentlyDeleted.length >= this.recentlyDeletedLimit) {\n      this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);\n    }\n  }\n\n  private async setDataStore(value: Data[]) {\n    await this.core.storage.setItem<Data[]>(this.storageKey, value);\n  }\n\n  private async getDataStore() {\n    const value = await this.core.storage.getItem<Data[]>(this.storageKey);\n    return value;\n  }\n\n  private getData(key: Key) {\n    const value = this.map.get(key);\n    if (!value) {\n      if (this.recentlyDeleted.includes(key)) {\n        const { message } = getInternalError(\n          \"MISSING_OR_INVALID\",\n          `Record was recently deleted - ${this.name}: ${key}`,\n        );\n        this.logger.error(message);\n        throw new Error(message);\n      }\n\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${key}`);\n      this.logger.error(message);\n      throw new Error(message);\n    }\n    return value;\n  }\n\n  private async persist() {\n    await this.setDataStore(this.values);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getDataStore();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.map.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored value for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", value: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore value for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport {\n  ICore,\n  PairingTypes,\n  IPairing,\n  IPairingPrivate,\n  IStore,\n  RelayerTypes,\n  PairingJsonRpcTypes,\n  ExpirerTypes,\n  EventClientTypes,\n} from \"@walletconnect/types\";\nimport {\n  getInternalError,\n  parseUri,\n  calcExpiry,\n  generateRandomBytes32,\n  formatUri,\n  getSdkError,\n  engineEvent,\n  createDelayedPromise,\n  isValidParams,\n  isValidUrl,\n  isValidString,\n  isExpired,\n  parseExpirerTarget,\n  TYPE_1,\n} from \"@walletconnect/utils\";\nimport {\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  formatJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  isJsonRpcError,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES, THIRTY_DAYS, toMiliseconds } from \"@walletconnect/time\";\nimport EventEmitter from \"events\";\nimport {\n  PAIRING_CONTEXT,\n  PAIRING_STORAGE_VERSION,\n  CORE_STORAGE_PREFIX,\n  RELAYER_DEFAULT_PROTOCOL,\n  PAIRING_RPC_OPTS,\n  RELAYER_EVENTS,\n  EXPIRER_EVENTS,\n  PAIRING_EVENTS,\n  EVENT_CLIENT_PAIRING_TRACES,\n  EVENT_CLIENT_PAIRING_ERRORS,\n} from \"../constants\";\nimport { Store } from \"../controllers/store\";\n\nexport class Pairing implements IPairing {\n  public name = PAIRING_CONTEXT;\n  public version = PAIRING_STORAGE_VERSION;\n\n  public events = new EventEmitter();\n  public pairings: IStore<string, PairingTypes.Struct>;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n  private ignoredPayloadTypes = [TYPE_1];\n  private registeredMethods: string[] = [];\n\n  constructor(public core: ICore, public logger: Logger) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n    this.pairings = new Store(this.core, this.logger, this.name, this.storagePrefix);\n  }\n\n  public init: IPairing[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.pairings.init();\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.initialized = true;\n      this.logger.trace(`Initialized`);\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public register: IPairing[\"register\"] = ({ methods }) => {\n    this.isInitialized();\n    this.registeredMethods = [...new Set([...this.registeredMethods, ...methods])];\n  };\n\n  public create: IPairing[\"create\"] = async (params) => {\n    this.isInitialized();\n    const symKey = generateRandomBytes32();\n    const topic = await this.core.crypto.setSymKey(symKey);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    const relay = { protocol: RELAYER_DEFAULT_PROTOCOL };\n    const pairing = { topic, expiry, relay, active: false };\n    const uri = formatUri({\n      protocol: this.core.protocol,\n      version: this.core.version,\n      topic,\n      symKey,\n      relay,\n      expiryTimestamp: expiry,\n      methods: params?.methods,\n    });\n    this.core.expirer.set(topic, expiry);\n    await this.pairings.set(topic, pairing);\n    await this.core.relayer.subscribe(topic);\n\n    return { topic, uri };\n  };\n\n  public pair: IPairing[\"pair\"] = async (params) => {\n    this.isInitialized();\n\n    const event = this.core.eventClient.createEvent({\n      properties: {\n        topic: params?.uri,\n        trace: [EVENT_CLIENT_PAIRING_TRACES.pairing_started],\n      },\n    });\n\n    this.isValidPair(params, event);\n\n    const { topic, symKey, relay, expiryTimestamp, methods } = parseUri(params.uri);\n\n    event.props.properties.topic = topic;\n    event.addTrace(EVENT_CLIENT_PAIRING_TRACES.pairing_uri_validation_success);\n    event.addTrace(EVENT_CLIENT_PAIRING_TRACES.pairing_uri_not_expired);\n\n    let existingPairing;\n    if (this.pairings.keys.includes(topic)) {\n      existingPairing = this.pairings.get(topic);\n      event.addTrace(EVENT_CLIENT_PAIRING_TRACES.existing_pairing);\n      if (existingPairing.active) {\n        event.setError(EVENT_CLIENT_PAIRING_ERRORS.active_pairing_already_exists);\n        throw new Error(\n          `Pairing already exists: ${topic}. Please try again with a new connection URI.`,\n        );\n      } else {\n        event.addTrace(EVENT_CLIENT_PAIRING_TRACES.pairing_not_expired);\n      }\n    }\n\n    const expiry = expiryTimestamp || calcExpiry(FIVE_MINUTES);\n    const pairing = { topic, relay, expiry, active: false, methods };\n    this.core.expirer.set(topic, expiry);\n    await this.pairings.set(topic, pairing);\n\n    event.addTrace(EVENT_CLIENT_PAIRING_TRACES.store_new_pairing);\n\n    if (params.activatePairing) {\n      await this.activate({ topic });\n    }\n\n    this.events.emit(PAIRING_EVENTS.create, pairing);\n\n    event.addTrace(EVENT_CLIENT_PAIRING_TRACES.emit_inactive_pairing);\n\n    // avoid overwriting keychain pairing already exists\n    if (!this.core.crypto.keychain.has(topic)) {\n      await this.core.crypto.setSymKey(symKey, topic);\n    }\n    event.addTrace(EVENT_CLIENT_PAIRING_TRACES.subscribing_pairing_topic);\n\n    try {\n      await this.core.relayer.confirmOnlineStateOrThrow();\n    } catch (error) {\n      event.setError(EVENT_CLIENT_PAIRING_ERRORS.no_internet_connection);\n    }\n\n    try {\n      await this.core.relayer.subscribe(topic, { relay });\n    } catch (error) {\n      event.setError(EVENT_CLIENT_PAIRING_ERRORS.subscribe_pairing_topic_failure);\n      throw error;\n    }\n\n    event.addTrace(EVENT_CLIENT_PAIRING_TRACES.subscribe_pairing_topic_success);\n\n    return pairing;\n  };\n\n  public activate: IPairing[\"activate\"] = async ({ topic }) => {\n    this.isInitialized();\n    const expiry = calcExpiry(THIRTY_DAYS);\n    this.core.expirer.set(topic, expiry);\n    await this.pairings.update(topic, { active: true, expiry });\n  };\n\n  public ping: IPairing[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.pairings.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_pairingPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"pairing_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    }\n  };\n\n  public updateExpiry: IPairing[\"updateExpiry\"] = async ({ topic, expiry }) => {\n    this.isInitialized();\n    await this.pairings.update(topic, { expiry });\n  };\n\n  public updateMetadata: IPairing[\"updateMetadata\"] = async ({ topic, metadata }) => {\n    this.isInitialized();\n    await this.pairings.update(topic, { peerMetadata: metadata });\n  };\n\n  public getPairings: IPairing[\"getPairings\"] = () => {\n    this.isInitialized();\n    return this.pairings.values;\n  };\n\n  public disconnect: IPairing[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.pairings.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_pairingDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deletePairing(topic);\n    }\n  };\n\n  // ---------- Private Helpers ----------------------------------------------- //\n\n  private sendRequest: IPairingPrivate[\"sendRequest\"] = async (topic, method, params) => {\n    const payload = formatJsonRpcRequest(method, params);\n    const message = await this.core.crypto.encode(topic, payload);\n    const opts = PAIRING_RPC_OPTS[method].req;\n    this.core.history.set(topic, payload);\n    this.core.relayer.publish(topic, message, opts);\n    return payload.id;\n  };\n\n  private sendResult: IPairingPrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.core.crypto.encode(topic, payload);\n    const record = await this.core.history.get(topic, id);\n    const opts = PAIRING_RPC_OPTS[record.request.method].res;\n    await this.core.relayer.publish(topic, message, opts);\n    await this.core.history.resolve(payload);\n  };\n\n  private sendError: IPairingPrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.core.crypto.encode(topic, payload);\n    const record = await this.core.history.get(topic, id);\n    const opts = PAIRING_RPC_OPTS[record.request.method]\n      ? PAIRING_RPC_OPTS[record.request.method].res\n      : PAIRING_RPC_OPTS.unregistered_method.res;\n\n    await this.core.relayer.publish(topic, message, opts);\n    await this.core.history.resolve(payload);\n  };\n\n  private deletePairing: IPairingPrivate[\"deletePairing\"] = async (topic, expirerHasDeleted) => {\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.core.relayer.unsubscribe(topic);\n    await Promise.all([\n      this.pairings.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.core.crypto.deleteSymKey(topic),\n      expirerHasDeleted ? Promise.resolve() : this.core.expirer.del(topic),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  private cleanup = async () => {\n    const expiredPairings = this.pairings.getAll().filter((pairing) => isExpired(pairing.expiry));\n    await Promise.all(expiredPairings.map((pairing) => this.deletePairing(pairing.topic)));\n  };\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.core.relayer.on(RELAYER_EVENTS.message, async (event: RelayerTypes.MessageEvent) => {\n      const { topic, message } = event;\n\n      // Do not handle if the topic is not related to known pairing topics.\n      if (!this.pairings.keys.includes(topic)) return;\n\n      // messages of certain types should be ignored as they are handled by their respective SDKs\n      if (this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(message))) return;\n\n      const payload = await this.core.crypto.decode(topic, message);\n\n      try {\n        if (isJsonRpcRequest(payload)) {\n          this.core.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.core.history.resolve(payload);\n          await this.onRelayEventResponse({ topic, payload });\n          this.core.history.delete(topic, payload.id);\n        }\n      } catch (error) {\n        this.logger.error(error);\n      }\n    });\n  }\n\n  private onRelayEventRequest: IPairingPrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as PairingJsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_pairingPing\":\n        return this.onPairingPingRequest(topic, payload);\n      case \"wc_pairingDelete\":\n        return this.onPairingDeleteRequest(topic, payload);\n      default:\n        return this.onUnknownRpcMethodRequest(topic, payload);\n    }\n  };\n\n  private onRelayEventResponse: IPairingPrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as PairingJsonRpcTypes.WcMethod;\n\n    switch (resMethod) {\n      case \"wc_pairingPing\":\n        return this.onPairingPingResponse(topic, payload);\n      default:\n        return this.onUnknownRpcMethodResponse(resMethod);\n    }\n  };\n\n  private onPairingPingRequest: IPairingPrivate[\"onPairingPingRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_pairingPing\">(id, topic, true);\n      this.events.emit(PAIRING_EVENTS.ping, { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onPairingPingResponse: IPairingPrivate[\"onPairingPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where pairing_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"pairing_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"pairing_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onPairingDeleteRequest: IPairingPrivate[\"onPairingDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic });\n      await this.deletePairing(topic);\n      this.events.emit(PAIRING_EVENTS.delete, { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onUnknownRpcMethodRequest: IPairingPrivate[\"onUnknownRpcMethodRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, method } = payload;\n\n    try {\n      // Ignore if the implementing client has registered this method as known.\n      if (this.registeredMethods.includes(method)) return;\n      const error = getSdkError(\"WC_METHOD_UNSUPPORTED\", method);\n      await this.sendError(id, topic, error);\n      this.logger.error(error);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onUnknownRpcMethodResponse: IPairingPrivate[\"onUnknownRpcMethodResponse\"] = (method) => {\n    // Ignore if the implementing client has registered this method as known.\n    if (this.registeredMethods.includes(method)) return;\n    this.logger.error(getSdkError(\"WC_METHOD_UNSUPPORTED\", method));\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic } = parseExpirerTarget(event.target);\n      if (!topic) return;\n      if (!this.pairings.keys.includes(topic)) return;\n      await this.deletePairing(topic, true);\n      this.events.emit(PAIRING_EVENTS.expire, { topic });\n    });\n  }\n\n  // ---------- Validation Helpers ----------------------------------- //\n\n  private isValidPair = (params: { uri: string }, event: EventClientTypes.Event) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() params: ${params}`);\n      event.setError(EVENT_CLIENT_PAIRING_ERRORS.malformed_pairing_uri);\n      throw new Error(message);\n    }\n    if (!isValidUrl(params.uri)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri: ${params.uri}`);\n      event.setError(EVENT_CLIENT_PAIRING_ERRORS.malformed_pairing_uri);\n      throw new Error(message);\n    }\n    const uri = parseUri(params?.uri);\n    if (!uri?.relay?.protocol) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri#relay-protocol`);\n      event.setError(EVENT_CLIENT_PAIRING_ERRORS.malformed_pairing_uri);\n      throw new Error(message);\n    }\n    if (!uri?.symKey) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri#symKey`);\n      event.setError(EVENT_CLIENT_PAIRING_ERRORS.malformed_pairing_uri);\n      throw new Error(message);\n    }\n    if (uri?.expiryTimestamp) {\n      const expiration = toMiliseconds(uri?.expiryTimestamp);\n      if (expiration < Date.now()) {\n        event.setError(EVENT_CLIENT_PAIRING_ERRORS.pairing_expired);\n        const { message } = getInternalError(\n          \"EXPIRED\",\n          `pair() URI has expired. Please try again with a new connection URI.`,\n        );\n        throw new Error(message);\n      }\n    }\n  };\n\n  private isValidPing = async (params: { topic: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidPairingTopic(topic);\n  };\n\n  private isValidDisconnect = async (params: { topic: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidPairingTopic(topic);\n  };\n\n  private isValidPairingTopic = async (topic: any) => {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.pairings.get(topic).expiry)) {\n      await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  };\n}\n","import { formatJsonRpcRequest, isJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { IJsonRpcHistory, JsonRpcRecord, RequestEvent, ICore } from \"@walletconnect/types\";\nimport { calcExpiry, getInternalError } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { THIRTY_DAYS, toMiliseconds } from \"@walletconnect/time\";\nimport { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport {\n  CORE_STORAGE_PREFIX,\n  HISTORY_CONTEXT,\n  HISTORY_EVENTS,\n  HISTORY_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class JsonRpcHistory extends IJsonRpcHistory {\n  public records = new Map<number, JsonRpcRecord>();\n  public events = new EventEmitter();\n  public name = HISTORY_CONTEXT;\n  public version = HISTORY_STORAGE_VERSION;\n\n  private cached: JsonRpcRecord[] = [];\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IJsonRpcHistory[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((record) => this.records.set(record.id, record));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  get size(): number {\n    return this.records.size;\n  }\n\n  get keys(): number[] {\n    return Array.from(this.records.keys());\n  }\n\n  get values() {\n    return Array.from(this.records.values());\n  }\n\n  get pending(): RequestEvent[] {\n    const requests: RequestEvent[] = [];\n    this.values.forEach((record) => {\n      if (typeof record.response !== \"undefined\") return;\n      const requestEvent: RequestEvent = {\n        topic: record.topic,\n        request: formatJsonRpcRequest(record.request.method, record.request.params, record.id),\n        chainId: record.chainId,\n      };\n      return requests.push(requestEvent);\n    });\n    return requests;\n  }\n\n  public set: IJsonRpcHistory[\"set\"] = (topic, request, chainId) => {\n    this.isInitialized();\n    this.logger.debug(`Setting JSON-RPC request history record`);\n    this.logger.trace({ type: \"method\", method: \"set\", topic, request, chainId });\n    if (this.records.has(request.id)) return;\n    const record: JsonRpcRecord = {\n      id: request.id,\n      topic,\n      request: { method: request.method, params: request.params || null },\n      chainId,\n      expiry: calcExpiry(THIRTY_DAYS),\n    };\n    this.records.set(record.id, record);\n    this.persist();\n    this.events.emit(HISTORY_EVENTS.created, record);\n  };\n\n  public resolve: IJsonRpcHistory[\"resolve\"] = async (response) => {\n    this.isInitialized();\n    this.logger.debug(`Updating JSON-RPC response history record`);\n    this.logger.trace({ type: \"method\", method: \"update\", response });\n    if (!this.records.has(response.id)) return;\n    const record = await this.getRecord(response.id);\n    if (typeof record.response !== \"undefined\") return;\n    record.response = isJsonRpcError(response)\n      ? { error: response.error }\n      : { result: response.result };\n    this.records.set(record.id, record);\n    this.persist();\n    this.events.emit(HISTORY_EVENTS.updated, record);\n  };\n\n  public get: IJsonRpcHistory[\"get\"] = async (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Getting record`);\n    this.logger.trace({ type: \"method\", method: \"get\", topic, id });\n    const record = await this.getRecord(id);\n    return record;\n  };\n\n  public delete: IJsonRpcHistory[\"delete\"] = (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Deleting record`);\n    this.logger.trace({ type: \"method\", method: \"delete\", id });\n    this.values.forEach((record: JsonRpcRecord) => {\n      if (record.topic === topic) {\n        if (typeof id !== \"undefined\" && record.id !== id) return;\n        this.records.delete(record.id);\n        this.events.emit(HISTORY_EVENTS.deleted, record);\n      }\n    });\n    this.persist();\n  };\n\n  public exists: IJsonRpcHistory[\"exists\"] = async (topic, id) => {\n    this.isInitialized();\n    if (!this.records.has(id)) return false;\n    const record = await this.getRecord(id);\n    return record.topic === topic;\n  };\n\n  public on: IJsonRpcHistory[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IJsonRpcHistory[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IJsonRpcHistory[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IJsonRpcHistory[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setJsonRpcRecords(records: JsonRpcRecord[]): Promise<void> {\n    await this.core.storage.setItem<JsonRpcRecord[]>(this.storageKey, records);\n  }\n\n  private async getJsonRpcRecords(): Promise<JsonRpcRecord[] | undefined> {\n    const records = await this.core.storage.getItem<JsonRpcRecord[]>(this.storageKey);\n    return records;\n  }\n\n  private getRecord(id: number) {\n    this.isInitialized();\n    const record = this.records.get(id);\n    if (!record) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\n      throw new Error(message);\n    }\n    return record;\n  }\n\n  private async persist() {\n    await this.setJsonRpcRecords(this.values);\n    this.events.emit(HISTORY_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getJsonRpcRecords();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.records.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored records for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", records: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore records for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private registerEventListeners(): void {\n    this.events.on(HISTORY_EVENTS.created, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n    });\n    this.events.on(HISTORY_EVENTS.updated, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.updated;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n    });\n\n    this.events.on(HISTORY_EVENTS.deleted, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n    });\n\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => {\n      this.cleanup();\n    });\n  }\n\n  private cleanup() {\n    try {\n      this.isInitialized();\n      let deleted = false;\n      this.records.forEach((record: JsonRpcRecord) => {\n        const msToExpiry = toMiliseconds(record.expiry || 0) - Date.now();\n        if (msToExpiry <= 0) {\n          this.logger.info(`Deleting expired history log: ${record.id}`);\n          this.records.delete(record.id);\n          this.events.emit(HISTORY_EVENTS.deleted, record, false);\n          deleted = true;\n        }\n      });\n      if (deleted) {\n        this.persist();\n      }\n    } catch (e) {\n      this.logger.warn(e);\n    }\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { toMiliseconds } from \"@walletconnect/time\";\nimport { ExpirerTypes, ICore, IExpirer } from \"@walletconnect/types\";\nimport { getInternalError, formatIdTarget, formatTopicTarget } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport {\n  CORE_STORAGE_PREFIX,\n  EXPIRER_CONTEXT,\n  EXPIRER_EVENTS,\n  EXPIRER_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class Expirer extends IExpirer {\n  public expirations = new Map<string, ExpirerTypes.Expiration>();\n  public events = new EventEmitter();\n  public name = EXPIRER_CONTEXT;\n  public version = EXPIRER_STORAGE_VERSION;\n\n  private cached: ExpirerTypes.Expiration[] = [];\n  private initialized = false;\n\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IExpirer[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((expiration) => this.expirations.set(expiration.target, expiration));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  get length(): number {\n    return this.expirations.size;\n  }\n\n  get keys(): string[] {\n    return Array.from(this.expirations.keys());\n  }\n\n  get values(): ExpirerTypes.Expiration[] {\n    return Array.from(this.expirations.values());\n  }\n\n  public has: IExpirer[\"has\"] = (key) => {\n    try {\n      const target = this.formatTarget(key);\n      const expiration = this.getExpiration(target);\n      return typeof expiration !== \"undefined\";\n    } catch (e) {\n      // ignore\n      return false;\n    }\n  };\n\n  public set: IExpirer[\"set\"] = (key, expiry) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    const expiration = { target, expiry };\n    this.expirations.set(target, expiration);\n    this.checkExpiry(target, expiration);\n    this.events.emit(EXPIRER_EVENTS.created, {\n      target,\n      expiration,\n    } as ExpirerTypes.Created);\n  };\n\n  public get: IExpirer[\"get\"] = (key) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    return this.getExpiration(target);\n  };\n\n  public del: IExpirer[\"del\"] = (key) => {\n    this.isInitialized();\n    const exists = this.has(key);\n    if (exists) {\n      const target = this.formatTarget(key);\n      const expiration = this.getExpiration(target);\n      this.expirations.delete(target);\n      this.events.emit(EXPIRER_EVENTS.deleted, {\n        target,\n        expiration,\n      } as ExpirerTypes.Deleted);\n    }\n  };\n\n  public on: IExpirer[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IExpirer[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IExpirer[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IExpirer[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private formatTarget(key: string | number) {\n    if (typeof key === \"string\") {\n      return formatTopicTarget(key);\n    } else if (typeof key === \"number\") {\n      return formatIdTarget(key);\n    }\n    const { message } = getInternalError(\"UNKNOWN_TYPE\", `Target type: ${typeof key}`);\n    throw new Error(message);\n  }\n\n  private async setExpirations(expirations: ExpirerTypes.Expiration[]): Promise<void> {\n    await this.core.storage.setItem<ExpirerTypes.Expiration[]>(this.storageKey, expirations);\n  }\n\n  private async getExpirations(): Promise<ExpirerTypes.Expiration[] | undefined> {\n    const expirations = await this.core.storage.getItem<ExpirerTypes.Expiration[]>(this.storageKey);\n    return expirations;\n  }\n\n  private async persist() {\n    await this.setExpirations(this.values);\n    this.events.emit(EXPIRER_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getExpirations();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.expirations.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored expirations for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", expirations: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore expirations for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private getExpiration(target: string): ExpirerTypes.Expiration {\n    const expiration = this.expirations.get(target);\n    if (!expiration) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${target}`);\n      this.logger.warn(message);\n      throw new Error(message);\n    }\n    return expiration;\n  }\n\n  private checkExpiry(target: string, expiration: ExpirerTypes.Expiration): void {\n    const { expiry } = expiration;\n    const msToTimeout = toMiliseconds(expiry) - Date.now();\n    if (msToTimeout <= 0) this.expire(target, expiration);\n  }\n\n  private expire(target: string, expiration: ExpirerTypes.Expiration): void {\n    this.expirations.delete(target);\n    this.events.emit(EXPIRER_EVENTS.expired, {\n      target,\n      expiration,\n    } as ExpirerTypes.Expired);\n  }\n\n  private checkExpirations(): void {\n    // avoid auto expiring if the relayer is not connected\n    if (!this.core.relayer.connected) return;\n    this.expirations.forEach((expiration, target) => this.checkExpiry(target, expiration));\n  }\n\n  private registerEventListeners(): void {\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => this.checkExpirations());\n    this.events.on(EXPIRER_EVENTS.created, (createdEvent: ExpirerTypes.Created) => {\n      const eventName = EXPIRER_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.expired, (expiredEvent: ExpirerTypes.Expired) => {\n      const eventName = EXPIRER_EVENTS.expired;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: expiredEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.deleted, (deletedEvent: ExpirerTypes.Deleted) => {\n      const eventName = EXPIRER_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\n      this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;\nfunction getFromWindow(name) {\n    let res = undefined;\n    if (typeof window !== \"undefined\" && typeof window[name] !== \"undefined\") {\n        res = window[name];\n    }\n    return res;\n}\nexports.getFromWindow = getFromWindow;\nfunction getFromWindowOrThrow(name) {\n    const res = getFromWindow(name);\n    if (!res) {\n        throw new Error(`${name} is not defined in Window`);\n    }\n    return res;\n}\nexports.getFromWindowOrThrow = getFromWindowOrThrow;\nfunction getDocumentOrThrow() {\n    return getFromWindowOrThrow(\"document\");\n}\nexports.getDocumentOrThrow = getDocumentOrThrow;\nfunction getDocument() {\n    return getFromWindow(\"document\");\n}\nexports.getDocument = getDocument;\nfunction getNavigatorOrThrow() {\n    return getFromWindowOrThrow(\"navigator\");\n}\nexports.getNavigatorOrThrow = getNavigatorOrThrow;\nfunction getNavigator() {\n    return getFromWindow(\"navigator\");\n}\nexports.getNavigator = getNavigator;\nfunction getLocationOrThrow() {\n    return getFromWindowOrThrow(\"location\");\n}\nexports.getLocationOrThrow = getLocationOrThrow;\nfunction getLocation() {\n    return getFromWindow(\"location\");\n}\nexports.getLocation = getLocation;\nfunction getCryptoOrThrow() {\n    return getFromWindowOrThrow(\"crypto\");\n}\nexports.getCryptoOrThrow = getCryptoOrThrow;\nfunction getCrypto() {\n    return getFromWindow(\"crypto\");\n}\nexports.getCrypto = getCrypto;\nfunction getLocalStorageOrThrow() {\n    return getFromWindowOrThrow(\"localStorage\");\n}\nexports.getLocalStorageOrThrow = getLocalStorageOrThrow;\nfunction getLocalStorage() {\n    return getFromWindow(\"localStorage\");\n}\nexports.getLocalStorage = getLocalStorage;\n//# sourceMappingURL=index.js.map","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IVerify } from \"@walletconnect/types\";\nimport { isBrowser, isNode, P256KeyDataType, verifyP256Jwt } from \"@walletconnect/utils\";\nimport { FIVE_SECONDS, ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\nimport { getDocument } from \"@walletconnect/window-getters\";\nimport { decodeJWT } from \"@walletconnect/relay-auth\";\n\nimport {\n  CORE_STORAGE_PREFIX,\n  CORE_VERSION,\n  TRUSTED_VERIFY_URLS,\n  VERIFY_CONTEXT,\n  VERIFY_SERVER,\n  VERIFY_SERVER_V3,\n} from \"../constants\";\nimport { IKeyValueStorage } from \"@walletconnect/keyvaluestorage\";\n\ntype Jwk = {\n  publicKey: P256KeyDataType;\n  expiresAt: number;\n};\ntype JwkPayload = {\n  exp: number;\n  id: string;\n  origin: string;\n  isScam: boolean;\n  isVerified: boolean;\n};\nexport class Verify extends IVerify {\n  public name = VERIFY_CONTEXT;\n  private abortController: AbortController;\n  private isDevEnv;\n  private verifyUrlV3 = VERIFY_SERVER_V3;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n  private version = CORE_VERSION;\n  private publicKey?: Jwk;\n  private fetchPromise?: Promise<Jwk>;\n\n  constructor(public core: ICore, public logger: Logger, public store: IKeyValueStorage) {\n    super(core, logger, store);\n    this.logger = generateChildLogger(logger, this.name);\n    this.abortController = new AbortController();\n    this.isDevEnv = isNode() && process.env.IS_VITEST;\n    this.init();\n  }\n\n  get storeKey(): string {\n    return (\n      this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + `verify:public:key`\n    );\n  }\n\n  public init = async () => {\n    if (this.isDevEnv) return;\n    this.publicKey = await this.store.getItem(this.storeKey);\n    if (this.publicKey && toMiliseconds(this.publicKey?.expiresAt) < Date.now()) {\n      this.logger.debug(\"verify v2 public key expired\");\n      await this.removePublicKey();\n    }\n    if (!this.publicKey) {\n      await this.fetchAndPersistPublicKey();\n    }\n  };\n\n  public register: IVerify[\"register\"] = async (params) => {\n    if (!isBrowser() || this.isDevEnv) return;\n    const origin = window.location.origin;\n    const { id, decryptedId } = params;\n    const src = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${origin}&id=${id}&decryptedId=${decryptedId}`;\n    try {\n      const document = getDocument() as Document;\n      const abortTimeout = this.startAbortTimer(ONE_SECOND * 5);\n      const attestationJwt = await new Promise((resolve, reject) => {\n        const abortListener = () => {\n          window.removeEventListener(\"message\", listener);\n          document.body.removeChild(iframe);\n          reject(\"attestation aborted\");\n        };\n        this.abortController.signal.addEventListener(\"abort\", abortListener);\n        const iframe = document.createElement(\"iframe\");\n        iframe.src = src;\n        iframe.style.display = \"none\";\n        iframe.addEventListener(\"error\", abortListener, { signal: this.abortController.signal });\n        const listener = (event: MessageEvent) => {\n          if (!event.data) return;\n          const data = JSON.parse(event.data);\n          if (data.type === \"verify_attestation\") {\n            const decoded = decodeJWT(data.attestation) as unknown as { payload: JwkPayload };\n            if (decoded.payload.id !== id) return;\n\n            clearInterval(abortTimeout);\n            document.body.removeChild(iframe);\n            this.abortController.signal.removeEventListener(\"abort\", abortListener);\n            window.removeEventListener(\"message\", listener);\n            resolve(data.attestation === null ? \"\" : data.attestation);\n          }\n        };\n        document.body.appendChild(iframe);\n        window.addEventListener(\"message\", listener, { signal: this.abortController.signal });\n      });\n      this.logger.debug(\"jwt attestation\", attestationJwt);\n      return attestationJwt as string;\n    } catch (e) {\n      this.logger.warn(e);\n    }\n    return \"\";\n  };\n\n  public resolve: IVerify[\"resolve\"] = async (params) => {\n    if (this.isDevEnv) return \"\";\n    const { attestationId, hash, encryptedId } = params;\n    if (attestationId === \"\") {\n      this.logger.debug(\"resolve: attestationId is empty, skipping\");\n      return;\n    }\n\n    if (attestationId) {\n      const decoded = decodeJWT(attestationId) as unknown as { payload: JwkPayload };\n      if (decoded.payload.id !== encryptedId) return;\n      const validation = await this.isValidJwtAttestation(attestationId);\n      if (validation) return validation;\n    }\n    if (!hash) return;\n    const verifyUrl = this.getVerifyUrl(params?.verifyUrl);\n    return this.fetchAttestation(hash, verifyUrl);\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  private fetchAttestation = async (attestationId: string, url: string) => {\n    this.logger.debug(`resolving attestation: ${attestationId} from url: ${url}`);\n    // set artificial timeout to prevent hanging\n    const timeout = this.startAbortTimer(ONE_SECOND * 5);\n    const result = await fetch(`${url}/attestation/${attestationId}?v2Supported=true`, {\n      signal: this.abortController.signal,\n    });\n    clearTimeout(timeout);\n    return result.status === 200 ? await result.json() : undefined;\n  };\n\n  private startAbortTimer(timer: number) {\n    this.abortController = new AbortController();\n    return setTimeout(() => this.abortController.abort(), toMiliseconds(timer));\n  }\n\n  private getVerifyUrl = (verifyUrl?: string) => {\n    let url = verifyUrl || VERIFY_SERVER;\n    if (!TRUSTED_VERIFY_URLS.includes(url)) {\n      this.logger.info(\n        `verify url: ${url}, not included in trusted list, assigning default: ${VERIFY_SERVER}`,\n      );\n      url = VERIFY_SERVER;\n    }\n    return url;\n  };\n\n  private fetchPublicKey = async () => {\n    try {\n      this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);\n      const timeout = this.startAbortTimer(FIVE_SECONDS);\n      const result = await fetch(`${this.verifyUrlV3}/public-key`, {\n        signal: this.abortController.signal,\n      });\n      clearTimeout(timeout);\n      return (await result.json()) as Jwk;\n    } catch (e) {\n      this.logger.warn(e);\n    }\n    return undefined;\n  };\n\n  private persistPublicKey = async (publicKey: Jwk) => {\n    this.logger.debug(`persisting public key to local storage`, publicKey);\n    await this.store.setItem(this.storeKey, publicKey);\n    this.publicKey = publicKey;\n  };\n\n  private removePublicKey = async () => {\n    this.logger.debug(`removing verify v2 public key from storage`);\n    await this.store.removeItem(this.storeKey);\n    this.publicKey = undefined;\n  };\n\n  private isValidJwtAttestation = async (attestation: string) => {\n    const key = await this.getPublicKey();\n    try {\n      if (key) {\n        const validation = this.validateAttestation(attestation, key);\n        return validation;\n      }\n    } catch (e) {\n      this.logger.error(e);\n      this.logger.warn(\"error validating attestation\");\n    }\n    const newKey = await this.fetchAndPersistPublicKey();\n    try {\n      if (newKey) {\n        const validation = this.validateAttestation(attestation, newKey);\n        return validation;\n      }\n    } catch (e) {\n      this.logger.error(e);\n      this.logger.warn(\"error validating attestation\");\n    }\n    return undefined;\n  };\n\n  private getPublicKey = async () => {\n    if (this.publicKey) return this.publicKey;\n    return await this.fetchAndPersistPublicKey();\n  };\n\n  private fetchAndPersistPublicKey = async () => {\n    if (this.fetchPromise) {\n      await this.fetchPromise;\n      return this.publicKey;\n    }\n    this.fetchPromise = new Promise(async (resolve) => {\n      const key = await this.fetchPublicKey();\n      if (!key) return;\n      await this.persistPublicKey(key);\n      resolve(key);\n    });\n    const key = await this.fetchPromise;\n    this.fetchPromise = undefined;\n    return key;\n  };\n\n  private validateAttestation = (attestation: string, key: Jwk) => {\n    const result = verifyP256Jwt<JwkPayload>(attestation, key.publicKey);\n    const validation = {\n      hasExpired: toMiliseconds(result.exp) < Date.now(),\n      payload: result,\n    };\n\n    if (validation.hasExpired) {\n      this.logger.warn(\"resolve: jwt attestation expired\");\n      throw new Error(\"JWT attestation expired\");\n    }\n\n    return {\n      origin: validation.payload.origin,\n      isScam: validation.payload.isScam,\n    };\n  };\n}\n","import { generateChildLogger, Logger } from \"@walletconnect/logger\";\nimport { IEchoClient } from \"@walletconnect/types\";\nimport { ECHO_CONTEXT, ECHO_URL } from \"../constants\";\n\nexport class EchoClient extends IEchoClient {\n  public readonly context = ECHO_CONTEXT;\n  constructor(public projectId: string, public logger: Logger) {\n    super(projectId, logger);\n    this.logger = generateChildLogger(logger, this.context);\n  }\n\n  public registerDeviceToken: IEchoClient[\"registerDeviceToken\"] = async (params) => {\n    const { clientId, token, notificationType, enableEncrypted = false } = params;\n\n    const echoUrl = `${ECHO_URL}/${this.projectId}/clients`;\n\n    await fetch(echoUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        client_id: clientId,\n        type: notificationType,\n        token,\n        always_raw: enableEncrypted,\n      }),\n    });\n  };\n}\n","import { generateChildLogger, Logger } from \"@walletconnect/logger\";\nimport { ICore, IEventClient, EventClientTypes } from \"@walletconnect/types\";\nimport { uuidv4 } from \"@walletconnect/utils\";\nimport {\n  CORE_STORAGE_PREFIX,\n  EVENTS_CLIENT_API_URL,\n  EVENTS_STORAGE_CLEANUP_INTERVAL,\n  EVENTS_STORAGE_CONTEXT,\n  EVENTS_STORAGE_VERSION,\n  RELAYER_SDK_VERSION,\n} from \"../constants\";\nimport { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { fromMiliseconds } from \"@walletconnect/time\";\n\nexport class EventClient extends IEventClient {\n  public readonly context = EVENTS_STORAGE_CONTEXT;\n  private readonly storagePrefix = CORE_STORAGE_PREFIX;\n  private readonly storageVersion = EVENTS_STORAGE_VERSION;\n\n  private events = new Map<string, EventClientTypes.Event>();\n  private shouldPersist = false;\n  constructor(public core: ICore, public logger: Logger, telemetryEnabled = true) {\n    super(core, logger, telemetryEnabled);\n    this.logger = generateChildLogger(logger, this.context);\n    if (telemetryEnabled) {\n      this.restore().then(async () => {\n        await this.submit();\n        this.setEventListeners();\n      });\n    } else {\n      // overwrite any persisted events with an empty array\n      this.persist();\n    }\n  }\n\n  get storageKey() {\n    return (\n      this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + \"//\" + this.context\n    );\n  }\n\n  public createEvent: IEventClient[\"createEvent\"] = (params) => {\n    const {\n      event = \"ERROR\",\n      type = \"\",\n      properties: { topic, trace },\n    } = params;\n    const eventId = uuidv4();\n    const bundleId = this.core.projectId || \"\";\n    const timestamp = Date.now();\n    const props = {\n      event,\n      type,\n      properties: {\n        topic,\n        trace,\n      },\n    };\n    const eventObj = {\n      eventId,\n      bundleId,\n      timestamp,\n      props,\n      ...this.setMethods(eventId),\n    };\n\n    if (this.telemetryEnabled) {\n      this.events.set(eventId, eventObj);\n      this.shouldPersist = true;\n    }\n\n    return eventObj;\n  };\n\n  public getEvent: IEventClient[\"getEvent\"] = (params) => {\n    const { eventId, topic } = params;\n    if (eventId) {\n      return this.events.get(eventId);\n    }\n    const event = Array.from(this.events.values()).find(\n      (event) => event.props.properties.topic === topic,\n    );\n\n    if (!event) return;\n\n    return {\n      ...event,\n      ...this.setMethods(event.eventId),\n    };\n  };\n\n  public deleteEvent: IEventClient[\"deleteEvent\"] = (params) => {\n    const { eventId } = params;\n    this.events.delete(eventId);\n    this.shouldPersist = true;\n  };\n\n  private setEventListeners = () => {\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, async () => {\n      if (this.shouldPersist) await this.persist();\n      // cleanup events older than EVENTS_STORAGE_CLEANUP_INTERVAL\n      this.events.forEach((event) => {\n        if (\n          fromMiliseconds(Date.now()) - fromMiliseconds(event.timestamp) >\n          EVENTS_STORAGE_CLEANUP_INTERVAL\n        ) {\n          this.events.delete(event.eventId);\n          this.shouldPersist = true;\n        }\n      });\n    });\n  };\n\n  private setMethods = (eventId: string) => {\n    return {\n      addTrace: (trace: string) => this.addTrace(eventId, trace),\n      setError: (errorType: string) => this.setError(eventId, errorType),\n    };\n  };\n\n  private addTrace = (eventId: string, trace: string) => {\n    const event = this.events.get(eventId);\n    if (!event) return;\n    event.props.properties.trace.push(trace);\n    this.events.set(eventId, event);\n    this.shouldPersist = true;\n  };\n\n  private setError = (eventId: string, errorType: string) => {\n    const event = this.events.get(eventId);\n    if (!event) return;\n    event.props.type = errorType;\n    event.timestamp = Date.now();\n    this.events.set(eventId, event);\n    this.shouldPersist = true;\n  };\n\n  private persist = async () => {\n    await this.core.storage.setItem(this.storageKey, Array.from(this.events.values()));\n    this.shouldPersist = false;\n  };\n\n  private restore = async () => {\n    try {\n      const events =\n        (await this.core.storage.getItem<EventClientTypes.Event[]>(this.storageKey)) || [];\n      if (!events.length) return;\n      events.forEach((event) => {\n        this.events.set(event.eventId, {\n          ...event,\n          ...this.setMethods(event.eventId),\n        });\n      });\n    } catch (error) {\n      this.logger.warn(error);\n    }\n  };\n\n  private submit = async () => {\n    if (!this.telemetryEnabled) return;\n\n    if (this.events.size === 0) return;\n\n    const eventsToSend = [];\n    // exclude events without type as they can be considered `in progress`\n    for (const [_, event] of this.events) {\n      if (event.props.type) {\n        eventsToSend.push(event);\n      }\n    }\n\n    if (eventsToSend.length === 0) return;\n\n    try {\n      const response = await fetch(\n        `${EVENTS_CLIENT_API_URL}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${RELAYER_SDK_VERSION}`,\n        {\n          method: \"POST\",\n          body: JSON.stringify(eventsToSend),\n        },\n      );\n      if (response.ok) {\n        for (const event of eventsToSend) {\n          this.events.delete(event.eventId);\n          this.shouldPersist = true;\n        }\n      }\n    } catch (error) {\n      this.logger.warn(error);\n    }\n  };\n}\n","import { EventEmitter } from \"events\";\n\nimport KeyValueStorage from \"@walletconnect/keyvaluestorage\";\nimport { HeartBeat } from \"@walletconnect/heartbeat\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  generatePlatformLogger,\n  ChunkLoggerController,\n} from \"@walletconnect/logger\";\nimport { CoreTypes, ICore } from \"@walletconnect/types\";\n\nimport {\n  Crypto,\n  Relayer,\n  Pairing,\n  JsonRpcHistory,\n  Expirer,\n  Verify,\n  EchoClient,\n  EventClient,\n} from \"./controllers\";\nimport {\n  CORE_CONTEXT,\n  CORE_DEFAULT,\n  CORE_PROTOCOL,\n  CORE_STORAGE_OPTIONS,\n  CORE_VERSION,\n  RELAYER_DEFAULT_RELAY_URL,\n  WALLETCONNECT_CLIENT_ID,\n} from \"./constants\";\n\nexport class Core extends ICore {\n  public readonly protocol = CORE_PROTOCOL;\n  public readonly version = CORE_VERSION;\n\n  public readonly name: ICore[\"name\"] = CORE_CONTEXT;\n  public readonly relayUrl: ICore[\"relayUrl\"];\n  public readonly projectId: ICore[\"projectId\"];\n  public readonly customStoragePrefix: ICore[\"customStoragePrefix\"];\n  public events: ICore[\"events\"] = new EventEmitter();\n  public logger: ICore[\"logger\"];\n  public heartbeat: ICore[\"heartbeat\"];\n  public relayer: ICore[\"relayer\"];\n  public crypto: ICore[\"crypto\"];\n  public storage: ICore[\"storage\"];\n  public history: ICore[\"history\"];\n  public expirer: ICore[\"expirer\"];\n  public pairing: ICore[\"pairing\"];\n  public verify: ICore[\"verify\"];\n  public echoClient: ICore[\"echoClient\"];\n  public eventClient: ICore[\"eventClient\"];\n\n  private initialized = false;\n  private logChunkController: ChunkLoggerController | null;\n\n  static async init(opts?: CoreTypes.Options) {\n    const core = new Core(opts);\n    await core.initialize();\n    const clientId = await core.crypto.getClientId();\n    await core.storage.setItem(WALLETCONNECT_CLIENT_ID, clientId);\n\n    return core;\n  }\n\n  constructor(opts?: CoreTypes.Options) {\n    super(opts);\n    this.projectId = opts?.projectId;\n    this.relayUrl = opts?.relayUrl || RELAYER_DEFAULT_RELAY_URL;\n    this.customStoragePrefix = opts?.customStoragePrefix ? `:${opts.customStoragePrefix}` : \"\";\n\n    const loggerOptions = getDefaultLoggerOptions({\n      level: typeof opts?.logger === \"string\" && opts.logger ? opts.logger : CORE_DEFAULT.logger,\n    });\n\n    const { logger, chunkLoggerController } = generatePlatformLogger({\n      opts: loggerOptions,\n      maxSizeInBytes: opts?.maxLogBlobSizeInBytes,\n      loggerOverride: opts?.logger,\n    });\n\n    this.logChunkController = chunkLoggerController;\n\n    if (this.logChunkController?.downloadLogsBlobInBrowser) {\n      // @ts-ignore\n      window.downloadLogsBlobInBrowser = async () => {\n        // Have to null check twice becquse there is no guarantee\n        // this.logChunkController.downloadLogsBlobInBrowser is always truthy\n        if (this.logChunkController?.downloadLogsBlobInBrowser) {\n          this.logChunkController?.downloadLogsBlobInBrowser({\n            clientId: await this.crypto.getClientId(),\n          });\n        }\n      };\n    }\n\n    this.logger = generateChildLogger(logger, this.name);\n    this.heartbeat = new HeartBeat();\n    this.crypto = new Crypto(this, this.logger, opts?.keychain);\n    this.history = new JsonRpcHistory(this, this.logger);\n    this.expirer = new Expirer(this, this.logger);\n    this.storage = opts?.storage\n      ? opts.storage\n      : new KeyValueStorage({ ...CORE_STORAGE_OPTIONS, ...opts?.storageOptions });\n    this.relayer = new Relayer({\n      core: this,\n      logger: this.logger,\n      relayUrl: this.relayUrl,\n      projectId: this.projectId,\n    });\n    this.pairing = new Pairing(this, this.logger);\n    this.verify = new Verify(this, this.logger, this.storage);\n    this.echoClient = new EchoClient(this.projectId || \"\", this.logger);\n    this.eventClient = new EventClient(this, this.logger, opts?.telemetryEnabled);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  // ---------- Public ----------------------------------------------- //\n\n  public async start() {\n    if (this.initialized) return;\n    await this.initialize();\n  }\n\n  public async getLogsBlob() {\n    return this.logChunkController?.logsToBlob({\n      clientId: await this.crypto.getClientId(),\n    });\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on = (name: any, listener: any) => {\n    return this.events.on(name, listener);\n  };\n\n  public once = (name: any, listener: any) => {\n    return this.events.once(name, listener);\n  };\n\n  public off = (name: any, listener: any) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener = (name: any, listener: any) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.crypto.init();\n      await this.history.init();\n      await this.expirer.init();\n      await this.relayer.init();\n      await this.heartbeat.init();\n      await this.pairing.init();\n      this.initialized = true;\n      this.logger.info(`Core Initialization Success`);\n    } catch (error) {\n      this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, error);\n      this.logger.error((error as any).message);\n      throw error;\n    }\n  }\n}\n","import { Core as WalletConnectCore } from \"./core\";\n\nexport * from \"./constants\";\nexport * from \"./controllers\";\n\nexport const Core = WalletConnectCore;\nexport default WalletConnectCore;\n"],"names":["fromString","from","basex","decode","encode","identity","varint","varint.encodingLength","varint.encodeTo","Digest.create","base2","base8","base10","base16","base32","base36","base64","base256emoji","bases","ONE_DAY","SIX_HOURS","THIRTY_DAYS","FIVE_SECONDS","THIRTY_SECONDS","VERIFY_SERVER_COM","VERIFY_SERVER_ORG","core","logger","KEYCHAIN_CONTEXT","KEYCHAIN_STORAGE_VERSION","CORE_STORAGE_PREFIX","keychain","tag","key","message","getInternalError","generateChildLogger","getLoggerContext","mapToObj","objToMap","CRYPTO_CONTEXT","generateRandomBytes32","seed","keyPair","relayAuth","generateKeyPairUtil","aud","sub","ttl","CRYPTO_JWT_TTL","selfPublicKey","peerPublicKey","overrideTopic","selfPrivateKey","symKey","deriveSymKey","topic","hashKey","publicKey","payload","opts","params","validateEncoding","safeJsonStringify","isTypeOneEnvelope","type","senderPublicKey","encrypt","encoded","validateDecoding","decrypt","safeJsonParse","error","deserialized","deserialize","decodeTypeByte","toString","BASE16","KeyChain","privateKey","CRYPTO_CLIENT_SEED","e","IMessageTracker","MESSAGES_CONTEXT","MESSAGES_STORAGE_VERSION","messages","hash","hashMessage","IPublisher","relayer","EventEmitter","PUBLISHER_CONTEXT","toMiliseconds","ONE_MINUTE","ONE_SECOND","_a","PUBLISHER_DEFAULT_TTL","relay","getRelayProtocolName","prompt","id","getBigIntRpcId","failedPublishMessage","startPublish","result","attempts","createExpiringPromise","resolve","RELAYER_EVENTS","event","listener","attestation","_b","_c","_d","request","getRelayProtocolApi","isUndefined","HEARTBEAT_EVENTS","ids","remaining","x","ISubscriber","SubscriberTopicMap","SUBSCRIBER_CONTEXT","SUBSCRIBER_STORAGE_VERSION","label","reject","watch","Watch","interval","PENDING_SUB_RESOLUTION_TIMEOUT","reason","getSdkError","err","subscriptions","s","__spreadProps","__spreadValues","subscription","SUBSCRIBER_EVENTS","numOfBatches","i","batch","persisted","isValidArray","response","pendingSubscriptions","createdEvent","eventName","deletedEvent","IRelayer","RELAYER_CONTEXT","requestPromise","onDisconnect","RELAYER_PROVIDER_EVENTS","res","isNode","pino","getDefaultLoggerOptions","RELAYER_DEFAULT_LOGGER","MessageTracker","Subscriber","Publisher","RELAYER_DEFAULT_RELAY_URL","getBundleId","RELAYER_TRANSPORT_CUTOFF","resolvePromise","onSubCreated","relayUrl","isOnline","sortedMessages","a","b","_e","auth","JsonRpcProvider","WsConnection","formatRelayRpcUrl","RELAYER_SDK_VERSION","messageEvent","exists","isJsonRpcRequest","RELAYER_SUBSCRIBER_SUFFIX","publishedAt","isJsonRpcResponse","formatJsonRpcResult","lastConnectedState","subscribeToNetworkChange","connected","RELAYER_RECONNECT_TIMEOUT","n","u","h","IStore","name","storagePrefix","getKey","STORE_STORAGE_VERSION","value","isProposalStruct","isSessionStruct","filter","isEqual","update","PAIRING_CONTEXT","PAIRING_STORAGE_VERSION","TYPE_1","methods","expiry","calcExpiry","FIVE_MINUTES","RELAYER_DEFAULT_PROTOCOL","pairing","uri","formatUri","EVENT_CLIENT_PAIRING_TRACES","expiryTimestamp","parseUri","existingPairing","EVENT_CLIENT_PAIRING_ERRORS","PAIRING_EVENTS","done","createDelayedPromise","engineEvent","metadata","method","formatJsonRpcRequest","PAIRING_RPC_OPTS","record","formatJsonRpcError","expirerHasDeleted","expiredPairings","isExpired","resMethod","_topic","isJsonRpcResult","isJsonRpcError","isValidParams","isValidUrl","isValidString","Store","EXPIRER_EVENTS","parseExpirerTarget","IJsonRpcHistory","HISTORY_CONTEXT","HISTORY_STORAGE_VERSION","chainId","HISTORY_EVENTS","requests","requestEvent","records","deleted","IExpirer","EXPIRER_CONTEXT","EXPIRER_STORAGE_VERSION","expiration","target","formatTopicTarget","formatIdTarget","expirations","expiredEvent","IVerify","store","VERIFY_CONTEXT","VERIFY_SERVER_V3","CORE_VERSION","isBrowser","origin","decryptedId","src","document","getDocument","abortTimeout","attestationJwt","abortListener","iframe","data","decodeJWT","attestationId","encryptedId","validation","verifyUrl","url","timeout","VERIFY_SERVER","TRUSTED_VERIFY_URLS","newKey","verifyP256Jwt","timer","IEchoClient","projectId","ECHO_CONTEXT","clientId","token","notificationType","enableEncrypted","echoUrl","ECHO_URL","c","IEventClient","telemetryEnabled","EVENTS_STORAGE_CONTEXT","EVENTS_STORAGE_VERSION","trace","eventId","uuidv4","bundleId","timestamp","eventObj","fromMiliseconds","EVENTS_STORAGE_CLEANUP_INTERVAL","errorType","events","eventsToSend","_","EVENTS_CLIENT_API_URL","Core","ICore","CORE_PROTOCOL","CORE_CONTEXT","loggerOptions","CORE_DEFAULT","chunkLoggerController","generatePlatformLogger","HeartBeat","Crypto","JsonRpcHistory","Expirer","KeyValueStorage","CORE_STORAGE_OPTIONS","Relayer","Pairing","Verify","EchoClient","EventClient","WALLETCONNECT_CLIENT_ID","WalletConnectCore"],"mappings":"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"}