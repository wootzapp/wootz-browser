{"version":3,"file":"index.cjs.js","sources":["../src/types/heartbeat.ts","../src/constants/heartbeat.ts","../src/heartbeat.ts"],"sourcesContent":["import { IEvents } from \"@walletconnect/events\";\n\nexport interface HeartBeatOptions {\n  interval?: number; // in seconds\n}\n\nexport abstract class IHeartBeat extends IEvents {\n  public abstract interval: number;\n\n  // @ts-ignore - `opts` is not used in the abstract class\n  constructor(opts?: HeartBeatOptions) {\n    super();\n  }\n\n  public abstract init(): Promise<void>;\n  public abstract stop(): void;\n}\n","import { FIVE_SECONDS } from \"@walletconnect/time\";\n\nexport const HEARTBEAT_INTERVAL = FIVE_SECONDS;\n\nexport const HEARTBEAT_EVENTS = {\n  pulse: \"heartbeat_pulse\",\n};\n","import { EventEmitter } from \"events\";\nimport { toMiliseconds } from \"@walletconnect/time\";\n\nimport { IHeartBeat, HeartBeatOptions } from \"./types\";\n\nimport { HEARTBEAT_INTERVAL, HEARTBEAT_EVENTS } from \"./constants\";\n\nexport class HeartBeat extends IHeartBeat {\n  static async init(opts?: HeartBeatOptions) {\n    const heartbeat = new HeartBeat(opts);\n    await heartbeat.init();\n    return heartbeat;\n  }\n\n  public events = new EventEmitter();\n\n  public interval = HEARTBEAT_INTERVAL;\n  private intervalRef?: ReturnType<typeof setInterval>;\n\n  constructor(opts?: HeartBeatOptions) {\n    super(opts);\n    this.interval = opts?.interval || HEARTBEAT_INTERVAL;\n  }\n\n  public async init(): Promise<void> {\n    await this.initialize();\n  }\n\n  public stop(): void {\n    clearInterval(this.intervalRef);\n  }\n\n  public on(event: string, listener: any): void {\n    this.events.on(event, listener);\n  }\n\n  public once(event: string, listener: any): void {\n    this.events.once(event, listener);\n  }\n\n  public off(event: string, listener: any): void {\n    this.events.off(event, listener);\n  }\n\n  public removeListener(event: string, listener: any): void {\n    this.events.removeListener(event, listener);\n  }\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize(): Promise<any> {\n    this.intervalRef = setInterval(() => this.pulse(), toMiliseconds(this.interval));\n  }\n\n  private pulse() {\n    this.events.emit(HEARTBEAT_EVENTS.pulse);\n  }\n}\n"],"names":["IEvents","opts","FIVE_SECONDS","IHeartBeat","EventEmitter","HEARTBEAT_INTERVAL","heartbeat","event","listener","toMiliseconds","HEARTBEAT_EVENTS"],"mappings":";;;;;;;;AAMO,MAAe,UAAmBA,SAAAA,cAAQ,CAI/C,WAAA,CAAYC,CAAyB,CAAA,CACnC,KAAM,GACR,CAIF;;ACdO,MAAM,mBAAqBC,iBAErB,CAAA,gBAAA,CAAmB,CAC9B,KAAA,CAAO,iBACT;;ACCO,MAAM,SAAkBC,SAAAA,UAAW,CAYxC,WAAA,CAAYF,EAAyB,CACnC,KAAA,CAAMA,CAAI,CAAA,CANZ,IAAO,CAAA,MAAA,CAAS,IAAIG,qBAAAA,CAEpB,KAAO,QAAWC,CAAAA,kBAAAA,CAKhB,IAAK,CAAA,QAAA,CAAA,CAAWJ,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,CAAAA,CAAM,CAAA,QAAA,GAAYI,mBACpC,CAdA,aAAa,IAAKJ,CAAAA,CAAAA,CAAyB,CACzC,MAAMK,CAAY,CAAA,IAAI,UAAUL,CAAI,CAAA,CACpC,OAAMK,MAAAA,CAAAA,CAAU,IAAK,EAAA,CACdA,CACT,CAYA,MAAa,IAAsB,EAAA,CACjC,MAAM,IAAA,CAAK,UAAW,GACxB,CAEO,IAAA,EAAa,CAClB,aAAc,CAAA,IAAA,CAAK,WAAW,EAChC,CAEO,EAAA,CAAGC,CAAeC,CAAAA,CAAAA,CAAqB,CAC5C,IAAK,CAAA,MAAA,CAAO,EAAGD,CAAAA,CAAAA,CAAOC,CAAQ,EAChC,CAEO,IAAA,CAAKD,EAAeC,CAAqB,CAAA,CAC9C,IAAK,CAAA,MAAA,CAAO,IAAKD,CAAAA,CAAAA,CAAOC,CAAQ,EAClC,CAEO,GAAID,CAAAA,CAAAA,CAAeC,CAAqB,CAAA,CAC7C,IAAK,CAAA,MAAA,CAAO,GAAID,CAAAA,CAAAA,CAAOC,CAAQ,EACjC,CAEO,cAAeD,CAAAA,CAAAA,CAAeC,CAAqB,CAAA,CACxD,IAAK,CAAA,MAAA,CAAO,eAAeD,CAAOC,CAAAA,CAAQ,EAC5C,CAIA,MAAc,UAAA,EAA2B,CACvC,IAAA,CAAK,YAAc,WAAY,CAAA,IAAM,IAAK,CAAA,KAAA,EAASC,CAAAA,kBAAAA,CAAc,IAAK,CAAA,QAAQ,CAAC,EACjF,CAEQ,KAAQ,EAAA,CACd,KAAK,MAAO,CAAA,IAAA,CAAKC,gBAAiB,CAAA,KAAK,EACzC,CACF;;;;;;;"}