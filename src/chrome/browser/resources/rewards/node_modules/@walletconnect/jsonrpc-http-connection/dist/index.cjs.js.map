{"version":3,"file":"index.cjs.js","sources":["../src/http.ts"],"sourcesContent":["import { EventEmitter } from \"events\";\nimport fetch from \"cross-fetch\";\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\nimport {\n  formatJsonRpcError,\n  IJsonRpcConnection,\n  JsonRpcPayload,\n  isHttpUrl,\n  parseConnectionError,\n} from \"@walletconnect/jsonrpc-utils\";\n\nconst DEFAULT_HTTP_HEADERS = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\",\n};\n\nconst DEFAULT_HTTP_METHOD = \"POST\";\n\nconst DEFAULT_FETCH_OPTS = {\n  headers: DEFAULT_HTTP_HEADERS,\n  method: DEFAULT_HTTP_METHOD,\n};\n\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\n\nexport class HttpConnection implements IJsonRpcConnection {\n  public events = new EventEmitter();\n\n  private isAvailable = false;\n\n  private registering = false;\n\n  constructor(public url: string, public disableProviderPing = false) {\n    if (!isHttpUrl(url)) {\n      throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n    }\n    this.url = url;\n    this.disableProviderPing = disableProviderPing;\n  }\n\n  get connected(): boolean {\n    return this.isAvailable;\n  }\n\n  get connecting(): boolean {\n    return this.registering;\n  }\n\n  public on(event: string, listener: any): void {\n    this.events.on(event, listener);\n  }\n\n  public once(event: string, listener: any): void {\n    this.events.once(event, listener);\n  }\n\n  public off(event: string, listener: any): void {\n    this.events.off(event, listener);\n  }\n\n  public removeListener(event: string, listener: any): void {\n    this.events.removeListener(event, listener);\n  }\n\n  public async open(url: string = this.url): Promise<void> {\n    await this.register(url);\n  }\n\n  public async close(): Promise<void> {\n    if (!this.isAvailable) {\n      throw new Error(\"Connection already closed\");\n    }\n    this.onClose();\n  }\n\n  public async send(payload: JsonRpcPayload): Promise<void> {\n    if (!this.isAvailable) {\n      await this.register();\n    }\n    try {\n      const body = safeJsonStringify(payload);\n      const res = await fetch(this.url, { ...DEFAULT_FETCH_OPTS, body });\n      const data = await res.json();\n      this.onPayload({ data });\n    } catch (e) {\n      this.onError(payload.id, e as any);\n    }\n  }\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async register(url = this.url): Promise<void> {\n    if (!isHttpUrl(url)) {\n      throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n    }\n    if (this.registering) {\n      const currentMaxListeners = this.events.getMaxListeners();\n      if (\n        this.events.listenerCount(\"register_error\") >= currentMaxListeners ||\n        this.events.listenerCount(\"open\") >= currentMaxListeners\n      ) {\n        this.events.setMaxListeners(currentMaxListeners + 1);\n      }\n      return new Promise((resolve, reject) => {\n        this.events.once(\"register_error\", (error) => {\n          this.resetMaxListeners();\n          reject(error);\n        });\n        this.events.once(\"open\", () => {\n          this.resetMaxListeners();\n          if (typeof this.isAvailable === \"undefined\") {\n            return reject(new Error(\"HTTP connection is missing or invalid\"));\n          }\n          resolve();\n        });\n      });\n    }\n    this.url = url;\n    this.registering = true;\n    try {\n      if (!this.disableProviderPing) {\n        const body = safeJsonStringify({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n        await fetch(url, { ...DEFAULT_FETCH_OPTS, body });\n      }\n      this.onOpen();\n    } catch (e) {\n      const error = this.parseError(e as any);\n      this.events.emit(\"register_error\", error);\n      this.onClose();\n      throw error;\n    }\n  }\n\n  private onOpen() {\n    this.isAvailable = true;\n    this.registering = false;\n    this.events.emit(\"open\");\n  }\n\n  private onClose() {\n    this.isAvailable = false;\n    this.registering = false;\n    this.events.emit(\"close\");\n  }\n\n  private onPayload(e: { data: any }) {\n    if (typeof e.data === \"undefined\") return;\n    const payload: JsonRpcPayload = typeof e.data === \"string\" ? safeJsonParse(e.data) : e.data;\n    this.events.emit(\"payload\", payload);\n  }\n\n  private onError(id: number, e: Error) {\n    const error = this.parseError(e);\n    const message = error.message || error.toString();\n    const payload = formatJsonRpcError(id, message);\n    this.events.emit(\"payload\", payload);\n  }\n\n  private parseError(e: Error, url = this.url) {\n    return parseConnectionError(e, url, \"HTTP\");\n  }\n\n  private resetMaxListeners() {\n    if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {\n      this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);\n    }\n  }\n}\n\nexport default HttpConnection;\n"],"names":["DEFAULT_HTTP_HEADERS","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","EVENT_EMITTER_MAX_LISTENERS_DEFAULT","url","disableProviderPing","EventEmitter","isHttpUrl","event","listener","payload","body","safeJsonStringify","data","fetch","__spreadProps","__spreadValues","e","currentMaxListeners","resolve","reject","error","safeJsonParse","id","message","formatJsonRpcError","parseConnectionError"],"mappings":"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"}