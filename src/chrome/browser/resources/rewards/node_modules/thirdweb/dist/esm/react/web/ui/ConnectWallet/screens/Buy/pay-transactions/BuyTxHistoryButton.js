import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import styled from "@emotion/styled";
import { getCachedChain } from "../../../../../../../chains/utils.js";
import { formatNumber } from "../../../../../../../utils/formatNumber.js";
import { useCustomTheme } from "../../../../../../core/design-system/CustomThemeProvider.js";
import { spacing } from "../../../../../../core/design-system/index.js";
import { ChainName } from "../../../../components/ChainName.js";
import { Spacer } from "../../../../components/Spacer.js";
import { Container } from "../../../../components/basic.js";
import { Button } from "../../../../components/buttons.js";
import { Text } from "../../../../components/text.js";
import { PayTokenIcon } from "../PayTokenIcon.js";
import { getBuyWithCryptoStatusMeta, getBuyWithFiatStatusMeta, } from "./statusMeta.js";
export const BuyTxHistoryButtonHeight = "62px";
export function BuyTxHistoryButton(props) {
    const statusMeta = props.txInfo.type === "swap"
        ? getBuyWithCryptoStatusMeta(props.txInfo.status)
        : getBuyWithFiatStatusMeta(props.txInfo.status);
    return (_jsxs(TxButton, { onClick: props.onClick, variant: "secondary", fullWidth: true, style: {
            paddingBlock: spacing.sm,
        }, children: [_jsxs(Container, { flex: "row", center: "y", gap: "sm", style: {
                    flex: 1,
                }, children: [_jsx(PayTokenIcon, { client: props.client, chain: getCachedChain(props.txInfo.status.quote.toToken.chainId), size: "md", token: {
                            address: props.txInfo.status.quote.toToken.tokenAddress,
                        } }), _jsxs("div", { style: {
                            flex: 1,
                            display: "flex",
                            flexDirection: "column",
                            justifyContent: "center",
                        }, children: [_jsxs(Container, { flex: "row", gap: "xs", center: "y", style: {
                                    justifyContent: "space-between",
                                }, children: [_jsxs(Text, { size: "sm", color: "primaryText", children: ["Buy", " ", formatNumber(Number(props.txInfo.type === "swap"
                                                ? props.txInfo.status.quote.toAmount
                                                : props.txInfo.status.quote.estimatedToTokenAmount), 6), " ", props.txInfo.status.quote.toToken.symbol] }), " "] }), _jsx(Spacer, { y: "xxs" }), _jsx(Container, { flex: "row", center: "y", gap: "xxs", style: {
                                    justifyContent: "space-between",
                                }, children: _jsx(ChainName, { chain: getCachedChain(props.txInfo.status.quote.toToken.chainId), size: "xs", client: props.client }) })] })] }), _jsx(Container, { flex: "row", gap: "xxs", center: "y", children: _jsx(Text, { size: "xs", color: statusMeta.color, children: statusMeta.status }) })] }));
}
const TxButton = /* @__PURE__ */ styled(Button)(() => {
    const theme = useCustomTheme();
    return {
        background: theme.colors.tertiaryBg,
        "&:hover": {
            background: theme.colors.secondaryButtonBg,
        },
        height: BuyTxHistoryButtonHeight,
    };
});
//# sourceMappingURL=BuyTxHistoryButton.js.map