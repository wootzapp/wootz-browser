import type { Chain } from "../../../../../chains/types.js";
import type { ThirdwebClient } from "../../../../../client/client.js";
import type { Wallet } from "../../../../../wallets/interfaces/wallet.js";
import type { SmartWalletOptions } from "../../../../../wallets/smart/types.js";
import type { SiweAuthOptions } from "../../../../core/hooks/auth/useSiweAuth.js";
import type { LocaleId } from "../../types.js";
import type { ConnectLocale } from "../locale/types.js";
import type { WelcomeScreen } from "../screens/types.js";
type ConnectModalOptions = {
    onClose?: () => void;
    shouldSetActive: boolean;
    wallets: Wallet[];
    accountAbstraction: SmartWalletOptions | undefined;
    auth: SiweAuthOptions | undefined;
    onConnect: ((wallet: Wallet) => void) | undefined;
    size: "compact" | "wide";
    welcomeScreen: WelcomeScreen | undefined;
    meta: {
        title?: string;
        titleIconUrl?: string;
        showThirdwebBranding?: boolean;
        termsOfServiceUrl?: string;
        privacyPolicyUrl?: string;
        requireApproval?: boolean;
    };
    connectLocale: ConnectLocale;
    client: ThirdwebClient;
    recommendedWallets: Wallet[] | undefined;
    localeId: LocaleId;
    chain: Chain | undefined;
    showAllWallets: boolean | undefined;
    chains: Chain[] | undefined;
    walletConnect: {
        projectId?: string;
    } | undefined;
};
/**
 * @internal
 */
declare const ConnectModal: (props: ConnectModalOptions) => import("react/jsx-runtime.js").JSX.Element;
export default ConnectModal;
//# sourceMappingURL=ConnectModal.d.ts.map