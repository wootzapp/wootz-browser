"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isRevokeRoleSupported = void 0;
exports.revokeRole = revokeRole;
const revokeRole_js_1 = require("../__generated__/IPermissions/write/revokeRole.js");
const utils_js_1 = require("../utils.js");
var revokeRole_js_2 = require("../__generated__/IPermissions/write/revokeRole.js");
Object.defineProperty(exports, "isRevokeRoleSupported", { enumerable: true, get: function () { return revokeRole_js_2.isRevokeRoleSupported; } });
/**
 * Revokes a role from a target account.
 *
 * @param options - The options for revoking the role.
 * @returns A transaction that revokes the role when sent.
 * @extension PERMISSIONS
 * @example
 * ```ts
 * import { revokeRole } from "thirdweb/extensions/permissions";
 * import { sendTransaction } from "thirdweb";
 *
 * const transaction = revokeRole({
 *  contract,
 *  role: "admin",
 *  targetAccountAddress: "0x1234567890123456789012345678901234567890",
 * });
 *
 * await sendTransaction({ transaction, account });
 * ```
 */
function revokeRole(options) {
    return (0, revokeRole_js_1.revokeRole)({
        contract: options.contract,
        role: (0, utils_js_1.getRoleHash)(options.role),
        account: options.targetAccountAddress,
    });
}
//# sourceMappingURL=revokeRole.js.map