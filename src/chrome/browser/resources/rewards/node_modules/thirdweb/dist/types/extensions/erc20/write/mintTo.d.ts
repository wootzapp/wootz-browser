import type { BaseTransactionOptions, WithOverrides } from "../../../transaction/types.js";
import type { Prettify } from "../../../utils/type-utils.js";
export { isMintToSupported } from "../__generated__/IMintableERC20/write/mintTo.js";
/**
 * Represents the parameters for the `mintTo` function.
 * @extension ERC20
 */
export type MintToParams = Prettify<WithOverrides<{
    to: string;
} & ({
    amount: number | string;
} | {
    amountWei: bigint;
})>>;
/**
 * Mints a specified amount of tokens to a given address.
 * @param options - The options for minting tokens.
 * @returns A prepared transaction object.
 * @extension ERC20
 * @example
 * ```ts
 * import { mintTo } from "thirdweb/extensions/erc20";
 * import { sendTransaction } from "thirdweb";
 *
 * const transaction = mintTo({
 *  contract,
 *  to: "0x...",
 *  amount: 100,
 * });
 *
 * await sendTransaction({ transaction, account });
 * ```
 */
export declare function mintTo(options: BaseTransactionOptions<MintToParams>): import("../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction, import("../../../transaction/prepare-transaction.js").PrepareTransactionOptions>;
//# sourceMappingURL=mintTo.d.ts.map