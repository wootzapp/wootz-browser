import type { AuthArgsType } from "../../../core/authentication/types.js";
export declare function getConnectedEmail(): Promise<string | null>;
export declare function saveConnectedEmail(email: string): Promise<void>;
export declare function clearConnectedEmail(): Promise<void>;
export declare function getConnectedAuthStrategy(): Promise<AuthArgsType["strategy"] | undefined>;
export declare function saveConnectedAuthStrategy(authStrategy: string): Promise<void>;
export declare function clearConnectedAuthStrategy(): Promise<void>;
export declare function isDeviceSharePresentForUser(clientId: string, walletUserId?: string): Promise<boolean>;
export declare function getAuthTokenClient(clientId: string): Promise<string | null>;
export declare function setAuthTokenClient(cookieString: string, clientId: string): Promise<void>;
export declare function removeAuthTokenInClient(clientId: string): Promise<boolean>;
export declare function setWallerUserDetails({ clientId, userId, email, }: {
    clientId: string;
    userId: string;
    email?: string;
}): Promise<void>;
export declare function getWalletUserDetails(clientId: string): Promise<{
    userId: string;
    email?: string;
} | undefined>;
export declare function removeLoggedInWalletUserId(clientId: string): Promise<void>;
export declare function setDeviceShare({ clientId, deviceShare, }: {
    clientId: string;
    deviceShare: string;
}): Promise<string>;
export declare function getDeviceShare(clientId: string): Promise<{
    deviceShare: string;
}>;
//# sourceMappingURL=local.d.ts.map