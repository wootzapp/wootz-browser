"use client";
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { ReloadIcon } from "@radix-ui/react-icons";
import { iconSize, spacing } from "../../../../core/design-system/index.js";
import { Spacer } from "../../components/Spacer.js";
import { Container, Line, ModalHeader } from "../../components/basic.js";
import { Button } from "../../components/buttons.js";
import { Text } from "../../components/text.js";
import { WalletLogoSpinner } from "./WalletLogoSpinner.js";
/**
 * @internal
 */
export function WalletConnectDisconnectScreen(props) {
    return (_jsxs(Container, { style: {
            minHeight: "300px",
        }, children: [_jsx(Container, { p: "lg", children: _jsx(ModalHeader, { title: "Connect an App", onBack: props.onBack }) }), _jsx(Line, {}), _jsx(Container, { px: "lg", scrollY: true, style: {
                    maxHeight: "500px",
                }, children: _jsxs(Container, { py: "lg", style: { position: "relative" }, children: [_jsx(Container, { py: "md", children: _jsx(WalletLogoSpinner, { client: props.client, error: !!props.error, id: "walletConnect", hideSpinner: true }) }), _jsx(Container, { animate: "fadein", style: {
                                animationDuration: "200ms",
                            }, children: !props.error ? (_jsxs(_Fragment, { children: [_jsxs(Text, { balance: true, center: true, multiline: true, size: "md", children: ["Connected to ", props.session.origin ?? "another app."] }), _jsx(Spacer, { y: "xl" }), _jsx(Button, { variant: "accent", fullWidth: true, onClick: () => {
                                            props.disconnect();
                                        }, children: "Disconnect" })] })) : (_jsxs(_Fragment, { children: [_jsx(Text, { center: true, balance: true, multiline: true, size: "sm", children: props.error }), _jsx(Spacer, { y: "md" }), _jsx(Container, { flex: "row", center: "x", animate: "fadein", children: _jsxs(Button, { fullWidth: true, variant: "accent", onClick: () => props.disconnect(), style: {
                                                gap: spacing.xs,
                                                alignItems: "center",
                                            }, children: [_jsx(ReloadIcon, { width: iconSize.sm, height: iconSize.sm }), "Retry"] }) })] })) })] }) })] }));
}
//# sourceMappingURL=WalletConnectDisconnectScreen.js.map