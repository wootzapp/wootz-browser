import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { formatNumber } from "../../../../../../../utils/formatNumber.js";
import { Spacer } from "../../../../components/Spacer.js";
import { Container, Line } from "../../../../components/basic.js";
import { Text } from "../../../../components/text.js";
/**
 * @internal
 */
export function SwapFees(props) {
    return (_jsx(Container, { flex: "column", gap: "xs", style: {
            alignItems: "flex-start",
        }, children: props.quote.processingFees.map((fee) => {
            const feeAmount = formatNumber(Number(fee.amount), 6);
            return (_jsxs(Container, { flex: "row", gap: "xxs", children: [_jsxs(Text, { color: "primaryText", size: "sm", children: [feeAmount === 0 ? "~" : "", feeAmount, " ", fee.token.symbol] }), _jsxs(Text, { color: "secondaryText", size: "sm", children: ["($", (fee.amountUSDCents / 100).toFixed(2), ")"] })] }, `${fee.token.chainId}_${fee.token.tokenAddress}_${feeAmount}`));
        }) }));
}
/**
 * @internal
 */
export function FiatFees(props) {
    return (_jsxs(Container, { flex: "column", gap: "xs", children: [_jsxs("div", { style: {
                    display: "flex",
                    justifyContent: "space-between",
                }, children: [_jsx(Text, { inline: true, color: "secondaryText", children: "Amount" }), _jsxs(Text, { color: "primaryText", inline: true, children: [formatNumber(Number(props.quote.fromCurrency.amount), 2), props.quote.fromCurrency.currencySymbol] })] }), props.quote.processingFees.map((fee, i) => {
                const feeAmount = formatNumber(Number(fee.amount), 6);
                return (_jsxs("div", { style: {
                        display: "flex",
                        justifyContent: "space-between",
                    }, children: [_jsx(Text, { inline: true, color: "secondaryText", children: fee.feeType === "NETWORK" ? "Network Fee" : "Processing Fee" }), _jsxs(Text, { color: "primaryText", inline: true, children: [feeAmount === 0 ? "~" : "", feeAmount, " ", fee.currencySymbol] })] }, i));
            }), _jsx(Spacer, { y: "xxs" }), _jsx(Line, {}), _jsx(Spacer, { y: "xxs" }), _jsxs("div", { style: {
                    display: "flex",
                    justifyContent: "space-between",
                }, children: [_jsx(Text, { inline: true, color: "secondaryText", children: "Total" }), _jsxs(Text, { color: "primaryText", inline: true, children: [formatNumber(Number(props.quote.fromCurrencyWithFees.amount), 6), props.quote.fromCurrencyWithFees.currencySymbol] })] })] }));
}
//# sourceMappingURL=Fees.js.map