"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createThirdwebClient = createThirdwebClient;
const client_id_js_1 = require("../utils/client-id.js");
const is_jwt_js_1 = require("../utils/jwt/is-jwt.js");
/**
 * Creates a Thirdweb client using the provided client ID (client-side) or secret key (server-side).
 *
 * Get your client ID and secret key from the Thirdweb dashboard [here](https://thirdweb.com/dashboard/settings/api-keys).
 * **Never share your secret key with anyone.
 *
 * A client is necessary for most functions in the thirdweb SDK. It provides access to thirdweb APIs including built-in RPC, storage, and more.
 *
 * @param options - The options for creating the client.
 * @param [options.clientId] - The client ID to use for thirdweb services.
 * @param [options.secretKey] - The secret key to use for thirdweb services.
 * @returns The created Thirdweb client.
 * @throws An error if neither `clientId` nor `secretKey` is provided.
 *
 * @example
 * Create a client on the client side (client ID):
 * ```ts
 * import { createThirdwebClient } from "thirdweb";
 *
 * const client = createThirdwebClient({ clientId: "..." });
 * ```
 *
 * Create a client on the server (secret key):
 * ```ts
 * import { createThirdwebClient } from "thirdweb";
 *
 * const client = createThirdwebClient({ secretKey: "..." });
 * ```
 */
function createThirdwebClient(options) {
    const { clientId, secretKey, ...rest } = options;
    let realClientId = clientId;
    if (secretKey) {
        if ((0, is_jwt_js_1.isJWT)(secretKey)) {
            // when passing a JWT as secret key we HAVE to also have a clientId
            if (!clientId) {
                throw new Error("clientId must be provided when using a JWT secretKey");
            }
        }
        else {
            realClientId = (0, client_id_js_1.computeClientIdFromSecretKey)(secretKey);
        }
    }
    // only path we get here is if we have no secretKey and no clientId
    if (!realClientId) {
        throw new Error("clientId or secretKey must be provided");
    }
    return {
        ...rest,
        clientId: realClientId,
        secretKey,
    };
}
//# sourceMappingURL=client.js.map