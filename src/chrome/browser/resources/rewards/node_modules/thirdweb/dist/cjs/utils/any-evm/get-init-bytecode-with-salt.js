"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInitBytecodeWithSalt = getInitBytecodeWithSalt;
const utils_1 = require("viem/utils");
const prefix_js_1 = require("../bytecode/prefix.js");
const hex_js_1 = require("../encoding/hex.js");
const get_salt_hash_js_1 = require("./get-salt-hash.js");
const keccak_id_js_1 = require("./keccak-id.js");
/**
 * Generates the initialization bytecode with salt for a contract deployment.
 * @param options - The options for generating the initialization bytecode.
 * @returns The initialization bytecode with salt.
 * @example
 * ```ts
 * import { getInitBytecodeWithSalt } from "thirdweb/utils";
 * const initBytecodeWithSalt = getInitBytecodeWithSalt({
 *  bytecode,
 *  encodedArgs,
 *  salt,
 * });
 * ```
 * @utils
 */
function getInitBytecodeWithSalt(options) {
    const bytecode = (0, prefix_js_1.ensureBytecodePrefix)(options.bytecode);
    const saltHash = options.salt
        ? (0, keccak_id_js_1.keccakId)(options.salt)
        : (0, get_salt_hash_js_1.getSaltHash)(bytecode);
    const encodedArgs = typeof options.encodedArgs === "string"
        ? options.encodedArgs
        : (0, hex_js_1.uint8ArrayToHex)(options.encodedArgs);
    return (0, utils_1.encodePacked)(["bytes32", "bytes", "bytes"], [saltHash, bytecode, encodedArgs]);
}
//# sourceMappingURL=get-init-bytecode-with-salt.js.map