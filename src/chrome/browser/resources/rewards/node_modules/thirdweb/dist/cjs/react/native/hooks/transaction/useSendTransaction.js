"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useSendTransaction = useSendTransaction;
const useSendTransaction_js_1 = require("../../../core/hooks/transaction/useSendTransaction.js");
const useActiveWallet_js_1 = require("../../../core/hooks/wallets/useActiveWallet.js");
const useSwitchActiveWalletChain_js_1 = require("../../../core/hooks/wallets/useSwitchActiveWalletChain.js");
/**
 * A hook to send a transaction.
 * @returns A mutation object to send a transaction.
 * @param config Configuration for the `useSendTransaction` hook.
 * Refer to [`SendTransactionConfig`](https://portal.thirdweb.com/references/typescript/v5/SendTransactionConfig) for more details.
 * @example
 * ```tsx
 * import { useSendTransaction } from "thirdweb/react";
 * const { mutate: sendTx, data: transactionResult } = useSendTransaction();
 *
 * // later
 * sendTx(tx);
 * ```
 *
 * ### Gasless usage with [thirdweb Engine](https://portal.thirdweb.com/engine)
 * ```tsx
 * import { useSendTransaction } from "thirdweb/react";
 * const mutation = useSendTransaction({
 *   gasless: {
 *     provider: "engine",
 *     relayerUrl: "https://thirdweb.engine-***.thirdweb.com/relayer/***",
 *     relayerForwarderAddress: "0x...",
 *   }
 * });
 * ```
 *
 * ### Gasless usage with OpenZeppelin
 * ```tsx
 * import { useSendTransaction } from "thirdweb/react";
 * const mutation = useSendTransaction({
 *   gasless: {
 *     provider: "openzeppelin",
 *     relayerUrl: "https://...",
 *     relayerForwarderAddress: "0x...",
 *   }
 * });
 * @transaction
 */
function useSendTransaction(config = {}) {
    void config; // TODO native pay modal
    const wallet = (0, useActiveWallet_js_1.useActiveWallet)();
    const switchChain = (0, useSwitchActiveWalletChain_js_1.useSwitchActiveWalletChain)();
    return (0, useSendTransaction_js_1.useSendTransactionCore)({
        wallet,
        switchChain,
    });
}
//# sourceMappingURL=useSendTransaction.js.map