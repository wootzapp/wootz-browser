"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodeAbiFunction = encodeAbiFunction;
const viem_1 = require("viem");
const encodeAbiParameters_js_1 = require("../utils/abi/encodeAbiParameters.js");
const concat_hex_js_1 = require("../utils/encoding/helpers/concat-hex.js");
/**
 * Encodes an ABI function with its arguments into a hexadecimal string.
 *
 * @param abiFn - The ABI function object.
 * @param args - The arguments to be encoded.
 * @returns The encoded ABI function as a hexadecimal string.
 * @internal
 */
function encodeAbiFunction(abiFn, args) {
    const signature = (0, viem_1.toFunctionSelector)(abiFn);
    // if there are no inputs, we can return the signature as is
    if (abiFn.inputs.length === 0) {
        return signature;
    }
    const data = (0, encodeAbiParameters_js_1.encodeAbiParameters)(abiFn.inputs, args ?? []);
    return (0, concat_hex_js_1.concatHex)([signature, data ?? "0x"]);
}
//# sourceMappingURL=encode.js.map