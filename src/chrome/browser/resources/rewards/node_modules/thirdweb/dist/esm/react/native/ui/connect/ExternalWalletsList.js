import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Image, Linking, ScrollView, StyleSheet, TouchableOpacity, View, } from "react-native";
import { useWalletImage, useWalletInfo } from "../../../core/utils/wallet.js";
import { spacing } from "../../design-system/index.js";
import { Skeleton } from "../components/Skeleton.js";
import { ThemedText } from "../components/text.js";
export function ExternalWalletsList(props) {
    const { connector, client, theme } = props;
    const connectWallet = (wallet) => {
        connector({
            wallet,
            connectFn: async (chain) => {
                await wallet.connect({
                    client,
                    chain,
                });
                return wallet;
            },
        });
    };
    return (_jsxs(View, { style: styles.container, children: [_jsx(ScrollView, { style: {
                    flex: 1,
                    paddingHorizontal: props.containerType === "modal" ? spacing.lg : 0,
                    paddingBottom: spacing.md,
                }, children: _jsx(View, { style: { flexDirection: "column", gap: spacing.md }, children: props.externalWallets.map((wallet) => (_jsx(ExternalWalletRow, { wallet: wallet, connectWallet: connectWallet, theme: theme }, wallet.id))) }) }), _jsx(NewToWallets, { theme: props.theme, containerType: props.containerType })] }));
}
function ExternalWalletRow(props) {
    const { wallet, theme, connectWallet } = props;
    const imageQuery = useWalletImage(wallet.id);
    const infoQuery = useWalletInfo(wallet.id);
    return (_jsxs(TouchableOpacity, { style: styles.row, onPress: () => connectWallet(wallet), children: [imageQuery.data ? (_jsx(Image, { source: { uri: imageQuery.data ?? "" }, style: { width: 52, height: 52, borderRadius: 6 } })) : (_jsx(Skeleton, { theme: theme, style: {
                    width: 52,
                    height: 52,
                } })), _jsx(ThemedText, { theme: theme, type: "subtitle", children: infoQuery.data?.name || "" })] }));
}
function NewToWallets({ theme, containerType, }) {
    return (_jsxs(View, { style: [
            styles.row,
            {
                borderTopWidth: 1,
                borderColor: theme.colors.borderColor,
                paddingVertical: spacing.md,
                paddingHorizontal: containerType === "modal" ? spacing.lg : 0,
            },
        ], children: [_jsx(ThemedText, { theme: theme, type: "subtext", children: "New to wallets?" }), _jsx(View, { style: { flex: 1 } }), _jsx(ThemedText, { type: "subtext", style: { color: theme.colors.primaryText }, theme: theme, onPress: () => Linking.openURL("https://blog.thirdweb.com/web3-wallet/"), children: "Get started" })] }));
}
const styles = StyleSheet.create({
    container: {
        flex: 1,
        flexDirection: "column",
    },
    row: {
        flexDirection: "row",
        gap: spacing.md,
        justifyContent: "flex-start",
        alignItems: "center",
    },
});
//# sourceMappingURL=ExternalWalletsList.js.map