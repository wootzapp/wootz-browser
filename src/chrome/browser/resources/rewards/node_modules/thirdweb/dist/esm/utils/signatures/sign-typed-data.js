import { hashTypedData } from "viem";
import { parseTypedData } from "./helpers/parseTypedData.js";
import { sign } from "./sign.js";
import { signatureToHex } from "./signature-to-hex.js";
/**
 * Signs a typed data object with a given private key according to EIP712.
 * @param options The typed data is passed within options alongside the private key
 * @param options.privateKey The private key to sign the typed data with
 * @returns The signature as a hex string
 * @example
 * ```ts
 * import { signTypedData } from "thirdweb/utils";
 * signTypedData({
 *   privateKey: "0x...",
 *   ...typedData
 * });
 * ```
 * @utils
 */
export function signTypedData(options) {
    const { privateKey, ...typedData } = options;
    const parsedTypeData = parseTypedData(typedData);
    const signature = sign({
        hash: hashTypedData(parsedTypeData), // TODO: Implement native hashTypedData
        privateKey,
    });
    return signatureToHex(signature);
}
//# sourceMappingURL=sign-typed-data.js.map