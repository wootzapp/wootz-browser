import type { Chain } from "../../../../chains/types.js";
import type { ThirdwebClient } from "../../../../client/client.js";
import type { Wallet } from "../../../interfaces/wallet.js";
import type { AuthStoredTokenWithCookieReturnType, MultiStepAuthArgsType, OauthOption } from "../../core/authentication/types.js";
import type { Ecosystem } from "../../web/types.js";
export declare function otpLogin(options: MultiStepAuthArgsType & {
    client: ThirdwebClient;
    ecosystem?: Ecosystem;
}): Promise<AuthStoredTokenWithCookieReturnType>;
export declare function authenticate(auth: OauthOption, client: ThirdwebClient): Promise<AuthStoredTokenWithCookieReturnType>;
export declare function socialLogin(auth: OauthOption, client: ThirdwebClient): Promise<AuthStoredTokenWithCookieReturnType>;
export declare function siweLogin(client: ThirdwebClient, wallet: Wallet, chain: Chain, ecosystem?: Ecosystem): Promise<AuthStoredTokenWithCookieReturnType>;
export declare function customJwt(authOptions: {
    jwt: string;
    password: string;
}, client: ThirdwebClient): Promise<AuthStoredTokenWithCookieReturnType>;
export declare function authEndpoint(authOptions: {
    payload: string;
    encryptionKey: string;
}, client: ThirdwebClient): Promise<AuthStoredTokenWithCookieReturnType>;
export declare function deleteActiveAccount(options: {
    client: ThirdwebClient;
}): Promise<boolean>;
//# sourceMappingURL=native-auth.d.ts.map