import type { Address } from "abitype";
import type { TransactionSerializable } from "viem";
import type { Account } from "../../../../wallets/interfaces/wallet.js";
import type { PreparedTransaction } from "../../../prepare-transaction.js";
import { type WaitForReceiptOptions } from "../../wait-for-tx-receipt.js";
/**
 * @transaction
 */
export type EngineOptions = {
    provider: "engine";
    relayerUrl: string;
    relayerForwarderAddress: Address;
    domainName?: string;
    domainVersion?: string;
    domainSeparatorVersion?: string;
    experimentalChainlessSupport?: boolean;
};
type SendengineTransactionOptions = {
    account: Account;
    transaction: PreparedTransaction<any>;
    serializableTransaction: TransactionSerializable;
    gasless: EngineOptions;
};
/**
 * @internal - only exported for testing
 */
export declare function prepareEngineTransaction({ account, serializableTransaction, transaction, gasless, }: SendengineTransactionOptions): Promise<{
    readonly message: {
        readonly from: string;
        readonly to: string;
        readonly value: 0n;
        readonly gas: bigint;
        readonly nonce: bigint;
        readonly data: `0x${string}`;
    };
    readonly signature: `0x${string}`;
    readonly messageType: "forward";
}>;
export declare const ForwardRequest: readonly [{
    readonly name: "from";
    readonly type: "address";
}, {
    readonly name: "to";
    readonly type: "address";
}, {
    readonly name: "value";
    readonly type: "uint256";
}, {
    readonly name: "gas";
    readonly type: "uint256";
}, {
    readonly name: "nonce";
    readonly type: "uint256";
}, {
    readonly name: "data";
    readonly type: "bytes";
}];
export declare const ChainAwareForwardRequest: readonly [{
    readonly name: "from";
    readonly type: "address";
}, {
    readonly name: "to";
    readonly type: "address";
}, {
    readonly name: "value";
    readonly type: "uint256";
}, {
    readonly name: "gas";
    readonly type: "uint256";
}, {
    readonly name: "nonce";
    readonly type: "uint256";
}, {
    readonly name: "data";
    readonly type: "bytes";
}, {
    readonly name: "chainid";
    readonly type: "uint256";
}];
/**
 * @internal
 */
export declare function relayEngineTransaction(options: SendengineTransactionOptions): Promise<WaitForReceiptOptions>;
export {};
//# sourceMappingURL=engine.d.ts.map