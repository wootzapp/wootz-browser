import fsPromises from "node:fs/promises";
import process from "node:process";
import { fileURLToPath } from "node:url";
import path from "node:path";
import { URL } from "node:url";
const toPath = (urlOrPath) => urlOrPath instanceof URL ? fileURLToPath(urlOrPath) : urlOrPath;
async function findUp(name, { cwd = process.cwd(), type = "file", stopAt } = {}) {
    let directory = path.resolve(toPath(cwd) ?? "");
    const { root } = path.parse(directory);
    stopAt = path.resolve(directory, toPath(stopAt ?? root));
    while (directory && directory !== stopAt && directory !== root) {
        const filePath = path.isAbsolute(name) ? name : path.join(directory, name);
        try {
            const stats = await fsPromises.stat(filePath);
            if ((type === "file" && stats.isFile()) ||
                (type === "directory" && stats.isDirectory())) {
                return filePath;
            }
        }
        catch { }
        directory = path.dirname(directory);
    }
    return undefined;
}
export async function packageDirectory({ cwd } = {}) {
    const filePath = await findUp("package.json", { cwd });
    return filePath && path.dirname(filePath);
}
//# sourceMappingURL=utils.js.map