import type { ThirdwebClient } from "../client/client.js";
import type { UploadOptions as InternalUploadOptions, UploadableFile } from "./upload/types.js";
export type UploadOptions<TFiles extends UploadableFile[]> = InternalUploadOptions<TFiles> & {
    client: ThirdwebClient;
};
type UploadReturnType<TFiles extends UploadableFile[]> = TFiles extends {
    length: 0;
} ? null : TFiles extends {
    length: 1;
} ? string : string[];
/**
 * Uploads files based on the provided options.
 * @param options - The upload options.
 * @returns A promise that resolves to the uploaded file URI or URIs (when passing multiple files).
 * @throws An error if the upload fails.
 * @example
 * ```ts
 * import { upload } from "thirdweb/storage";
 * const uri = await upload({
 *  client,
 *  files: [
 *    new File(["hello world"], "hello.txt"),
 *  ],
 * });
 * ```
 * @storage
 */
export declare function upload<const TFiles extends UploadableFile[]>(options: UploadOptions<TFiles>): Promise<UploadReturnType<TFiles>>;
export {};
//# sourceMappingURL=upload.d.ts.map