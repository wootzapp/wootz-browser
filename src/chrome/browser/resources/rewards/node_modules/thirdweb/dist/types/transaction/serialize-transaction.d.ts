import { type GetTransactionType, type SerializedTransactionReturnType, type Signature, type TransactionSerializable, type TransactionType } from "viem";
export type SerializeTransactionOptions = {
    transaction: TransactionSerializable;
    signature?: Signature | undefined;
};
/**
 * Serializes a legacy, EIP-1559, EIP-2930, EIP-4844, or EIP-7702 transaction object.
 *
 * @param options - The serialization options.
 * @param options.transaction - The transaction object to be serialized.
 * @param [options.signature] - The signature to include with the transaction, if necessary.
 * @returns The serialized transaction.
 * @throws An error if the provided transaction object is invalid.
 * @transaction
 * @example
 * ```ts
 * import { serializeTransaction } from "thirdweb";
 *
 * const serializedTransaction = serializeTransaction({ transaction: {
 *    to: "0x",
 *    value: 0n,
 *  }
 * });
 * ```
 */
export declare function serializeTransaction<const transaction extends TransactionSerializable, _transactionType extends TransactionType = GetTransactionType<transaction>>(options: SerializeTransactionOptions): SerializedTransactionReturnType<transaction, _transactionType>;
//# sourceMappingURL=serialize-transaction.d.ts.map