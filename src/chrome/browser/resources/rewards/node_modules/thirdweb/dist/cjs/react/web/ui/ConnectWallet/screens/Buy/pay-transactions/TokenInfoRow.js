"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenInfoRow = TokenInfoRow;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const utils_js_1 = require("../../../../../../../chains/utils.js");
const formatNumber_js_1 = require("../../../../../../../utils/formatNumber.js");
const useChainQuery_js_1 = require("../../../../../../core/hooks/others/useChainQuery.js");
const basic_js_1 = require("../../../../components/basic.js");
const text_js_1 = require("../../../../components/text.js");
const PayTokenIcon_js_1 = require("../PayTokenIcon.js");
function TokenInfoRow(props) {
    const chainObj = (0, react_1.useMemo)(() => (0, utils_js_1.getCachedChain)(props.chainId), [props.chainId]);
    const { name } = (0, useChainQuery_js_1.useChainName)(chainObj);
    return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "row", style: {
            justifyContent: "space-between",
        }, children: [(0, jsx_runtime_1.jsx)(text_js_1.Text, { size: "sm", children: props.label }), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "column", gap: "xxs", style: {
                    alignItems: "flex-end",
                }, children: [(0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "row", gap: "xs", center: "y", children: [(0, jsx_runtime_1.jsx)(PayTokenIcon_js_1.PayTokenIcon, { chain: chainObj, size: "sm", token: {
                                    address: props.tokenAddress,
                                }, client: props.client }), (0, jsx_runtime_1.jsxs)(text_js_1.Text, { color: "primaryText", children: [(0, formatNumber_js_1.formatNumber)(Number(props.tokenAmount), 6), " ", props.tokenSymbol] })] }), (0, jsx_runtime_1.jsx)(text_js_1.Text, { size: "sm", children: name })] })] }));
}
//# sourceMappingURL=TokenInfoRow.js.map