import { type Hex } from "../../utils/encoding/hex.js";
/**
 * A map of all current thirdweb's smart contract roles
 */
export declare const roleMap: {
    readonly admin: "";
    readonly transfer: "TRANSFER_ROLE";
    readonly minter: "MINTER_ROLE";
    readonly pauser: "PAUSER_ROLE";
    readonly lister: "LISTER_ROLE";
    readonly asset: "ASSET_ROLE";
    readonly unwrap: "UNWRAP_ROLE";
    readonly factory: "FACTORY_ROLE";
    readonly signer: "SIGNER_ROLE";
    readonly metadata: "METADATA_ROLE";
    readonly revoke: "REVOKE_ROLE";
    readonly migration: "MIGRATION_ROLE";
};
/**
 * @extension PERMISSIONS
 */
export type ThirdwebContractRole = keyof typeof roleMap;
export declare const ALL_ROLES: ThirdwebContractRole[];
export declare function isThirdwebContractRole(role: string): role is ThirdwebContractRole;
export type RoleInput = ThirdwebContractRole | Hex | (string & {});
/**
 * Get a hex value of a smart contract role
 * You need the hex value to interact with the smart contracts.
 * @param role string
 * @returns hex value of the contract role
 *
 * @example
 * ```ts
 * const adminRoleHash = getRoleHash("admin"); // 0x0000000...000000
 * ```
 * @extension PERMISSIONS
 */
export declare function getRoleHash(role: RoleInput): `0x${string}`;
//# sourceMappingURL=utils.d.ts.map