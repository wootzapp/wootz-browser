import { isNativeTokenAddress } from "../../constants/addresses.js";
import { getContract } from "../../contract/contract.js";
import { toUnits } from "../units.js";
export async function convertErc20Amount(options) {
    if ("amount" in options) {
        // for native token, we know decimals are 18
        if (!options.erc20Address || isNativeTokenAddress(options.erc20Address)) {
            return toUnits(options.amount.toString(), 18);
        }
        // otherwise get the decimals of the currency
        const currencyContract = getContract({
            client: options.client,
            chain: options.chain,
            address: options.erc20Address,
        });
        const { decimals } = await import("../../extensions/erc20/read/decimals.js");
        const currencyDecimals = await decimals({
            contract: currencyContract,
        });
        return toUnits(options.amount.toString(), currencyDecimals);
    }
    return options.amountInWei;
}
//# sourceMappingURL=convert-erc20-amount.js.map