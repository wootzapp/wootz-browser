import type { BaseTransactionOptions } from "../../../../transaction/types.js";
import { type GetWinningBidParams as GeneratedWinningBidParams } from "../../__generated__/IEnglishAuctions/read/getWinningBid.js";
/**
 * @extension MARKETPLACE
 */
export type GetWinningBidParams = GeneratedWinningBidParams;
/**
 * Retrieves the winning bid information for a given auction.
 *
 * @param options - The options for retrieving the winning bid.
 * @returns The winning bid information, or undefined if there is no winning bid.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { getWinningBid } from "thirdweb/extensions/marketplace";
 *
 * const winningBid = await getWinningBid({
 *  contract,
 *  auctionId: 0n,
 * });
 * ```
 */
export declare function getWinningBid(options: BaseTransactionOptions<GetWinningBidParams>): Promise<{
    bidderAddress: string;
    currencyAddress: string;
    bidAmountWei: bigint;
    currencyValue: import("../../../../utils/extensions/resolve-currency-value.js").CurrencyValue;
} | undefined>;
//# sourceMappingURL=getWinningBid.d.ts.map