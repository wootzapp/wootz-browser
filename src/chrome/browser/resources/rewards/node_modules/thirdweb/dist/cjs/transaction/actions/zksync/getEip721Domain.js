"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEip712Domain = exports.gasPerPubdataDefault = void 0;
const zksync_1 = require("viem/zksync");
const hex_js_1 = require("../../../utils/encoding/hex.js");
exports.gasPerPubdataDefault = 50000n;
const getEip712Domain = (transaction) => {
    const message = transactionToMessage(transaction);
    return {
        domain: {
            name: "zkSync",
            version: "2",
            chainId: transaction.chainId,
        },
        types: {
            Transaction: [
                { name: "txType", type: "uint256" },
                { name: "from", type: "uint256" },
                { name: "to", type: "uint256" },
                { name: "gasLimit", type: "uint256" },
                { name: "gasPerPubdataByteLimit", type: "uint256" },
                { name: "maxFeePerGas", type: "uint256" },
                { name: "maxPriorityFeePerGas", type: "uint256" },
                { name: "paymaster", type: "uint256" },
                { name: "nonce", type: "uint256" },
                { name: "value", type: "uint256" },
                { name: "data", type: "bytes" },
                { name: "factoryDeps", type: "bytes32[]" },
                { name: "paymasterInput", type: "bytes" },
            ],
        },
        primaryType: "Transaction",
        message: message,
    };
};
exports.getEip712Domain = getEip712Domain;
function transactionToMessage(transaction) {
    const { gas, nonce, to, from, value, maxFeePerGas, maxPriorityFeePerGas, paymaster, paymasterInput, gasPerPubdata, data, factoryDeps, } = transaction;
    return {
        txType: 113n,
        from: BigInt(from),
        to: to ? BigInt(to) : 0n,
        gasLimit: gas ?? 0n,
        gasPerPubdataByteLimit: gasPerPubdata ?? exports.gasPerPubdataDefault,
        maxFeePerGas: maxFeePerGas ?? 0n,
        maxPriorityFeePerGas: maxPriorityFeePerGas ?? 0n,
        paymaster: paymaster ? BigInt(paymaster) : 0n,
        nonce: nonce ? BigInt(nonce) : 0n,
        value: value ?? 0n,
        data: data ? data : "0x0",
        factoryDeps: factoryDeps?.map((dep) => (0, hex_js_1.toHex)((0, zksync_1.hashBytecode)(dep))) ?? [],
        paymasterInput: paymasterInput ? paymasterInput : "0x",
    };
}
//# sourceMappingURL=getEip721Domain.js.map