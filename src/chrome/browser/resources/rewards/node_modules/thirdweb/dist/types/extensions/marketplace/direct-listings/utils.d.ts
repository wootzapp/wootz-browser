import type { BaseTransactionOptions } from "../../../transaction/types.js";
import type { getListing } from "../__generated__/IDirectListings/read/getListing.js";
import type { DirectListing } from "./types.js";
/**
 * @internal
 */
export declare function mapDirectListing(options: BaseTransactionOptions<{
    latestBlock: {
        timestamp: bigint;
    };
    rawListing: Awaited<ReturnType<typeof getListing>>;
}>): Promise<DirectListing>;
/**
 * @extension MARKETPLACE
 */
export type IsListingValidParams = {
    listing: DirectListing;
    quantity?: bigint;
};
export type ValidReturn = {
    valid: true;
} | {
    valid: false;
    reason: string;
};
export declare function isListingValid(options: BaseTransactionOptions<IsListingValidParams>): Promise<ValidReturn>;
//# sourceMappingURL=utils.d.ts.map