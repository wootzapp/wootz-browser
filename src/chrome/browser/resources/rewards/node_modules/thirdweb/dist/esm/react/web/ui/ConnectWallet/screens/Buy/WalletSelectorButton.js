import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { CheckIcon, ChevronDownIcon } from "@radix-ui/react-icons";
import { shortenAddress } from "../../../../../../utils/address.js";
import { useCustomTheme } from "../../../../../core/design-system/CustomThemeProvider.js";
import { iconSize, radius, spacing, } from "../../../../../core/design-system/index.js";
import { useConnectedWallets } from "../../../../../core/hooks/wallets/useConnectedWallets.js";
import { useEnsAvatar, useEnsName } from "../../../../../core/utils/wallet.js";
import { Img } from "../../../components/Img.js";
import { WalletImage } from "../../../components/WalletImage.js";
import { Container } from "../../../components/basic.js";
import { Button } from "../../../components/buttons.js";
import { Text } from "../../../components/text.js";
export function WalletSelectorButton(props) {
    const theme = useCustomTheme();
    return (_jsx(Container, { bg: "tertiaryBg", style: {
            borderRadius: radius.lg,
            border: `1px solid ${theme.colors.borderColor}`,
            ...props.containerStyle,
        }, children: _jsxs(Button, { fullWidth: true, disabled: props.disabled, onClick: props.onClick, variant: "ghost", style: {
                justifyContent: "space-between",
                padding: spacing.sm,
                backgroundColor: theme.colors.tertiaryBg,
            }, gap: "sm", children: [_jsx(WalletRow, { client: props.client, address: props.address }), !props.disableChevron && (_jsx(ChevronDownIcon, { width: iconSize.sm, height: iconSize.sm, style: {
                        color: theme.colors.secondaryText,
                    } })), props.checked && (_jsx(CheckIcon, { width: iconSize.md, height: iconSize.md }))] }) }));
}
export function WalletRow(props) {
    const { client, address } = props;
    const connectedWallets = useConnectedWallets();
    const wallet = connectedWallets.find((x) => x.getAccount()?.address === props.address);
    const walletId = props.walletId || wallet?.id;
    const ensNameQuery = useEnsName({
        client,
        address,
    });
    const addressOrENS = ensNameQuery.data || shortenAddress(address);
    const ensAvatarQuery = useEnsAvatar({
        client,
        ensName: ensNameQuery.data,
    });
    return (_jsxs(Container, { flex: "row", center: "y", gap: "sm", color: "secondaryText", children: [ensAvatarQuery.data ? (_jsx(Img, { src: ensAvatarQuery.data, width: iconSize.md, height: iconSize.md, style: {
                    borderRadius: radius.sm,
                }, client: props.client })) : walletId ? (_jsx(WalletImage, { id: walletId, size: iconSize.md, client: props.client })) : null, _jsx(Text, { size: "sm", color: "primaryText", children: addressOrENS || shortenAddress(props.address) })] }));
}
//# sourceMappingURL=WalletSelectorButton.js.map