"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.uploadBatch = uploadBatch;
const domains_js_1 = require("../../utils/domains.js");
const fetch_js_1 = require("../../utils/fetch.js");
async function uploadBatch(client, form, fileNames, options) {
    const headers = {};
    const res = await (0, fetch_js_1.getClientFetch)(client)(`https://${(0, domains_js_1.getThirdwebDomains)().storage}/ipfs/upload`, {
        method: "POST",
        headers: {
            ...headers,
            // ...form.getHeaders(),
        },
        body: form,
    });
    if (!res.ok) {
        res.body?.cancel();
        if (res.status === 401) {
            throw new Error("Unauthorized - You don't have permission to use this service.");
        }
        throw new Error(`Failed to upload files to IPFS - ${res.status} - ${res.statusText}`);
    }
    const body = await res.json();
    const cid = body.IpfsHash;
    if (!cid) {
        throw new Error("Failed to upload files to IPFS - Bad CID");
    }
    if (options?.uploadWithoutDirectory) {
        return [`ipfs://${cid}`];
    }
    return fileNames.map((name) => `ipfs://${cid}/${name}`);
}
//# sourceMappingURL=web-node.js.map