/**
 * Formats the compiler metadata into a standardized format.
 * @param metadata - The compiler metadata to be formatted.
 * @returns The formatted metadata.
 * @internal
 */
// biome-ignore lint/suspicious/noExplicitAny: TODO: fix later
export function formatCompilerMetadata(metadata) {
    const compilationTarget = metadata.settings.compilationTarget;
    const targets = Object.keys(compilationTarget);
    const name = compilationTarget[targets[0]];
    const info = {
        title: metadata.output.devdoc.title,
        author: metadata.output.devdoc.author,
        details: metadata.output.devdoc.detail,
        notice: metadata.output.userdoc.notice,
    };
    const licenses = [
        ...new Set(
        // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later
        Object.entries(metadata.sources).map(([, src]) => src.license)),
    ];
    return {
        name,
        abi: metadata?.output?.abi || [],
        metadata,
        info,
        licenses,
        isPartialAbi: metadata.isPartialAbi,
    };
}
//# sourceMappingURL=compiler-metadata.js.map