import { getOrDeployModule } from "../../../common/getOrDeployModule.js";
import { installPublishedModule } from "../../../common/installPublishedModule.js";
const contractId = "BatchMetadataERC1155";
/**
 * Convenience function to add the BatchMetadataERC1155 module as a default module on a core contract.
 * @param params - The parameters for the module.
 * @returns - The module function.
 * @example
 * ```ts
 * import { BatchMetadataERC1155, deployModularContract } from "thirdweb/modules";
 *
 * const deployed = deployModularContract({
 *   client,
 *   chain,
 *   account,
 *   core: "ERC1155",
 *   params: {
 *     name: "My Modular Contract",
 *   },
 *   modules: [
 *     BatchMetadataERC1155.module(),
 *   ],
 * });
 * ```
 * @modules BatchMetadataERC1155
 */
export function module(params) {
    return async (args) => {
        // deploys if needed
        const moduleContract = await getOrDeployModule({
            account: args.account,
            chain: args.chain,
            client: args.client,
            contractId,
            publisher: params?.publisher,
        });
        return {
            module: moduleContract.address,
            data: "0x",
        };
    };
}
/**
 * Installs the BatchMetadataERC1155 module on a core contract.
 * @param options
 * @returns the transaction to install the module
 * @example
 * ```ts
 * import { BatchMetadataERC1155 } from "thirdweb/modules";
 *
 * const transaction  = BatchMetadataERC1155.install({
 *  contract: coreContract,
 *  account: account,
 
 * });
 *
 * await sendTransaction({
 *  transaction,
 *  account,
 * });
 * ```
 * @modules BatchMetadataERC1155
 */
export function install(options) {
    return installPublishedModule({
        account: options.account,
        contract: options.contract,
        moduleName: contractId,
        moduleData: "0x",
        publisher: options.params?.publisher,
    });
}
/**
 * Encodes the install data for the BatchMetadataERC1155 module.
 * @param params - The parameters for the module.
 * @returns - The encoded data.
 * @modules BatchMetadataERC1155
 */
export function encodeInstall() {
    return "0x";
}
//# sourceMappingURL=install.js.map