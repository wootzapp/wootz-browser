"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThemedText = ThemedText;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_native_1 = require("react-native");
function ThemedText({ style, theme, type = "default", ...rest }) {
    return ((0, jsx_runtime_1.jsx)(react_native_1.Text, { style: [
            { color: theme.colors.primaryText },
            type === "default" ? styles.default : undefined,
            type === "title" ? styles.title : undefined,
            type === "defaultSemiBold" ? styles.defaultSemiBold : undefined,
            type === "subtitle" ? styles.subtitle : undefined,
            type === "link" ? styles.link : undefined,
            type === "subtext"
                ? { ...styles.subtext, color: theme.colors.secondaryText }
                : undefined,
            style,
        ], ...rest }));
}
const styles = react_native_1.StyleSheet.create({
    default: {
        fontSize: 16,
    },
    defaultSemiBold: {
        fontSize: 16,
        fontWeight: "600",
    },
    subtext: {
        fontSize: 14,
    },
    title: {
        fontSize: 24,
        fontWeight: "bold",
        lineHeight: 28,
    },
    subtitle: {
        fontSize: 18,
        fontWeight: "600",
    },
    link: {
        fontSize: 16,
    },
});
//# sourceMappingURL=text.js.map