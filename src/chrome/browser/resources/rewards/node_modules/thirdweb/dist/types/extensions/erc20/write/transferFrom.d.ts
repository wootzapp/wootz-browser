import type { Address } from "abitype";
import type { BaseTransactionOptions } from "../../../transaction/types.js";
import type { Prettify } from "../../../utils/type-utils.js";
/**
 * Represents the parameters for the `transferFrom` function.
 * @extension ERC20
 */
export type TransferFromParams = Prettify<{
    to: Address;
    from: Address;
} & ({
    amount: number | string;
} | {
    amountWei: bigint;
})>;
/**
 * Transfers a specified amount of tokens from one address to another address on the ERC20 contract.
 * @param options - The transaction options including from, to, amount, and gas price.
 * @returns A promise that resolves to the prepared transaction object.
 * @extension ERC20
 * @example
 * ```ts
 * import { transferFrom } from "thirdweb/extensions/erc20";
 * import { sendTransaction } from "thirdweb";
 *
 * const transaction = transferFrom({
 *  contract: USDC_CONTRACT,
 *  from: "0x1234...",
 *  to: "0x5678...",
 *  amount: 100,
 * });
 *
 * await sendTransaction({ transaction, account });
 * ```
 */
export declare function transferFrom(options: BaseTransactionOptions<TransferFromParams>): import("../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction, import("../../../transaction/prepare-transaction.js").PrepareTransactionOptions>;
//# sourceMappingURL=transferFrom.d.ts.map