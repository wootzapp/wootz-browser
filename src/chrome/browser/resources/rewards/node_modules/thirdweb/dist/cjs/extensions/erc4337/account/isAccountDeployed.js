"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isIsAccountDeployedSupported = void 0;
exports.isAccountDeployed = isAccountDeployed;
const is_contract_deployed_js_1 = require("../../../utils/bytecode/is-contract-deployed.js");
const PredictAddress = require("../__generated__/IAccountFactory/read/getAddress.js");
var getAddress_js_1 = require("../__generated__/IAccountFactory/read/getAddress.js");
Object.defineProperty(exports, "isIsAccountDeployedSupported", { enumerable: true, get: function () { return getAddress_js_1.isGetAddressSupported; } });
/**
 * Adds admin permissions for a specified address.
 * @param options - The options for the addAdmin function.
 * @returns The transaction object to be sent.
 * @example
 * ```ts
 * import { isAccountDeployed } from 'thirdweb/extensions/erc4337';
 *
 * const transaction = addAdmin({
 * contract,
 * account,
 * adminAddress: '0x...'
 * });
 *
 * await isAccountDeployed({ contract, adminSigner });
 * ```
 * @extension ERC4337
 */
async function isAccountDeployed(options) {
    const predictedAddress = await PredictAddress.getAddress(options);
    return (0, is_contract_deployed_js_1.isContractDeployed)({
        ...options.contract,
        address: predictedAddress,
    });
}
//# sourceMappingURL=isAccountDeployed.js.map