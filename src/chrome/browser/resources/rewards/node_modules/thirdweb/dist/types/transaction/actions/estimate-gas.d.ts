import type { Prettify } from "../../utils/type-utils.js";
import type { Account } from "../../wallets/interfaces/wallet.js";
import type { PreparedTransaction } from "../prepare-transaction.js";
export type EstimateGasOptions = Prettify<{
    /**
     * The prepared transaction to estimate the gas for.
     */
    transaction: PreparedTransaction<any>;
} & ({
    /**
     * The account the transaction would be sent from.
     */
    account: Account;
    from?: never;
} | {
    account?: never;
    /**
     * The address the transaction would be sent from.
     */
    from?: string;
})>;
export type EstimateGasResult = bigint;
/**
 * Estimates the gas required to execute a transaction. The gas is returned as a `bigint` and in gwei units.
 * @param options - The options for estimating gas.
 * @returns A promise that resolves to the estimated gas as a bigint.
 * @transaction
 * @example
 * ```ts
 * import { estimateGas } from "thirdweb";
 * const gas = await estimateGas({
 *  transaction,
 * });
 * ```
 */
export declare function estimateGas(options: EstimateGasOptions): Promise<EstimateGasResult>;
//# sourceMappingURL=estimate-gas.d.ts.map