"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveAvatar = resolveAvatar;
const avatar_js_1 = require("../../utils/ens/avatar.js");
const withCache_js_1 = require("../../utils/promise/withCache.js");
const resolve_text_js_1 = require("./resolve-text.js");
/**
 * Resolves an ENS name to the avatar URL.
 * @param options - The options for resolving an ENS address.
 * @example
 * ```ts
 * import { resolveAvatar } from "thirdweb/extensions/ens";
 * const address = await resolveAvatar({
 *    client,
 *    name: "vitalik.eth",
 * });
 * ```
 * @extension ENS
 * @returns A promise that resolves to the avatar url, or null if not set.
 */
async function resolveAvatar(options) {
    const { client, name, resolverAddress, resolverChain } = options;
    return (0, withCache_js_1.withCache)(async () => {
        const record = await (0, resolve_text_js_1.resolveText)({
            client,
            key: "avatar",
            name,
            resolverAddress,
            resolverChain,
        });
        if (!record) {
            return null;
        }
        try {
            return (0, avatar_js_1.parseAvatarRecord)({ uri: record, client });
        }
        catch (e) {
            console.error("Error parsing avatar record", e);
            return null;
        }
    }, {
        cacheKey: `ens:avatar:${name}`,
        // 1min cache
        cacheTime: 60 * 1000,
    });
}
//# sourceMappingURL=resolve-avatar.js.map