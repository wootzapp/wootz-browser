"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodeInstall = void 0;
exports.module = module;
exports.install = install;
const encodeBytesOnInstall_js_1 = require("../encode/encodeBytesOnInstall.js");
const getOrDeployModule_js_1 = require("../../../common/getOrDeployModule.js");
const installPublishedModule_js_1 = require("../../../common/installPublishedModule.js");
const contractId = "RoyaltyERC721";
/**
 * Convenience function to add the RoyaltyERC721 module as a default module on a core contract.
 * @param params - The parameters for the module.
 * @returns - The module function.
 * @example
 * ```ts
 * import { RoyaltyERC721, deployModularContract } from "thirdweb/modules";
 *
 * const deployed = deployModularContract({
 *   client,
 *   chain,
 *   account,
 *   core: "ERC721",
 *   params: {
 *     name: "My Modular Contract",
 *   },
 *   modules: [
 *     RoyaltyERC721.module({
 *        royaltyRecipient: ...,
 *        royaltyBps: ...,
 *        transferValidator: ...,
 *     }),
 *   ],
 * });
 * ```
 * @module RoyaltyERC721
 */
function module(params) {
    return async (args) => {
        // deploys if needed
        const moduleContract = await (0, getOrDeployModule_js_1.getOrDeployModule)({
            account: args.account,
            chain: args.chain,
            client: args.client,
            contractId,
            publisher: params?.publisher,
        });
        return {
            module: moduleContract.address,
            data: (0, exports.encodeInstall)(params),
        };
    };
}
/**
 * Installs the RoyaltyERC721 module on a core contract.
 * @param options
 * @returns the transaction to install the module
 * @example
 * ```ts
 * import { RoyaltyERC721 } from "thirdweb/modules";
 *
 * const transaction  = RoyaltyERC721.install({
 *  contract: coreContract,
 *  account: account,
 *  params: {
 *     royaltyRecipient: ...,
 *     royaltyBps: ...,
 *     transferValidator: ...,
 *  },
 * });
 *
 * await sendTransaction({
 *  transaction,
 *  account,
 * });
 * ```
 * @module RoyaltyERC721
 */
function install(options) {
    return (0, installPublishedModule_js_1.installPublishedModule)({
        account: options.account,
        contract: options.contract,
        moduleName: contractId,
        moduleData: (0, exports.encodeInstall)(options.params),
        publisher: options.params?.publisher,
    });
}
/**
 * Encodes the install data for the RoyaltyERC721 module.
 * @param params - The parameters for the module.
 * @returns - The encoded data.
 * @module RoyaltyERC721
 */
exports.encodeInstall = encodeBytesOnInstall_js_1.encodeBytesOnInstallParams;
//# sourceMappingURL=install.js.map