"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Address = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_native_1 = require("react-native");
const index_js_1 = require("../../design-system/index.js");
const svgs_js_1 = require("../icons/svgs.js");
const RNImage_js_1 = require("./RNImage.js");
const text_js_1 = require("./text.js");
const Address = ({ account, theme, addressOrENS }) => {
    const [copySuccess, setCopySuccess] = (0, react_1.useState)(false);
    return ((0, jsx_runtime_1.jsxs)(react_native_1.TouchableOpacity, { style: styles.addressContainer, onPress: () => {
            react_native_1.Clipboard.setString(account.address);
            setCopySuccess(true);
            setTimeout(() => {
                setCopySuccess(false);
            }, 2500);
        }, children: [(0, jsx_runtime_1.jsx)(text_js_1.ThemedText, { theme: theme, type: "defaultSemiBold", children: addressOrENS }), (0, jsx_runtime_1.jsx)(RNImage_js_1.RNImage, { theme: theme, data: copySuccess ? svgs_js_1.CHECK : svgs_js_1.COPY_ICON, size: 15, color: copySuccess ? theme.colors.success : theme.colors.secondaryIconColor })] }));
};
exports.Address = Address;
const styles = react_native_1.StyleSheet.create({
    addressContainer: {
        flexDirection: "row",
        gap: index_js_1.spacing.sm,
        alignItems: "center",
    },
});
//# sourceMappingURL=Address.js.map