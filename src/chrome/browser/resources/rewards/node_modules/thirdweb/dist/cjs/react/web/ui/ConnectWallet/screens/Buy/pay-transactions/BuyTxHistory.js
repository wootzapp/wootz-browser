"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PayTxHistoryList = PayTxHistoryList;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_icons_1 = require("@radix-ui/react-icons");
const index_js_1 = require("../../../../../../core/design-system/index.js");
const Skeleton_js_1 = require("../../../../components/Skeleton.js");
const Spinner_js_1 = require("../../../../components/Spinner.js");
const basic_js_1 = require("../../../../components/basic.js");
const buttons_js_1 = require("../../../../components/buttons.js");
const text_js_1 = require("../../../../components/text.js");
const BuyTxHistoryButton_js_1 = require("./BuyTxHistoryButton.js");
const useBuyTransactionsToShow_js_1 = require("./useBuyTransactionsToShow.js");
/**
 * @internal
 */
function PayTxHistoryList(props) {
    const { pageIndex, setPageIndex, txInfosToShow, hidePagination, isLoading, pagination, } = (0, useBuyTransactionsToShow_js_1.useBuyTransactionsToShow)(props.client);
    const noTransactions = txInfosToShow.length === 0;
    return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { scrollY: true, flex: "column", fullHeight: true, style: {
            width: "100%",
            minHeight: "250px",
            maxHeight: "370px",
            paddingBottom: index_js_1.spacing.lg,
        }, children: [(0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "column", gap: "xs", expand: true, children: [noTransactions && !isLoading && ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "column", gap: "md", center: "both", color: "secondaryText", style: {
                            minHeight: "250px",
                        }, children: [(0, jsx_runtime_1.jsx)(react_icons_1.CrossCircledIcon, { width: index_js_1.iconSize.xl, height: index_js_1.iconSize.xl }), (0, jsx_runtime_1.jsx)(text_js_1.Text, { children: "No Transactions" })] })), noTransactions && isLoading && ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { flex: "row", center: "both", style: {
                            minHeight: "250px",
                        }, children: (0, jsx_runtime_1.jsx)(Spinner_js_1.Spinner, { size: "xl", color: "accentText" }) })), txInfosToShow.length > 0 && ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { animate: "fadein", flex: "column", gap: "xs", children: txInfosToShow.map((txInfo) => {
                            return ((0, jsx_runtime_1.jsx)(BuyTxHistoryButton_js_1.BuyTxHistoryButton, { txInfo: txInfo, client: props.client, onClick: () => {
                                    props.onSelectTx(txInfo);
                                } }, txInfo.type === "swap"
                                ? txInfo.status.source?.transactionHash
                                : txInfo.status.intentId));
                        }) })), isLoading && txInfosToShow.length > 0 && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(Skeleton_js_1.Skeleton, { width: "100%", height: BuyTxHistoryButton_js_1.BuyTxHistoryButtonHeight }), (0, jsx_runtime_1.jsx)(Skeleton_js_1.Skeleton, { width: "100%", height: BuyTxHistoryButton_js_1.BuyTxHistoryButtonHeight }), (0, jsx_runtime_1.jsx)(Skeleton_js_1.Skeleton, { width: "100%", height: BuyTxHistoryButton_js_1.BuyTxHistoryButtonHeight })] }))] }), pagination && !hidePagination && ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { py: "md", children: (0, jsx_runtime_1.jsxs)("div", { style: {
                        display: "grid",
                        gridTemplateColumns: "1fr 1fr",
                        gap: index_js_1.spacing.sm,
                    }, children: [(0, jsx_runtime_1.jsxs)(buttons_js_1.Button, { variant: "outline", gap: "xs", disabled: pageIndex === 0, "data-disabled": pageIndex === 0, style: {
                                fontSize: index_js_1.fontSize.sm,
                                paddingBlock: index_js_1.spacing.sm,
                            }, onClick: () => {
                                setPageIndex((prev) => prev - 1);
                            }, children: [(0, jsx_runtime_1.jsx)(react_icons_1.ArrowRightIcon, { width: index_js_1.iconSize.sm, height: index_js_1.iconSize.sm, style: {
                                        transform: "rotate(180deg)",
                                    } }), "Prev"] }), (0, jsx_runtime_1.jsxs)(buttons_js_1.Button, { variant: "outline", gap: "xs", disabled: !pagination.hasNextPage, "data-disabled": !pagination.hasNextPage, style: {
                                fontSize: index_js_1.fontSize.sm,
                                paddingBlock: index_js_1.spacing.sm,
                            }, onClick: () => {
                                setPageIndex((prev) => prev + 1);
                            }, children: ["Next", (0, jsx_runtime_1.jsx)(react_icons_1.ArrowRightIcon, { width: index_js_1.iconSize.sm, height: index_js_1.iconSize.sm })] })] }) }))] }));
}
//# sourceMappingURL=BuyTxHistory.js.map