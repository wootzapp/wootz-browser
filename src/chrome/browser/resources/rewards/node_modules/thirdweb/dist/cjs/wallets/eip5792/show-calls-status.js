"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.showCallsStatus = showCallsStatus;
const coinbaseWebSDK_js_1 = require("../coinbase/coinbaseWebSDK.js");
const index_js_1 = require("../in-app/core/wallet/index.js");
const index_js_2 = require("../injected/index.js");
const index_js_3 = require("../smart/index.js");
const controller_js_1 = require("../wallet-connect/controller.js");
/**
 * Request a wallet to show the status of a bundle of calls.
 *
 * Note: This function is dependent on the wallet's support for EIP-5792 and could fail. It is currently not supported with in-app or smart wallets.
 *
 * @param {ShowCallsStatusOptions} options
 * @param {Wallet} options.wallet - The wallet to show the status of the calls for.
 * @param {WalletSendCallsId} options.bundleId - The bundle ID of the calls to show the status of.
 * @returns {Promise<void>}
 *
 * @beta
 * @example
 * ```ts
 *  import { createThirdwebClient } from "thirdweb";
 *  import { showCallsStatus } from "thirdweb/wallets/eip5792";
 *
 *  const client = createThirdwebClient({ clientId: ... });
 *
 *  const bundleId = await sendCalls({ wallet, client, calls });
 *  await showCallsStatus({ wallet, bundleId });
 * ```
 * @extension EIP5792
 * @internal
 */
async function showCallsStatus({ wallet, bundleId, }) {
    if ((0, index_js_3.isSmartWallet)(wallet) ||
        (0, index_js_1.isInAppWallet)(wallet) ||
        (0, controller_js_1.isWalletConnect)(wallet)) {
        throw new Error("showCallsStatus is currently unsupported for this wallet type");
    }
    if ((0, coinbaseWebSDK_js_1.isCoinbaseSDKWallet)(wallet)) {
        const { coinbaseSDKWalletShowCallsStatus } = await Promise.resolve().then(() => require("../coinbase/coinbaseWebSDK.js"));
        await coinbaseSDKWalletShowCallsStatus({ wallet, bundleId });
        return;
    }
    // Default to injected wallet
    const provider = (0, index_js_2.getInjectedProvider)(wallet.id);
    try {
        return await provider.request({
            method: "wallet_showCallsStatus",
            params: [bundleId],
        });
    }
    catch (error) {
        if (/unsupport|not support/i.test(error.message)) {
            throw new Error(`${wallet.id} does not support wallet_showCallsStatus, reach out to them directly to request EIP-5792 support.`);
        }
        throw error;
    }
}
//# sourceMappingURL=show-calls-status.js.map