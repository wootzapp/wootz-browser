"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useProfiles = useProfiles;
const react_query_1 = require("@tanstack/react-query");
const is_ecosystem_wallet_js_1 = require("../../../../wallets/ecosystem/is-ecosystem-wallet.js");
const profiles_js_1 = require("../../../../wallets/in-app/core/wallet/profiles.js");
const useAdminAccount_js_1 = require("../wallets/useAdminAccount.js");
/**
 * Retrieves all linked profiles for the current wallet.
 *
 * @returns A React Query result containing the linked profiles for the connected in-app wallet.
 *
 * @note This hook will only run if the connected wallet supports multi-auth (in-app wallets).
 *
 * @example
 * ```jsx
 * import { useProfiles } from "thirdweb/react";
 *
 * const { data: profiles } = useProfiles();
 *
 * console.log("Type:", profiles[0].type); // "discord"
 * console.log("Email:", profiles[0].details.email); // "john.doe@example.com"
 * ```
 *
 * @wallet
 */
function useProfiles() {
    const wallet = (0, useAdminAccount_js_1.useAdminWallet)();
    return (0, react_query_1.useQuery)({
        queryKey: ["profiles", wallet?.id],
        enabled: !!wallet && (wallet.id === "inApp" || (0, is_ecosystem_wallet_js_1.isEcosystemWallet)(wallet)),
        queryFn: async () => {
            return (0, profiles_js_1.getProfiles)(wallet);
        },
    });
}
//# sourceMappingURL=useProfiles.js.map