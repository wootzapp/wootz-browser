"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCapabilities = useCapabilities;
const react_query_1 = require("@tanstack/react-query");
const get_capabilities_js_1 = require("../../../../wallets/eip5792/get-capabilities.js");
const useActiveWallet_js_1 = require("./useActiveWallet.js");
/**
 * A hook to get the current wallet's capabilities according to [EIP-5792](https://eips.ethereum.org/EIPS/eip-5792).
 *
 * @note This function is dependent on the wallet's support for EIP-5792, but will not throw.
 * **The returned object contains a `message` field detailing any issues with the wallet's support for EIP-5792.**
 *
 * @returns a React Query object.
 * @beta
 * @example
 * ```tsx
 * import { useCapabilities } from "thirdweb/react";
 * const { data: capabilities, isLoading } = useCapabilities();
 * ```
 * @extension EIP5792
 */
function useCapabilities(options) {
    const wallet = (0, useActiveWallet_js_1.useActiveWallet)();
    return (0, react_query_1.useQuery)({
        queryKey: [
            "getCapabilities",
            wallet?.getChain()?.id || -1,
            wallet?.id,
        ],
        queryFn: async () => {
            if (!wallet) {
                return {
                    message: "Can't get capabilities, no wallet connected",
                };
            }
            return (0, get_capabilities_js_1.getCapabilities)({ wallet });
        },
        retry: false,
        ...options?.queryOptions,
    });
}
//# sourceMappingURL=useCapabilities.js.map