import type { Chain } from "../../chains/types.js";
import type { ThirdwebClient } from "../../client/client.js";
import type { DeployContractfromDeployMetadataOptions } from "./deploy-published.js";
/**
 * @internal
 */
type DeployTransactionType = "infra" | "implementation" | "module" | "extension" | "proxy";
/**
 * @internal
 */
type DeployTransactionResult = {
    type: DeployTransactionType;
    contractId: string;
};
/**
 * @internal
 */
export declare function getRequiredTransactions(options: Omit<DeployContractfromDeployMetadataOptions, "account" | "initializeParams">): Promise<DeployTransactionResult[]>;
export declare function getAllDefaultConstructorParamsForImplementation(args: {
    chain: Chain;
    client: ThirdwebClient;
}): Promise<{
    trustedForwarder: string;
    nativeTokenWrapper: string;
}>;
export {};
//# sourceMappingURL=get-required-transactions.d.ts.map