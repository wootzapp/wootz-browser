"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.signTransaction = signTransaction;
const domains_js_1 = require("../../../../../utils/domains.js");
const fetch_js_1 = require("../../../../../utils/fetch.js");
const json_js_1 = require("../../../../../utils/json.js");
const get_auth_token_js_1 = require("../get-auth-token.js");
async function signTransaction({ client, ecosystem, payload, }) {
    console.log("payload", payload);
    const clientFetch = (0, fetch_js_1.getClientFetch)(client, ecosystem);
    const authToken = await (0, get_auth_token_js_1.getAuthToken)(client, ecosystem);
    const response = await clientFetch(`${(0, domains_js_1.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/sign-transaction`, {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            "x-thirdweb-client-id": client.clientId,
            Authorization: `Bearer embedded-wallet-token:${authToken}`,
        },
        body: (0, json_js_1.stringify)({
            transactionPayload: payload,
        }),
    });
    if (!response.ok) {
        throw new Error("Failed to sign transaction");
    }
    const signedTransaction = (await response.json());
    return signedTransaction.signature;
}
//# sourceMappingURL=sign-transaction.enclave.js.map