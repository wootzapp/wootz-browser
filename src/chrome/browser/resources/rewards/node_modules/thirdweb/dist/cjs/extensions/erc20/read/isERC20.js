"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isERC20 = isERC20;
const name_js_1 = require("../../common/__generated__/IContractMetadata/read/name.js");
const symbol_js_1 = require("../../common/__generated__/IContractMetadata/read/symbol.js");
const allowance_js_1 = require("../__generated__/IERC20/read/allowance.js");
const balanceOf_js_1 = require("../__generated__/IERC20/read/balanceOf.js");
const decimals_js_1 = require("../__generated__/IERC20/read/decimals.js");
const totalSupply_js_1 = require("../__generated__/IERC20/read/totalSupply.js");
const approve_js_1 = require("../__generated__/IERC20/write/approve.js");
const transfer_js_1 = require("../__generated__/IERC20/write/transfer.js");
const transferFrom_js_1 = require("../__generated__/IERC20/write/transferFrom.js");
/**
 * Check if a contract is an ERC20 token.
 * @param options - The transaction options.
 * @returns A boolean indicating whether the contract is an ERC20 token.
 * @extension ERC20
 * @example
 * ```ts
 * import { isERC20 } from "thirdweb/extensions/erc20";
 * const result = await isERC20({ contract });
 * ```
 */
function isERC20(availableSelectors) {
    // there is no trustworthy way to check if a contract is ERC20 via ERC165, so we do this manually.
    // see: https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3575
    // see: https://ethereum.org/en/developers/docs/standards/tokens/erc-20/
    return [
        (0, name_js_1.isNameSupported)(availableSelectors),
        (0, symbol_js_1.isSymbolSupported)(availableSelectors),
        (0, decimals_js_1.isDecimalsSupported)(availableSelectors),
        (0, totalSupply_js_1.isTotalSupplySupported)(availableSelectors),
        (0, balanceOf_js_1.isBalanceOfSupported)(availableSelectors),
        (0, transfer_js_1.isTransferSupported)(availableSelectors),
        (0, transferFrom_js_1.isTransferFromSupported)(availableSelectors),
        (0, approve_js_1.isApproveSupported)(availableSelectors),
        (0, allowance_js_1.isAllowanceSupported)(availableSelectors),
    ].every(Boolean);
}
//# sourceMappingURL=isERC20.js.map