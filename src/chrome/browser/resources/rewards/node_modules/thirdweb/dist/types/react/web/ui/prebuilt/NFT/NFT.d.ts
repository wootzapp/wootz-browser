import type { ThirdwebContract } from "../../../../../contract/contract.js";
import type { NFT as NFTType } from "../../../../../utils/nft/parseNft.js";
import type { MediaRendererProps } from "../../MediaRenderer/types.js";
/**
 * Props for the <NFT> component
 * @component
 */
type NFTProviderProps = {
    /**
     * The NFT contract address. Accepts both ERC721 and ERC1155 contracts
     */
    contract: ThirdwebContract;
    /**
     * The tokenId whose info you want to display
     */
    tokenId: bigint;
};
/**
 * @internal
 */
export declare const NFTProviderContext: import("react").Context<NFTProviderProps | undefined>;
/**
 * A React context provider component that supplies NFT-related data to its child components.
 *
 * This component serves as a wrapper around the `NFTProviderContext.Provider` and passes
 * the provided NFT data down to all of its child components through the context API.
 *
 *
 * @component
 * @param {React.PropsWithChildren<NFTProviderProps>} props - The props for the NFT provider
 *
 * @example
 * ```tsx
 * import { getContract } from "thirdweb";
 * import { NFT } from "thirdweb/react";
 *
 * const contract = getContract({
 *   address: "0x...",
 *   chain: ethereum,
 *   client: yourThirdwebClient,
 * });
 *
 * <NFT contract={contract} tokenId={0n}>
 *   <Suspense fallback={"Loading media..."}>
 *     <NFT.Media />
 *     <NFT.Description />
 *   </Suspense>
 * </NFT>
 * ```
 */
export declare function NFT(props: React.PropsWithChildren<NFTProviderProps>): import("react/jsx-runtime.js").JSX.Element;
export declare namespace NFT {
    var Media: (props: NFTMediaProps) => import("react/jsx-runtime.js").JSX.Element;
    var Name: (props: {
        className?: string;
        style?: React.CSSProperties;
    }) => import("react/jsx-runtime.js").JSX.Element;
    var Description: (props: {
        className: string;
        style: React.CSSProperties;
    }) => import("react/jsx-runtime.js").JSX.Element;
}
/**
 * @component
 * The props for the <NFT.Media /> component
 * It is similar to the [`MediaRendererProps`](https://portal.thirdweb.com/references/typescript/v5/MediaRendererProps)
 * (excluding `src`, `poster` and `client`) that you can
 * use to style the NFT.Media
 */
export type NFTMediaProps = Omit<MediaRendererProps, "src" | "poster" | "client">;
/**
 * @internal
 */
export declare function getNFTInfo(options: NFTProviderProps): Promise<NFTType>;
export {};
//# sourceMappingURL=NFT.d.ts.map