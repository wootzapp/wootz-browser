import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useMemo } from "react";
import { getCachedChain } from "../../../../../../../chains/utils.js";
import { formatNumber } from "../../../../../../../utils/formatNumber.js";
import { useChainName } from "../../../../../../core/hooks/others/useChainQuery.js";
import { Container } from "../../../../components/basic.js";
import { Text } from "../../../../components/text.js";
import { PayTokenIcon } from "../PayTokenIcon.js";
export function TokenInfoRow(props) {
    const chainObj = useMemo(() => getCachedChain(props.chainId), [props.chainId]);
    const { name } = useChainName(chainObj);
    return (_jsxs(Container, { flex: "row", style: {
            justifyContent: "space-between",
        }, children: [_jsx(Text, { size: "sm", children: props.label }), _jsxs(Container, { flex: "column", gap: "xxs", style: {
                    alignItems: "flex-end",
                }, children: [_jsxs(Container, { flex: "row", gap: "xs", center: "y", children: [_jsx(PayTokenIcon, { chain: chainObj, size: "sm", token: {
                                    address: props.tokenAddress,
                                }, client: props.client }), _jsxs(Text, { color: "primaryText", children: [formatNumber(Number(props.tokenAmount), 6), " ", props.tokenSymbol] })] }), _jsx(Text, { size: "sm", children: name })] })] }));
}
//# sourceMappingURL=TokenInfoRow.js.map