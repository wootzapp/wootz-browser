import type { Chain } from "../../chains/types.js";
import type { ThirdwebClient } from "../../client/client.js";
import type { Account } from "../../wallets/interfaces/wallet.js";
/**
 * @extension DEPLOY
 */
export type DeployPublishedContractOptions = {
    client: ThirdwebClient;
    chain: Chain;
    account: Account;
    contractId: string;
    contractParams: unknown[];
    publisher?: string;
    version?: string;
    implementationConstructorParams?: unknown[];
};
/**
 * Deploy an instance of a published contract on a given chain
 * @param options - the deploy options
 * @returns a promise that resolves to the deployed contract address
 * @example
 * ```ts
 * import { deployPublishedContract } from "thirdweb/deploys";
 *
 * const address = await deployedPublishedContract({
 *   client,
 *   chain,
 *   account,
 *   contractId: "MyPublishedContract",
 *   contractParams: [...],
 *   publisher: "0x...",
 * });
 * ```
 * @extension DEPLOY
 */
export declare function deployPublishedContract(options: DeployPublishedContractOptions): Promise<string>;
//# sourceMappingURL=deploy-published.d.ts.map