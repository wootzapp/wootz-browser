"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.signTypedData = signTypedData;
const viem_1 = require("viem");
const parseTypedData_js_1 = require("./helpers/parseTypedData.js");
const sign_js_1 = require("./sign.js");
const signature_to_hex_js_1 = require("./signature-to-hex.js");
/**
 * Signs a typed data object with a given private key according to EIP712.
 * @param options The typed data is passed within options alongside the private key
 * @param options.privateKey The private key to sign the typed data with
 * @returns The signature as a hex string
 * @example
 * ```ts
 * import { signTypedData } from "thirdweb/utils";
 * signTypedData({
 *   privateKey: "0x...",
 *   ...typedData
 * });
 * ```
 * @utils
 */
function signTypedData(options) {
    const { privateKey, ...typedData } = options;
    const parsedTypeData = (0, parseTypedData_js_1.parseTypedData)(typedData);
    const signature = (0, sign_js_1.sign)({
        hash: (0, viem_1.hashTypedData)(parsedTypeData), // TODO: Implement native hashTypedData
        privateKey,
    });
    return (0, signature_to_hex_js_1.signatureToHex)(signature);
}
//# sourceMappingURL=sign-typed-data.js.map