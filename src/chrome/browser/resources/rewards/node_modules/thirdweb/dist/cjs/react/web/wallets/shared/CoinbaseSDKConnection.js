"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const ConnectingScreen_js_1 = require("./ConnectingScreen.js");
/**
 * @internal
 */
function CoinbaseSDKWalletConnectUI(props) {
    const { onBack, done, wallet, walletInfo, onGetStarted, locale } = props;
    const [errorConnecting, setErrorConnecting] = (0, react_1.useState)(false);
    const connect = (0, react_1.useCallback)(() => {
        setErrorConnecting(false);
        wallet
            .connect({
            client: props.client,
            chain: props.chain,
        })
            .then(() => {
            done();
        })
            .catch((e) => {
            console.error(e);
            setErrorConnecting(true);
        });
    }, [props.client, wallet, props.chain, done]);
    const scanStarted = (0, react_1.useRef)(false);
    (0, react_1.useEffect)(() => {
        if (scanStarted.current) {
            return;
        }
        scanStarted.current = true;
        connect();
    }, [connect]);
    return ((0, jsx_runtime_1.jsx)(ConnectingScreen_js_1.ConnectingScreen, { locale: {
            getStartedLink: locale.getStartedLink,
            instruction: locale.connectionScreen.instruction,
            tryAgain: locale.connectionScreen.retry,
            inProgress: locale.connectionScreen.inProgress,
            failed: locale.connectionScreen.failed,
        }, onBack: onBack, walletName: walletInfo.name, walletId: wallet.id, errorConnecting: errorConnecting, onRetry: connect, onGetStarted: onGetStarted, client: props.client, size: props.size }));
}
exports.default = CoinbaseSDKWalletConnectUI;
//# sourceMappingURL=CoinbaseSDKConnection.js.map