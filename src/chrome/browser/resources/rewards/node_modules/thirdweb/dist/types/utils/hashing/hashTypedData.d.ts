import { type TypedData, type TypedDataDefinition } from "viem";
import { type Hex } from "../encoding/hex.js";
type MessageTypeProperty = {
    name: string;
    type: string;
};
export type HashTypedDataParams<typedData extends TypedData | Record<string, unknown> = TypedData, primaryType extends keyof typedData | "EIP712Domain" = keyof typedData> = TypedDataDefinition<typedData, primaryType>;
/**
 * @internal
 */
export declare function hashTypedData<const typedData extends TypedData | Record<string, unknown>, primaryType extends keyof typedData | "EIP712Domain">(parameters: HashTypedDataParams<typedData, primaryType>): Hex;
export declare function encodeType({ primaryType, types, }: {
    primaryType: string;
    types: Record<string, MessageTypeProperty[]>;
}): string;
export {};
//# sourceMappingURL=hashTypedData.d.ts.map