import type { BaseTransactionOptions } from "../../../transaction/types.js";
import { encodeBytesBeforeMintERC721Params } from "../__generated__/ClaimableERC721/encode/encodeBytesBeforeMintERC721.js";
type MintParams = {
    to: string;
    quantity: string | number;
};
/**
 * Mints ERC721 tokens to a specified address via a ClaimableERC721 module.
 * @param options The options for minting tokens.
 * @returns A transaction to mint tokens.
 * @example
 * ```typescript
 * import { ClaimableERC721 } from "thirdweb/modules";
 *
 * const transaction = ClaimableERC721.mint({
 *   contract,
 *   to: "0x...", // Address to mint tokens to
 *   quantity: 2, // Amount of tokens to mint
 * });
 *
 * // Send the transaction
 * await sendTransaction({ transaction, account });
 * ```
 * @modules ClaimableERC721
 */
export declare function mint(options: BaseTransactionOptions<MintParams>): import("../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("viem").AbiFunction, import("../../../transaction/prepare-transaction.js").PrepareTransactionOptions>;
export declare const encodeMintParams: typeof encodeBytesBeforeMintERC721Params;
export {};
//# sourceMappingURL=mint.d.ts.map