"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.installPublishedModule = installPublishedModule;
const bootstrap_js_1 = require("../../../contract/deployment/utils/bootstrap.js");
const installModule_js_1 = require("../__generated__/IModularCore/write/installModule.js");
/**
 * Install a published module on a modular contract
 * @param options - The options for installing a published module
 * @returns A prepared transaction to send
 * @modules
 * @example
 * ```ts
 * import { installPublishedModule } from "thirdweb/modules";
 * const transaction = installPublishedModule({
 *  client,
 *  chain,
 *  account,
 *  contract,
 *  moduleName: "MyModule",
 *  publisherAddress: "0x...",
 * });
 * await sendTransaction({ transaction, account });
 * ```
 */
function installPublishedModule(options) {
    const { account, contract, moduleName, constructorParams, publisher, moduleData, } = options;
    return (0, installModule_js_1.installModule)({
        contract,
        asyncParams: async () => {
            const deployedModule = await (0, bootstrap_js_1.getOrDeployInfraForPublishedContract)({
                chain: contract.chain,
                client: contract.client,
                account,
                contractId: moduleName,
                constructorParams,
                publisher,
            });
            return {
                moduleContract: deployedModule.implementationContract.address,
                data: moduleData || "0x",
            };
        },
    });
}
//# sourceMappingURL=installPublishedModule.js.map