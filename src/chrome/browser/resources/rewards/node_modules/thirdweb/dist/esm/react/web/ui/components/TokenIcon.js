"use client";
import { jsx as _jsx } from "react/jsx-runtime";
import { useMemo } from "react";
import { NATIVE_TOKEN_ADDRESS } from "../../../../constants/addresses.js";
import { iconSize } from "../../../core/design-system/index.js";
import { useChainIconUrl } from "../../../core/hooks/others/useChainQuery.js";
import { genericTokenIcon } from "../../../core/utils/walletIcon.js";
import { isNativeToken, } from "../ConnectWallet/screens/nativeToken.js";
import { Img } from "./Img.js";
/**
 * @internal
 */
export function TokenIcon(props) {
    const chainIconQuery = useChainIconUrl(props.chain);
    const tokenImage = useMemo(() => {
        if (isNativeToken(props.token) ||
            props.token.address === NATIVE_TOKEN_ADDRESS) {
            return chainIconQuery.url;
        }
        return props.token.icon;
    }, [props.token, chainIconQuery.url]);
    return (_jsx(Img, { src: tokenImage || "", width: iconSize[props.size], height: iconSize[props.size], fallbackImage: genericTokenIcon, client: props.client }));
}
//# sourceMappingURL=TokenIcon.js.map