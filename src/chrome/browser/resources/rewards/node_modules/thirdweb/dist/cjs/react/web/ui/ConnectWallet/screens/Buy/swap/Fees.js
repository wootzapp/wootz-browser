"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwapFees = SwapFees;
exports.FiatFees = FiatFees;
const jsx_runtime_1 = require("react/jsx-runtime");
const formatNumber_js_1 = require("../../../../../../../utils/formatNumber.js");
const Spacer_js_1 = require("../../../../components/Spacer.js");
const basic_js_1 = require("../../../../components/basic.js");
const text_js_1 = require("../../../../components/text.js");
/**
 * @internal
 */
function SwapFees(props) {
    return ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { flex: "column", gap: "xs", style: {
            alignItems: "flex-start",
        }, children: props.quote.processingFees.map((fee) => {
            const feeAmount = (0, formatNumber_js_1.formatNumber)(Number(fee.amount), 6);
            return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "row", gap: "xxs", children: [(0, jsx_runtime_1.jsxs)(text_js_1.Text, { color: "primaryText", size: "sm", children: [feeAmount === 0 ? "~" : "", feeAmount, " ", fee.token.symbol] }), (0, jsx_runtime_1.jsxs)(text_js_1.Text, { color: "secondaryText", size: "sm", children: ["($", (fee.amountUSDCents / 100).toFixed(2), ")"] })] }, `${fee.token.chainId}_${fee.token.tokenAddress}_${feeAmount}`));
        }) }));
}
/**
 * @internal
 */
function FiatFees(props) {
    return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "column", gap: "xs", children: [(0, jsx_runtime_1.jsxs)("div", { style: {
                    display: "flex",
                    justifyContent: "space-between",
                }, children: [(0, jsx_runtime_1.jsx)(text_js_1.Text, { inline: true, color: "secondaryText", children: "Amount" }), (0, jsx_runtime_1.jsxs)(text_js_1.Text, { color: "primaryText", inline: true, children: [(0, formatNumber_js_1.formatNumber)(Number(props.quote.fromCurrency.amount), 2), props.quote.fromCurrency.currencySymbol] })] }), props.quote.processingFees.map((fee, i) => {
                const feeAmount = (0, formatNumber_js_1.formatNumber)(Number(fee.amount), 6);
                return ((0, jsx_runtime_1.jsxs)("div", { style: {
                        display: "flex",
                        justifyContent: "space-between",
                    }, children: [(0, jsx_runtime_1.jsx)(text_js_1.Text, { inline: true, color: "secondaryText", children: fee.feeType === "NETWORK" ? "Network Fee" : "Processing Fee" }), (0, jsx_runtime_1.jsxs)(text_js_1.Text, { color: "primaryText", inline: true, children: [feeAmount === 0 ? "~" : "", feeAmount, " ", fee.currencySymbol] })] }, i));
            }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "xxs" }), (0, jsx_runtime_1.jsx)(basic_js_1.Line, {}), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "xxs" }), (0, jsx_runtime_1.jsxs)("div", { style: {
                    display: "flex",
                    justifyContent: "space-between",
                }, children: [(0, jsx_runtime_1.jsx)(text_js_1.Text, { inline: true, color: "secondaryText", children: "Total" }), (0, jsx_runtime_1.jsxs)(text_js_1.Text, { color: "primaryText", inline: true, children: [(0, formatNumber_js_1.formatNumber)(Number(props.quote.fromCurrencyWithFees.amount), 6), props.quote.fromCurrencyWithFees.currencySymbol] })] })] }));
}
//# sourceMappingURL=Fees.js.map