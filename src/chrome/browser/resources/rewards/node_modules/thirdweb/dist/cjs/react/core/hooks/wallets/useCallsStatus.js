"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCallsStatus = useCallsStatus;
const react_query_1 = require("@tanstack/react-query");
const get_calls_status_js_1 = require("../../../../wallets/eip5792/get-calls-status.js");
const useActiveWallet_js_1 = require("./useActiveWallet.js");
/**
 * A hook to get a call bundle's current status according to [EIP-5792](https://eips.ethereum.org/EIPS/eip-5792).
 *
 * @note This function is dependent on the wallet's support for EIP-5792 and could throw an error if it's not supported.
 *
 * @returns a React Query object.
 * @beta
 * @example
 * ```tsx
 * import { useCallsStatus } from "thirdweb/react";
 * const { data: status, isLoading } = useCallsStatus({ bundleId, client });
 * ```
 * @extension EIP5792
 */
function useCallsStatus(options) {
    const { client, bundleId } = options;
    const wallet = (0, useActiveWallet_js_1.useActiveWallet)();
    return (0, react_query_1.useQuery)({
        queryKey: [
            "getCapabilities",
            wallet?.getChain()?.id || -1,
            wallet?.id,
        ],
        queryFn: async () => {
            if (!wallet) {
                throw new Error("Failed to get calls status, no wallet connected");
            }
            return (0, get_calls_status_js_1.getCallsStatus)({ wallet, client, bundleId });
        },
        retry: false,
        enabled: !!bundleId && wallet !== undefined,
        ...options.queryOptions,
    });
}
//# sourceMappingURL=useCallsStatus.js.map