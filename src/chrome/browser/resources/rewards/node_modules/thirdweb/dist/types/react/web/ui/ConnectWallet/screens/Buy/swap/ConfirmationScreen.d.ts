import type { Chain } from "../../../../../../../chains/types.js";
import type { ThirdwebClient } from "../../../../../../../client/client.js";
import type { BuyWithCryptoQuote } from "../../../../../../../pay/buyWithCrypto/getQuote.js";
import type { ERC20OrNativeToken } from "../../nativeToken.js";
import type { PayerInfo } from "../types.js";
/**
 * @internal
 */
export declare function SwapConfirmationScreen(props: {
    title: string;
    onBack?: () => void;
    client: ThirdwebClient;
    quote: BuyWithCryptoQuote;
    setSwapTxHash: (txHash: string) => void;
    onTryAgain: () => void;
    toChain: Chain;
    toAmount: string;
    toTokenSymbol: string;
    fromChain: Chain;
    toToken: ERC20OrNativeToken;
    fromAmount: string;
    fromToken: ERC20OrNativeToken;
    fromTokenSymbol: string;
    isFiatFlow: boolean;
    payer: PayerInfo;
}): import("react/jsx-runtime.js").JSX.Element;
export declare const ConnectorLine: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme;
    as?: React.ElementType;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
//# sourceMappingURL=ConfirmationScreen.d.ts.map