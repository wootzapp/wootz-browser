"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PayTokenIcon = PayTokenIcon;
const jsx_runtime_1 = require("react/jsx-runtime");
const address_js_1 = require("../../../../../../utils/address.js");
const TokenIcon_js_1 = require("../../../components/TokenIcon.js");
const nativeToken_js_1 = require("../nativeToken.js");
const useSwapSupportedChains_js_1 = require("./swap/useSwapSupportedChains.js");
// This is a temporary solution to get the token icon working for ERC20 tokens
// TODO: The proper solutioon is to include the token icon in the quotes / status response objects, currently it is missing.
function PayTokenIcon(props) {
    const supportedDestinationsQuery = (0, useSwapSupportedChains_js_1.useBuySupportedDestinations)(props.client);
    const token = props.token;
    const tokenIcon = !(0, nativeToken_js_1.isNativeToken)(token)
        ? supportedDestinationsQuery.data
            ?.find((c) => c.chain.id === props.chain.id)
            ?.tokens.find((t) => (0, address_js_1.getAddress)(t.address) === (0, address_js_1.getAddress)(token.address))?.icon
        : undefined;
    return ((0, jsx_runtime_1.jsx)(TokenIcon_js_1.TokenIcon, { token: (0, nativeToken_js_1.isNativeToken)(token)
            ? { nativeToken: true }
            : {
                address: token.address,
                icon: token.icon || tokenIcon,
            }, chain: props.chain, client: props.client, size: props.size }));
}
//# sourceMappingURL=PayTokenIcon.js.map