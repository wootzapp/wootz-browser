import { getOrDeployInfraContract } from "../../../contract/deployment/utils/bootstrap.js";
import { getDeployedInfraContract } from "../../../contract/deployment/utils/infra.js";
/**
 * Gets or deploys a module implementation contract.
 * @param options - The options to use.
 * @returns The module.
 * @modules
 *
 * @example
 * ```ts
 * import { getOrDeployModule } from "thirdweb/modules";
 *
 * const module = await getOrDeployModule({
 *   client,
 *   chain,
 *   account,
 *   contractId,
 *   publisher,
 * });
 * ```
 */
export async function getOrDeployModule(options) {
    const { client, chain, account, contractId, publisher } = options;
    const contract = await getOrDeployInfraContract({
        client,
        chain,
        account,
        contractId,
        publisher,
    });
    return contract;
}
/**
 * Gets a deployed module implementation contract.
 * @param options - The options to use.
 * @returns The module.
 * @modules
 *
 * @example
 * ```ts
 * import { getDeployedModule } from "thirdweb/modules";
 *
 * const module = await getDeployedModule({
 *   client,
 *   chain,
 *   contractId,
 *   publisher,
 * });
 * ```
 */
export async function getDeployedModule(options) {
    const { client, chain, contractId, publisher } = options;
    return getDeployedInfraContract({
        client,
        chain,
        contractId,
        publisher,
    });
}
//# sourceMappingURL=getOrDeployModule.js.map