import { fetchPublishedContractMetadata } from "../../contract/deployment/publisher.js";
import { computeCreate2FactoryAddress } from "../../contract/deployment/utils/create-2-factory.js";
import { encodeAbiParameters } from "../abi/encodeAbiParameters.js";
import { normalizeFunctionParams } from "../abi/normalizeFunctionParams.js";
import { ensureBytecodePrefix } from "../bytecode/prefix.js";
import { getInitBytecodeWithSalt } from "./get-init-bytecode-with-salt.js";
/**
 * @internal
 */
export async function computeDeploymentInfoFromContractId(args) {
    const { client, chain, contractId, constructorParams, salt } = args;
    const contractMetadata = await fetchPublishedContractMetadata({
        client,
        contractId,
        publisher: args.publisher,
        version: args.version,
    });
    return computeDeploymentInfoFromMetadata({
        client,
        chain,
        contractMetadata,
        constructorParams,
        salt,
    });
}
/**
 * @internal
 */
export async function computeDeploymentInfoFromMetadata(args) {
    return computeDeploymentInfoFromBytecode({
        client: args.client,
        chain: args.chain,
        abi: args.contractMetadata.abi,
        bytecode: args.contractMetadata.bytecode,
        constructorParams: args.constructorParams,
        salt: args.salt,
    });
}
export async function computeDeploymentInfoFromBytecode(args) {
    const { client, chain, constructorParams, salt } = args;
    const create2FactoryAddress = await computeCreate2FactoryAddress({
        client,
        chain,
    });
    const bytecode = ensureBytecodePrefix(args.bytecode);
    const constructorAbi = args.abi.find((abi) => abi.type === "constructor");
    const encodedArgs = encodeAbiParameters(constructorAbi?.inputs ?? [], normalizeFunctionParams(constructorAbi, constructorParams));
    const initBytecodeWithsalt = getInitBytecodeWithSalt({
        bytecode,
        encodedArgs,
        salt,
    });
    return {
        bytecode,
        initBytecodeWithsalt,
        encodedArgs,
        create2FactoryAddress,
    };
}
//# sourceMappingURL=compute-published-contract-deploy-info.js.map