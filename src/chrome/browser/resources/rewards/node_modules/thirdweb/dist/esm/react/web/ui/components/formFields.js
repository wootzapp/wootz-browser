import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Spacer } from "./Spacer.js";
import { InputButton } from "./buttons.js";
import { Input, InputContainer, Label } from "./formElements.js";
import { Text } from "./text.js";
/**
 * @internal
 */
export const FormFieldWithIconButton = (props) => {
    const errorEl = (_jsxs("div", { style: {
            opacity: props.error ? 1 : 0,
            transition: "opacity 0.2s ease",
        }, children: [_jsx(Spacer, { y: "sm" }), _jsxs(Text, { color: "danger", size: "sm", children: [props.error, " \u00A0"] })] }));
    return (_jsxs("div", { children: [_jsx(Label, { htmlFor: props.id, children: props.label }), _jsx(Spacer, { y: "sm" }), _jsxs(InputContainer, { "data-error": !!props.error, children: [_jsx(Input, { variant: "transparent", required: props.required, name: props.name, autoComplete: props.autocomplete, id: props.id, onChange: (e) => props.onChange(e.target.value), value: props.value, type: props.noSave ? "text" : props.type, style: props.type === "password" && props.noSave
                            ? {
                                WebkitTextSecurity: "disc",
                            }
                            : undefined, "data-test": props.dataTest, placeholder: props.placeholder }), _jsx(InputButton, { type: "button", onClick: props.right.onClick, children: props.right.icon })] }), props.error && !props.noErrorShift && errorEl, props.noErrorShift && errorEl] }));
};
/**
 * @internal
 */
export const FormField = (props) => {
    return (_jsxs("div", { children: [_jsx(Label, { htmlFor: props.id, children: props.label }), _jsx(Spacer, { y: "sm" }), _jsx(Input, { variant: "outline", required: props.required, name: props.name, autoComplete: props.autocomplete, id: props.id, onChange: (e) => props.onChange(e.target.value), value: props.value, type: props.type, "data-error": !!props.errorMessage, placeholder: props.placeholder, disabled: props.disabled }), props.errorMessage && (_jsxs(_Fragment, { children: [_jsx(Spacer, { y: "xs" }), _jsx(Text, { color: "danger", size: "sm", children: props.errorMessage })] }))] }));
};
//# sourceMappingURL=formFields.js.map