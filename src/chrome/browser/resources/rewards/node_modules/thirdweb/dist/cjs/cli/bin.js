#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cross_spawn_1 = require("cross-spawn");
const generate_js_1 = require("./commands/generate/generate.js");
// skip the first two args?
const [, , command = "", ...rest] = process.argv;
async function main() {
    switch (command) {
        case "generate": {
            const [chainIdPlusContract] = rest;
            if (!(0, generate_js_1.isValidChainIdAndContractAddress)(chainIdPlusContract)) {
                console.info("Usage: thirdweb generate <chainId>/<contractAddress>");
                process.exit(1);
            }
            else {
                await (0, generate_js_1.generate)(chainIdPlusContract);
            }
            break;
        }
        case "login": {
            // Not implemented yet
            console.info("Please instead pass a secret key to the command directly, learn more: https://support.thirdweb.com/troubleshooting-errors/7Y1BqKNvtLdBv5fZkRZZB3/issue-linking-device-on-the-authorization-page-via-thirdweb-cli/cn9LRA3ax7XCP6uxwRYdvx");
            process.exit(1);
            break;
        }
        default: {
            // check several commands for missing -k flag
            const commands = ["deploy", "publish", "generate", "upload"];
            if (commands.includes(command) && !rest.includes("-k")) {
                console.info("Please include the -k flag with your secret key, learn more: https://support.thirdweb.com/troubleshooting-errors/7Y1BqKNvtLdBv5fZkRZZB3/issue-linking-device-on-the-authorization-page-via-thirdweb-cli/cn9LRA3ax7XCP6uxwRYdvx");
                process.exit(1);
                return;
            }
            const isWindows = /^win/.test(process.platform);
            let runner = "npx";
            switch (true) {
                case isWindows:
                    runner = "npx.cmd";
                    break;
            }
            const args = command
                ? ["--yes", "@thirdweb-dev/cli@latest", command, ...rest]
                : ["--yes", "@thirdweb-dev/cli@latest", ...rest];
            (0, cross_spawn_1.spawn)(runner, args, {
                stdio: "inherit",
            });
        }
    }
}
main();
//# sourceMappingURL=bin.js.map