"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPayBuyHistoryEndpoint = exports.getPaySupportedSources = exports.getPaySupportedDestinations = exports.getPayBuyWithCryptoHistoryEndpoint = exports.getPayBuyWithFiatHistoryEndpoint = exports.getPayBuyWithFiatStatusEndpoint = exports.getPayBuyWithFiatQuoteEndpoint = exports.getPayBuyWithCryptoTransferEndpoint = exports.getPayBuyWithCryptoQuoteEndpoint = exports.getPayBuyWithCryptoStatusUrl = void 0;
const domains_js_1 = require("../../utils/domains.js");
const getPayBaseUrl = () => {
    const payDomain = (0, domains_js_1.getThirdwebDomains)().pay;
    return payDomain.startsWith("localhost")
        ? `http://${payDomain}`
        : `https://${payDomain}`;
};
/**
 * Endpoint to get the status of a "Buy with Crypto" quote.
 * @internal
 */
const getPayBuyWithCryptoStatusUrl = () => `${getPayBaseUrl()}/buy-with-crypto/status/v1`;
exports.getPayBuyWithCryptoStatusUrl = getPayBuyWithCryptoStatusUrl;
/**
 * Endpoint to get "Buy with Crypto" quote.
 * @internal
 */
const getPayBuyWithCryptoQuoteEndpoint = () => `${getPayBaseUrl()}/buy-with-crypto/quote/v1`;
exports.getPayBuyWithCryptoQuoteEndpoint = getPayBuyWithCryptoQuoteEndpoint;
/**
 * Endpoint to get "Buy with Crypto" transfer.
 * @internal
 */
const getPayBuyWithCryptoTransferEndpoint = () => `${getPayBaseUrl()}/buy-with-crypto/transfer/v1`;
exports.getPayBuyWithCryptoTransferEndpoint = getPayBuyWithCryptoTransferEndpoint;
/**
 * Endpoint to get a "Buy with Fiat" quote.
 * @internal
 */
const getPayBuyWithFiatQuoteEndpoint = () => `${getPayBaseUrl()}/buy-with-fiat/quote/v1`;
exports.getPayBuyWithFiatQuoteEndpoint = getPayBuyWithFiatQuoteEndpoint;
/**
 * Endpoint to get the status of a "Buy with Fiat" transaction status.
 * @internal
 */
const getPayBuyWithFiatStatusEndpoint = () => `${getPayBaseUrl()}/buy-with-fiat/status/v1`;
exports.getPayBuyWithFiatStatusEndpoint = getPayBuyWithFiatStatusEndpoint;
/**
 * Endpoint to get history of "Buy with Fiat" transactions for given wallet address.
 * @internal
 */
const getPayBuyWithFiatHistoryEndpoint = () => `${getPayBaseUrl()}/buy-with-fiat/history/v1`;
exports.getPayBuyWithFiatHistoryEndpoint = getPayBuyWithFiatHistoryEndpoint;
/**
 * Endpoint to get a "Buy with Crypto" transaction history for a given wallet address.
 * @internal
 */
const getPayBuyWithCryptoHistoryEndpoint = () => `${getPayBaseUrl()}/buy-with-crypto/history/v1`;
exports.getPayBuyWithCryptoHistoryEndpoint = getPayBuyWithCryptoHistoryEndpoint;
/**
 * Endpoint to get a list of supported destination chains and tokens for thirdweb pay.
 * @internal
 */
const getPaySupportedDestinations = () => `${getPayBaseUrl()}/destination-tokens/v1`;
exports.getPaySupportedDestinations = getPaySupportedDestinations;
/**
 * Endpoint to get a list of supported source chains + tokens for thirdweb pay.
 * @internal
 */
const getPaySupportedSources = () => `${getPayBaseUrl()}/buy-with-crypto/source-tokens/v1`;
exports.getPaySupportedSources = getPaySupportedSources;
/**
 * Endpoint to get buy history for a given wallet address.
 * This includes both "Buy with Crypto" and "Buy with Fiat" transactions.
 * @internal
 */
const getPayBuyHistoryEndpoint = () => `${getPayBaseUrl()}/wallet/history/v1`;
exports.getPayBuyHistoryEndpoint = getPayBuyHistoryEndpoint;
//# sourceMappingURL=definitions.js.map