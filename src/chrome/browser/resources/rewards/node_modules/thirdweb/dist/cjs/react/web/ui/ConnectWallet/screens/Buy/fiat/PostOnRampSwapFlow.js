"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostOnRampSwapFlow = PostOnRampSwapFlow;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const FiatSteps_js_1 = require("./FiatSteps.js");
const PostOnRampSwap_js_1 = require("./PostOnRampSwap.js");
// Note: It is necessary to lock in the fiat-status in state and only pass that to <PostOnRampSwap /> so it does not suddenly change during the swap process.
/**
 * - Show 2 steps UI with step 2 highlighted, on continue button click:
 * - Show swap flow
 */
function PostOnRampSwapFlow(props) {
    const [statusForSwap, setStatusForSwap] = (0, react_1.useState)();
    // step 2 flow
    if (statusForSwap) {
        return ((0, jsx_runtime_1.jsx)(PostOnRampSwap_js_1.PostOnRampSwap, { title: props.title, buyWithFiatStatus: statusForSwap, client: props.client, onDone: props.onDone, transactionMode: props.transactionMode, isEmbed: props.isEmbed, payer: props.payer, onSuccess: props.onSuccess }));
    }
    // show step 1 and step 2 details
    return ((0, jsx_runtime_1.jsx)(FiatSteps_js_1.FiatSteps, { title: props.title, client: props.client, onBack: props.onBack, partialQuote: props.quote, step: 2, onContinue: () => {
            props.onSwapFlowStarted();
            setStatusForSwap(props.status);
        }, status: props.status }));
}
//# sourceMappingURL=PostOnRampSwapFlow.js.map