"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buyoutAuction = buyoutAuction;
const addresses_js_1 = require("../../../../constants/addresses.js");
const bidInAuction_js_1 = require("../../__generated__/IEnglishAuctions/write/bidInAuction.js");
const getAuction_js_1 = require("../read/getAuction.js");
/**
 * Buys out an English auction.
 * @param options - The options for buying out the auction.
 * @returns A transaction that can be sent to buy out the auction.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { buyoutAuction } from "thirdweb/extensions/marketplace";
 * import { sendTransaction } from "thirdweb";
 *
 * const transaction = buyoutAuction({
 *  contract,
 *  auctionId: 0n
 * });
 *
 * await sendTransaction({ transaction, account });
 * ```
 */
function buyoutAuction(options) {
    return (0, bidInAuction_js_1.bidInAuction)({
        contract: options.contract,
        asyncParams: async () => {
            const auction = await (0, getAuction_js_1.getAuction)({
                contract: options.contract,
                auctionId: options.auctionId,
            });
            return {
                auctionId: options.auctionId,
                bidAmount: auction.buyoutBidAmount,
                overrides: {
                    value: (0, addresses_js_1.isNativeTokenAddress)(auction.currencyContractAddress)
                        ? auction.buyoutBidAmount
                        : undefined,
                    extraGas: 50000n, // add extra gas to account for router call
                },
            };
        },
    });
}
//# sourceMappingURL=buyoutAuction.js.map