import type { SocialAuthOption } from "../../../../wallets/types.js";
import type { Account } from "../../../interfaces/wallet.js";
import type { AuthLoginReturnType, AuthStoredTokenWithCookieReturnType, GetUser, LogoutReturnType, MultiStepAuthArgsType, PreAuthArgsType, SingleStepAuthArgsType } from "../authentication/types.js";
export interface InAppConnector {
    getUser(): Promise<GetUser>;
    getAccount(): Promise<Account>;
    preAuthenticate(args: PreAuthArgsType): Promise<void>;
    authenticateWithRedirect?(strategy: SocialAuthOption, mode?: "redirect" | "popup" | "window", redirectUrl?: string): void;
    loginWithAuthToken?(authResult: AuthStoredTokenWithCookieReturnType): Promise<AuthLoginReturnType>;
    authenticate(args: MultiStepAuthArgsType | SingleStepAuthArgsType): Promise<AuthStoredTokenWithCookieReturnType>;
    connect(args: MultiStepAuthArgsType | SingleStepAuthArgsType): Promise<AuthLoginReturnType>;
    logout(): Promise<LogoutReturnType>;
}
//# sourceMappingURL=connector.d.ts.map