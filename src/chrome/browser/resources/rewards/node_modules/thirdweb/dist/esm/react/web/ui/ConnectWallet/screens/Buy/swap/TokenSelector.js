import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { ChevronDownIcon } from "@radix-ui/react-icons";
import { iconSize } from "../../../../../../core/design-system/index.js";
import { TokenIcon } from "../../../../components/TokenIcon.js";
import { Container } from "../../../../components/basic.js";
import { Button } from "../../../../components/buttons.js";
import { Text } from "../../../../components/text.js";
import { TokenSymbol } from "../../../../components/token/TokenSymbol.js";
/**
 * @internal
 */
export function TokenSelectorButton(props) {
    return (_jsx(Button, { variant: "outline", style: props.style, gap: "xxs", onClick: props.onClick, children: props.token ? (_jsxs(_Fragment, { children: [_jsxs(Container, { flex: "row", center: "y", gap: "xs", children: [_jsx(TokenIcon, { token: props.token, chain: props.chain, size: "sm", client: props.client }), _jsx(TokenSymbol, { token: props.token, chain: props.chain, size: "sm" })] }), _jsx(Container, { color: "secondaryText", flex: "row", center: "both", children: _jsx(ChevronDownIcon, { width: iconSize.sm, height: iconSize.sm }) })] })) : (_jsxs(Container, { flex: "row", center: "y", gap: "xs", color: "secondaryText", children: [_jsx(Text, { size: "sm", children: " Select token " }), _jsx(ChevronDownIcon, { width: iconSize.sm, height: iconSize.sm })] })) }));
}
//# sourceMappingURL=TokenSelector.js.map