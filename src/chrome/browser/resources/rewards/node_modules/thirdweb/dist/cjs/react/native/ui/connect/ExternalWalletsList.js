"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalWalletsList = ExternalWalletsList;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_native_1 = require("react-native");
const wallet_js_1 = require("../../../core/utils/wallet.js");
const index_js_1 = require("../../design-system/index.js");
const Skeleton_js_1 = require("../components/Skeleton.js");
const text_js_1 = require("../components/text.js");
function ExternalWalletsList(props) {
    const { connector, client, theme } = props;
    const connectWallet = (wallet) => {
        connector({
            wallet,
            connectFn: async (chain) => {
                await wallet.connect({
                    client,
                    chain,
                });
                return wallet;
            },
        });
    };
    return ((0, jsx_runtime_1.jsxs)(react_native_1.View, { style: styles.container, children: [(0, jsx_runtime_1.jsx)(react_native_1.ScrollView, { style: {
                    flex: 1,
                    paddingHorizontal: props.containerType === "modal" ? index_js_1.spacing.lg : 0,
                    paddingBottom: index_js_1.spacing.md,
                }, children: (0, jsx_runtime_1.jsx)(react_native_1.View, { style: { flexDirection: "column", gap: index_js_1.spacing.md }, children: props.externalWallets.map((wallet) => ((0, jsx_runtime_1.jsx)(ExternalWalletRow, { wallet: wallet, connectWallet: connectWallet, theme: theme }, wallet.id))) }) }), (0, jsx_runtime_1.jsx)(NewToWallets, { theme: props.theme, containerType: props.containerType })] }));
}
function ExternalWalletRow(props) {
    const { wallet, theme, connectWallet } = props;
    const imageQuery = (0, wallet_js_1.useWalletImage)(wallet.id);
    const infoQuery = (0, wallet_js_1.useWalletInfo)(wallet.id);
    return ((0, jsx_runtime_1.jsxs)(react_native_1.TouchableOpacity, { style: styles.row, onPress: () => connectWallet(wallet), children: [imageQuery.data ? ((0, jsx_runtime_1.jsx)(react_native_1.Image, { source: { uri: imageQuery.data ?? "" }, style: { width: 52, height: 52, borderRadius: 6 } })) : ((0, jsx_runtime_1.jsx)(Skeleton_js_1.Skeleton, { theme: theme, style: {
                    width: 52,
                    height: 52,
                } })), (0, jsx_runtime_1.jsx)(text_js_1.ThemedText, { theme: theme, type: "subtitle", children: infoQuery.data?.name || "" })] }));
}
function NewToWallets({ theme, containerType, }) {
    return ((0, jsx_runtime_1.jsxs)(react_native_1.View, { style: [
            styles.row,
            {
                borderTopWidth: 1,
                borderColor: theme.colors.borderColor,
                paddingVertical: index_js_1.spacing.md,
                paddingHorizontal: containerType === "modal" ? index_js_1.spacing.lg : 0,
            },
        ], children: [(0, jsx_runtime_1.jsx)(text_js_1.ThemedText, { theme: theme, type: "subtext", children: "New to wallets?" }), (0, jsx_runtime_1.jsx)(react_native_1.View, { style: { flex: 1 } }), (0, jsx_runtime_1.jsx)(text_js_1.ThemedText, { type: "subtext", style: { color: theme.colors.primaryText }, theme: theme, onPress: () => react_native_1.Linking.openURL("https://blog.thirdweb.com/web3-wallet/"), children: "Get started" })] }));
}
const styles = react_native_1.StyleSheet.create({
    container: {
        flex: 1,
        flexDirection: "column",
    },
    row: {
        flexDirection: "row",
        gap: index_js_1.spacing.md,
        justifyContent: "flex-start",
        alignItems: "center",
    },
});
//# sourceMappingURL=ExternalWalletsList.js.map