import { getDeployedInfraContract } from "../../../contract/deployment/utils/infra.js";
import { uninstallModule } from "../__generated__/IModularCore/write/uninstallModule.js";
/**
 * Uninstall a published module
 * @param options - The options for uninstalling a published module
 * @returns A prepared transaction to send
 * @modules
 * @example
 * ```ts
 * import { uninstallPublishedModule } from "thirdweb/modules";
 * const transaction = uninstallPublishedModule({
 *  client,
 *  chain,
 *  contract,
 *  moduleName: "MyModule",
 *  publisherAddress: "0x...",
 * });
 * await sendTransaction({ transaction, account });
 * ```
 */
export function uninstallPublishedModule(options) {
    const { contract, moduleName, publisherAddress, moduleData } = options;
    return uninstallModule({
        contract,
        asyncParams: async () => {
            const deployedModule = await getDeployedInfraContract({
                chain: contract.chain,
                client: contract.client,
                contractId: moduleName,
                publisher: publisherAddress,
            });
            return {
                moduleContract: deployedModule?.address,
                data: moduleData || "0x",
            };
        },
    });
}
//# sourceMappingURL=uninstallPublishedModule.js.map