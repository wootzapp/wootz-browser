"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mintWithRole = mintWithRole;
const viem_1 = require("viem");
const address_js_1 = require("../../../utils/address.js");
const ipfs_js_1 = require("../../../utils/ipfs.js");
const mint_js_1 = require("../__generated__/ERC1155Core/write/mint.js");
/**
 * Mints ERC1155 tokens to a specified address via a MintableERC1155 module.
 * @param options The options for minting tokens.
 * @returns A transaction to mint tokens.
 * @example
 * ```typescript
 * import { MintableERC1155 } from "thirdweb/modules";
 *
 * const transaction = MintableERC1155.mintWithRole({
 *   contract,
 *   to: "0x...", // Address to mint tokens to
 *   amount: 2, // Amount of tokens to mint
 *   nft: {
 *     name: "My NFT",
 *     description: "This is my NFT",
 *     image: "ipfs://...",
 *   },
 * });
 *
 * // Send the transaction
 * await sendTransaction({ transaction, account });
 * ```
 * @modules MintableERC1155
 */
function mintWithRole(options) {
    return (0, mint_js_1.mint)({
        contract: options.contract,
        asyncParams: async () => {
            const batchOfUris = await (0, ipfs_js_1.uploadOrExtractURIs)([options.nft], options.contract.client);
            const baseURI = (0, ipfs_js_1.getBaseUriFromBatch)(batchOfUris);
            const tokenId = options.tokenId ?? viem_1.maxUint256;
            return {
                to: (0, address_js_1.getAddress)(options.to),
                tokenId,
                amount: options.amount,
                baseURI: baseURI,
                data: "0x",
            };
        },
    });
}
//# sourceMappingURL=mintWithRole.js.map