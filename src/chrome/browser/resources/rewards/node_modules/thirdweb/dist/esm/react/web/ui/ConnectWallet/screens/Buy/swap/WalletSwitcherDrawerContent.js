import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PlusIcon } from "@radix-ui/react-icons";
import { useCustomTheme } from "../../../../../../core/design-system/CustomThemeProvider.js";
import { iconSize, radius, spacing, } from "../../../../../../core/design-system/index.js";
import { useConnectedWallets } from "../../../../../../core/hooks/wallets/useConnectedWallets.js";
import { Spacer } from "../../../../components/Spacer.js";
import { Container } from "../../../../components/basic.js";
import { Button } from "../../../../components/buttons.js";
import { Text } from "../../../../components/text.js";
import { WalletSelectorButton } from "../WalletSelectorButton.js";
export function WalletSwitcherDrawerContent(props) {
    const theme = useCustomTheme();
    const connectedWallets = useConnectedWallets();
    // if all wallets are connected and showAll wallets is disabled, hide the connect button
    const hideConnectButton = !props.showAllWallets &&
        props.wallets?.every((w) => connectedWallets.includes(w));
    return (_jsxs(Container, { children: [_jsxs(Container, { flex: "column", gap: "xs", children: [connectedWallets
                        .filter((w) => !props.hiddenWallets?.includes(w.id))
                        .map((w) => {
                        const address = w.getAccount()?.address;
                        return (_jsx(WalletSelectorButton, { walletId: w.id, client: props.client, address: address || "", onClick: () => {
                                props.onSelect(w);
                                props.onBack();
                            }, disableChevron: true, checked: false }, w.id));
                    }), !hideConnectButton && (_jsx(Button, { variant: "secondary", fullWidth: true, onClick: props.onConnect, gap: "xs", bg: "tertiaryBg", style: {
                            borderRadius: radius.lg,
                            border: `1px solid ${theme.colors.borderColor}`,
                            padding: spacing.sm,
                        }, children: _jsxs(Container, { flex: "row", gap: "sm", center: "y", expand: true, children: [_jsx(PlusIcon, { width: iconSize.md, height: iconSize.md }), _jsx(Text, { size: "sm", color: "primaryText", children: "Add Another Wallet" })] }) }))] }), _jsx(Spacer, { y: "sm" })] }));
}
//# sourceMappingURL=WalletSwitcherDrawerContent.js.map