import type { Address } from "abitype";
import type { BaseTransactionOptions } from "../../../transaction/types.js";
import type { Prettify } from "../../../utils/type-utils.js";
/**
 * Represents the parameters for the `approve` function.
 * @extension ERC20
 */
export type ApproveParams = Prettify<{
    spender: Address;
} & ({
    amount: number | string;
} | {
    amountWei: bigint;
})>;
/**
 * Approves the spending of tokens by a specific address.
 * @param options - The transaction options.
 * @returns A prepared transaction object.
 * @extension ERC20
 * @example
 * ```ts
 * import { approve } from "thirdweb/extensions/erc20";
 * import { sendTransaction } from "thirdweb";
 *
 * const transaction = await approve({
 *  contract,
 *  spender: "0x...",
 *  amount: 100,
 * });
 *
 * await sendTransaction({ transaction, account });
 * ```
 */
export declare function approve(options: BaseTransactionOptions<ApproveParams>): import("../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction, import("../../../transaction/prepare-transaction.js").PrepareTransactionOptions>;
//# sourceMappingURL=approve.d.ts.map