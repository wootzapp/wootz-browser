import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { ExternalLinkIcon } from "@radix-ui/react-icons";
import { getCachedChain } from "../../../../../../../chains/utils.js";
import { formatNumber } from "../../../../../../../utils/formatNumber.js";
import { fontSize, iconSize, } from "../../../../../../core/design-system/index.js";
import { useChainExplorers } from "../../../../../../core/hooks/others/useChainQuery.js";
import { Spacer } from "../../../../components/Spacer.js";
import { Container, Line } from "../../../../components/basic.js";
import { ButtonLink } from "../../../../components/buttons.js";
import { Text } from "../../../../components/text.js";
import { TokenInfoRow } from "../pay-transactions/TokenInfoRow.js";
import { getCurrencyMeta } from "./currencies.js";
/**
 * Show a table with the details of a "OnRamp" transaction step in the "Buy with Fiat" flow.
 * - Show OnRamp token as "Receive"
 * - Show fiat amount as "Pay"
 */
export function OnRampTxDetailsTable(props) {
    const onRampExplorers = useChainExplorers(getCachedChain(props.token.chainId));
    const onrampTxHash = props.statusMeta?.txHash;
    const currencyMeta = getCurrencyMeta(props.fiat.currencySymbol);
    const lineSpacer = (_jsxs(_Fragment, { children: [_jsx(Spacer, { y: "md" }), _jsx(Line, {}), _jsx(Spacer, { y: "md" })] }));
    return (_jsxs("div", { children: [_jsxs(Container, { flex: "row", style: {
                    justifyContent: "space-between",
                }, children: [_jsx(Text, { children: "Pay" }), _jsx(Container, { flex: "column", gap: "xxs", style: {
                            alignItems: "flex-end",
                        }, children: _jsxs(Container, { flex: "row", gap: "xs", center: "y", children: [_jsx(currencyMeta.icon, { size: iconSize.sm }), _jsxs(Text, { color: "primaryText", children: [formatNumber(Number(props.fiat.amount), 2), " ", props.fiat.currencySymbol] })] }) })] }), lineSpacer, _jsx(TokenInfoRow, { chainId: props.token.chainId, client: props.client, label: "Receive", tokenAmount: props.token.amount, tokenSymbol: props.token.symbol, tokenAddress: props.token.address }), props.statusMeta && (_jsxs(_Fragment, { children: [lineSpacer, _jsxs(Container, { flex: "row", center: "y", style: {
                            justifyContent: "space-between",
                        }, children: [_jsx(Text, { children: "Status" }), _jsx(Container, { flex: "row", gap: "xs", center: "y", children: _jsx(Text, { color: props.statusMeta.color, children: props.statusMeta.text }) })] })] })), lineSpacer, onrampTxHash && onRampExplorers.explorers?.[0]?.url && (_jsxs(_Fragment, { children: [_jsx(Spacer, { y: "md" }), _jsxs(ButtonLink, { fullWidth: true, variant: "outline", href: `${onRampExplorers.explorers[0].url || ""}/tx/${onrampTxHash}`, target: "_blank", gap: "xs", style: {
                            fontSize: fontSize.sm,
                        }, children: ["View on Explorer", _jsx(ExternalLinkIcon, { width: iconSize.sm, height: iconSize.sm })] })] }))] }));
}
//# sourceMappingURL=FiatTxDetailsTable.js.map