import type { Chain } from "../chains/types.js";
import type { ThirdwebClient } from "../client/client.js";
import type { PreparedTransaction } from "../transaction/prepare-transaction.js";
type FeeDataParams = {
    gasPrice?: never;
    maxFeePerGas?: bigint;
    maxPriorityFeePerGas?: bigint;
} | {
    gasPrice?: bigint;
    maxFeePerGas?: never;
    maxPriorityFeePerGas?: never;
};
/**
 *
 * @internal
 */
export declare function getGasOverridesForTransaction(transaction: PreparedTransaction): Promise<FeeDataParams>;
/**
 * Retrieves the default gas overrides for a given client and chain ID.
 * If the fee data contains both maxFeePerGas and maxPriorityFeePerGas, it returns an object with those values.
 * Otherwise, it returns an object with the gasPrice obtained from the client and chain ID.
 * @param client - The ThirdwebClient instance.
 * @param chain - The chain ID.
 * @returns An object containing the default gas overrides.
 * @internal
 */
export declare function getDefaultGasOverrides(client: ThirdwebClient, chain: Chain): Promise<{
    maxFeePerGas: bigint;
    maxPriorityFeePerGas: bigint;
    gasPrice?: undefined;
} | {
    gasPrice: bigint;
    maxFeePerGas?: undefined;
    maxPriorityFeePerGas?: undefined;
}>;
export {};
//# sourceMappingURL=fee-data.d.ts.map