"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deposit = deposit;
const prepare_contract_call_js_1 = require("../../../transaction/prepare-contract-call.js");
const units_js_1 = require("../../../utils/units.js");
const deposit_js_1 = require("../__generated__/IWETH/write/deposit.js");
/**
 * Calls the "deposit" function on the contract (useful to wrap ETH).
 * @param options - The options for the "deposit" function.
 * @returns A prepared transaction object.
 * @extension ERC20
 * @example
 * ```ts
 * import { deposit } from "thirdweb/extensions/erc20";
 * import { sendTransaction } from "thirdweb";
 *
 * const transaction = deposit({ contract, amount: "0.1" });
 *
 * await sendTransaction({ transaction, account });
 * ```
 */
function deposit(options) {
    const value = "amountWei" in options ? options.amountWei : (0, units_js_1.toWei)(options.amount);
    return (0, prepare_contract_call_js_1.prepareContractCall)({
        contract: options.contract,
        method: [deposit_js_1.FN_SELECTOR, [], []],
        value,
        erc20Value: {
            amountWei: value,
            tokenAddress: options.contract.address,
        },
    });
}
//# sourceMappingURL=deposit.js.map