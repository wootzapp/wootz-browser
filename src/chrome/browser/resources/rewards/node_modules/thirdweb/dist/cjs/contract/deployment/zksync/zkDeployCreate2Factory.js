"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.zkDeployCreate2Factory = zkDeployCreate2Factory;
const abitype_1 = require("abitype");
const send_and_confirm_transaction_js_1 = require("../../../transaction/actions/send-and-confirm-transaction.js");
const prepare_transaction_js_1 = require("../../../transaction/prepare-transaction.js");
const constants_js_1 = require("../../../utils/any-evm/zksync/constants.js");
const is_contract_deployed_js_1 = require("../../../utils/bytecode/is-contract-deployed.js");
const units_js_1 = require("../../../utils/units.js");
const private_key_js_1 = require("../../../wallets/private-key.js");
const getWalletBalance_js_1 = require("../../../wallets/utils/getWalletBalance.js");
const zkDeployContract_js_1 = require("./zkDeployContract.js");
/**
 * @internal
 */
async function zkDeployCreate2Factory(options) {
    const isDeployed = await (0, is_contract_deployed_js_1.isContractDeployed)({
        address: constants_js_1.ZKSYNC_SINGLETON_FACTORY,
        chain: options.chain,
        client: options.client,
    });
    if (isDeployed) {
        return constants_js_1.ZKSYNC_SINGLETON_FACTORY;
    }
    const create2Signer = (0, private_key_js_1.privateKeyToAccount)({
        client: options.client,
        privateKey: constants_js_1.PUBLISHED_PRIVATE_KEY,
    });
    const valueToSend = (0, units_js_1.toWei)("0.01");
    const balance = await (0, getWalletBalance_js_1.getWalletBalance)({
        address: create2Signer.address,
        chain: options.chain,
        client: options.client,
    });
    if (balance.value < valueToSend) {
        await (0, send_and_confirm_transaction_js_1.sendAndConfirmTransaction)({
            account: options.account,
            transaction: (0, prepare_transaction_js_1.prepareTransaction)({
                chain: options.chain,
                client: options.client,
                to: create2Signer.address,
                value: valueToSend,
            }),
        });
    }
    await (0, zkDeployContract_js_1.zkDeployContract)({
        client: options.client,
        chain: options.chain,
        account: options.account,
        abi: (0, abitype_1.parseAbi)(constants_js_1.singletonFactoryAbi),
        bytecode: constants_js_1.singletonFactoryBytecode,
    });
    return constants_js_1.ZKSYNC_SINGLETON_FACTORY;
}
//# sourceMappingURL=zkDeployCreate2Factory.js.map