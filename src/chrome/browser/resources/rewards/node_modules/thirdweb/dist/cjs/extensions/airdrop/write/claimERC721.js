"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.claimERC721 = claimERC721;
const fetch_proofs_erc721_js_1 = require("../../../utils/extensions/airdrop/fetch-proofs-erc721.js");
const tokenMerkleRoot_js_1 = require("../__generated__/Airdrop/read/tokenMerkleRoot.js");
const claimERC721_js_1 = require("../__generated__/Airdrop/write/claimERC721.js");
/**
 * Claim airdrop of ERC721 tokens for allowlisted addresses. (Pull based airdrop)
 * @param options - The transaction options.
 * @example
 * ```ts
 * import { claimERC721 } from "thirdweb/extensions/airdrop";
 * import { sendTransaction } from "thirdweb";
 *
 * const tokenAddress = "0x..." // Address of airdropped tokens to claim
 * const recipient = "0x..."  // Address of the allowlisted recipient
 *
 * const claimTransaction = claimERC721({
 *    contract,
 *    tokenAddress,
 *    recipient
 * });
 *
 * await sendTransaction({ claimTransaction, account });
 *
 * ```
 * @extension Airdrop
 * @returns A promise that resolves to the transaction result.
 */
function claimERC721(options) {
    return (0, claimERC721_js_1.claimERC721)({
        contract: options.contract,
        asyncParams: async () => {
            const merkleRoot = await (0, tokenMerkleRoot_js_1.tokenMerkleRoot)({
                contract: options.contract,
                tokenAddress: options.tokenAddress,
            });
            const tokenAddress = options.tokenAddress;
            const merkleProof = await (0, fetch_proofs_erc721_js_1.fetchProofsERC721)({
                contract: options.contract,
                recipient: options.recipient,
                merkleRoot,
            });
            if (!merkleProof) {
                throw new Error("Proof not found for recipient address");
            }
            return {
                token: tokenAddress,
                receiver: merkleProof.recipient,
                tokenId: merkleProof.tokenId,
                proofs: merkleProof.proof,
            };
        },
    });
}
//# sourceMappingURL=claimERC721.js.map