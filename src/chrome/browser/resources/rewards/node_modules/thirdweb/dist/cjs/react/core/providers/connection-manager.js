"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectionManagerCtx = void 0;
exports.useConnectionManager = useConnectionManager;
exports.useConnectionManagerCtx = useConnectionManagerCtx;
const react_1 = require("react");
exports.ConnectionManagerCtx = (0, react_1.createContext)(undefined);
function useConnectionManager() {
    const connectionManager = useConnectionManagerCtx("useConnectionManager");
    if (!connectionManager) {
        throw new Error("useConnectionManager must be used within a <ThirdwebProvider> Provider");
    }
    return connectionManager;
}
/**
 * Use this instead of `useConnectionManager` to throw a more specific error message when used outside of a provider.
 * @internal
 */
function useConnectionManagerCtx(hookname) {
    const manager = (0, react_1.useContext)(exports.ConnectionManagerCtx);
    if (!manager) {
        throw new Error(`${hookname} must be used within <ThirdwebProvider>`);
    }
    return manager;
}
//# sourceMappingURL=connection-manager.js.map