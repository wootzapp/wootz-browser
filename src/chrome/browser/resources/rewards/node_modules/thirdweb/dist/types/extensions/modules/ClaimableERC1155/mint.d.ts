import type { BaseTransactionOptions } from "../../../transaction/types.js";
import { encodeBytesBeforeMintERC1155Params } from "../__generated__/ClaimableERC1155/encode/encodeBytesBeforeMintERC1155.js";
type MintParams = {
    to: string;
    tokenId: bigint;
    quantity: string | number;
};
/**
 * Mints ERC1155 tokens to a specified address via a ClaimableERC1155 module.
 * @param options The options for minting tokens.
 * @returns A transaction to mint tokens.
 * @example
 * ```typescript
 * import { ClaimableERC1155 } from "thirdweb/modules";
 *
 * const transaction = ClaimableERC1155.mint({
 *   contract,
 *   to: "0x...", // Address to mint tokens to
 *   quantity: 2, // Amount of tokens to mint
 * });
 *
 * // Send the transaction
 * await sendTransaction({ transaction, account });
 * ```
 * @modules ClaimableERC1155
 */
export declare function mint(options: BaseTransactionOptions<MintParams>): import("../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("viem").AbiFunction, import("../../../transaction/prepare-transaction.js").PrepareTransactionOptions>;
export declare const encodeMintParams: typeof encodeBytesBeforeMintERC1155Params;
export {};
//# sourceMappingURL=mint.d.ts.map