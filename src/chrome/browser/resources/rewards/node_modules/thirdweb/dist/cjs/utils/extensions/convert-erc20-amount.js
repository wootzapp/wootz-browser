"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertErc20Amount = convertErc20Amount;
const addresses_js_1 = require("../../constants/addresses.js");
const contract_js_1 = require("../../contract/contract.js");
const units_js_1 = require("../units.js");
async function convertErc20Amount(options) {
    if ("amount" in options) {
        // for native token, we know decimals are 18
        if (!options.erc20Address || (0, addresses_js_1.isNativeTokenAddress)(options.erc20Address)) {
            return (0, units_js_1.toUnits)(options.amount.toString(), 18);
        }
        // otherwise get the decimals of the currency
        const currencyContract = (0, contract_js_1.getContract)({
            client: options.client,
            chain: options.chain,
            address: options.erc20Address,
        });
        const { decimals } = await Promise.resolve().then(() => require("../../extensions/erc20/read/decimals.js"));
        const currencyDecimals = await decimals({
            contract: currencyContract,
        });
        return (0, units_js_1.toUnits)(options.amount.toString(), currencyDecimals);
    }
    return options.amountInWei;
}
//# sourceMappingURL=convert-erc20-amount.js.map