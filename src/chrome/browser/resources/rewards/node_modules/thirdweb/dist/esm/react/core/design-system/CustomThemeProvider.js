"use client";
import { jsx as _jsx } from "react/jsx-runtime";
import { createContext, useContext } from "react";
import { darkThemeObj, lightThemeObj } from "./index.js";
const CustomThemeCtx = /* @__PURE__ */ createContext(darkThemeObj);
/**
 * @internal
 */
export function CustomThemeProvider(props) {
    const { theme, children } = props;
    const themeObj = parseTheme(theme);
    return (_jsx(CustomThemeCtx.Provider, { value: themeObj, children: children }));
}
export function parseTheme(theme) {
    if (!theme || !isValidTheme(theme)) {
        return darkThemeObj;
    }
    let themeObj;
    if (typeof theme === "string") {
        themeObj = theme === "light" ? lightThemeObj : darkThemeObj;
    }
    else {
        themeObj = theme;
    }
    return themeObj;
}
export function isValidTheme(theme) {
    return (theme === "dark" ||
        theme === "light" ||
        (typeof theme === "object" && theme !== null && "colors" in theme));
}
/**
 *
 * @internal
 */
export function useCustomTheme() {
    return useContext(CustomThemeCtx);
}
//# sourceMappingURL=CustomThemeProvider.js.map