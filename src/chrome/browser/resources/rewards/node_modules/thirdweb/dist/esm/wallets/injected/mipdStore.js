import { createStore } from "mipd";
import { isBrowser } from "../../utils/platform.js";
import { METAMASK } from "../constants.js";
// if we're in the browser -> create the store once immediately
const mipdStore = /* @__PURE__ */ (() => isBrowser() ? createStore() : undefined)();
/**
 * Get Injected Provider for given wallet by passing a wallet ID (rdns) using [EIP-6963](https://eips.ethereum.org/EIPS/eip-6963) Provider Discovery.
 * @param walletId - The Wallet Id (rdns) to check.
 * @example
 * ```ts
 * import { injectedProvider } from "thirdweb/wallets";
 *
 * const metamaskProvider = injectedProvider("io.metamask");
 *
 * if (metamaskProvider) {
 *  console.log("Metamask is installed");
 * }
 * ```
 * @returns The details of the Injected Provider if it exists. `undefined` otherwise.
 * @walletUtils
 */
export function injectedProvider(walletId) {
    const injectedProviderDetail = getInstalledWalletProviders().find((p) => p.info.rdns === walletId);
    return injectedProviderDetail?.provider;
}
/**
 * Get Injected Provider Details for given wallet ID (rdns)
 * @internal
 */
function getMIPDStore() {
    if (!mipdStore) {
        return undefined;
    }
    return mipdStore;
}
export function getInstalledWalletProviders() {
    const providers = getMIPDStore()?.getProviders() || [];
    for (const provider of providers) {
        // Map io.metamask.mobile to io.metamask rdns to fix double entry issue in MetaMask mobile browser
        if (provider.info.rdns === "io.metamask.mobile") {
            provider.info.rdns = METAMASK;
            break;
        }
    }
    return providers;
}
//# sourceMappingURL=mipdStore.js.map