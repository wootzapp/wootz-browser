import type { Address } from "abitype";
import { type TransactionSerializable } from "viem";
import type { Account } from "../../../../wallets/interfaces/wallet.js";
import type { PreparedTransaction } from "../../../prepare-transaction.js";
import type { WaitForReceiptOptions } from "../../wait-for-tx-receipt.js";
/**
 * @transaction
 */
export type BiconomyOptions = {
    provider: "biconomy";
    relayerForwarderAddress: Address;
    apiId: string;
    apiKey: string;
    deadlineSeconds?: number;
};
type SendBiconomyTransactionOptions = {
    account: Account;
    transaction: PreparedTransaction<any>;
    serializableTransaction: TransactionSerializable;
    gasless: BiconomyOptions;
};
/**
 * @internal - only exported for testing
 */
export declare function prepareBiconomyTransaction({ account, serializableTransaction, transaction, gasless, }: SendBiconomyTransactionOptions): Promise<readonly [{
    from: string;
    to: string | null | undefined;
    token: string;
    txGas: bigint | undefined;
    tokenGasPrice: bigint;
    batchId: bigint;
    batchNonce: bigint;
    deadline: number;
    data: `0x${string}` | undefined;
}, `0x${string}`]>;
/**
 * @internal
 */
export declare function relayBiconomyTransaction(options: SendBiconomyTransactionOptions): Promise<WaitForReceiptOptions>;
export {};
//# sourceMappingURL=biconomy.d.ts.map