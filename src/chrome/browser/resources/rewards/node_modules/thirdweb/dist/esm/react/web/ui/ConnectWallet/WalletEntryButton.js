"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { getInstalledWalletProviders } from "../../../../wallets/injected/mipdStore.js";
import { useCustomTheme } from "../../../core/design-system/CustomThemeProvider.js";
import { fontSize, iconSize, radius, spacing, } from "../../../core/design-system/index.js";
import { useWalletInfo } from "../../../core/utils/wallet.js";
import { Skeleton } from "../components/Skeleton.js";
import { WalletImage } from "../components/WalletImage.js";
import { Container } from "../components/basic.js";
import { Text } from "../components/text.js";
import { StyledButton } from "../design-system/elements.js";
/**
 * @internal
 */
export function WalletEntryButton(props) {
    const { walletId, selectWallet } = props;
    const isRecommended = props.recommendedWallets?.find((w) => w.id === walletId);
    const walletInfo = useWalletInfo(walletId);
    const walletName = getInstalledWalletProviders().find((p) => p.info.rdns === walletId)?.info
        .name || walletInfo.data?.name;
    const isInstalled = getInstalledWalletProviders().find((p) => p.info.rdns === walletId);
    return (_jsxs(WalletButtonEl, { type: "button", onClick: selectWallet, "data-active": props.isActive, children: [_jsx(WalletImage, { id: walletId, size: iconSize.xl, client: props.client }), _jsxs(Container, { flex: "column", gap: "xxs", expand: true, children: [walletName ? (_jsx(Text, { color: "primaryText", weight: 600, children: walletName })) : (_jsx(Skeleton, { width: "100px", height: fontSize.md })), props.badge ? (_jsx(Text, { size: "sm", children: props.badge })) : isRecommended ? (_jsx(Text, { size: "sm", children: props.connectLocale.recommended })) : isInstalled ? (_jsx(Text, { size: "sm", children: props.connectLocale.installed })) : null] })] }));
}
export const WalletButtonEl = /* @__PURE__ */ StyledButton((_) => {
    const theme = useCustomTheme();
    return {
        all: "unset",
        display: "flex",
        alignItems: "center",
        gap: spacing.sm,
        cursor: "pointer",
        boxSizing: "border-box",
        width: "100%",
        color: theme.colors.secondaryText,
        position: "relative",
        borderRadius: radius.md,
        padding: `${spacing.xs} ${spacing.xs}`,
        "&:hover": {
            backgroundColor: theme.colors.tertiaryBg,
            transform: "scale(1.01)",
        },
        '&[data-active="true"]': {
            backgroundColor: theme.colors.tertiaryBg,
        },
        transition: "background-color 200ms ease, transform 200ms ease",
    };
});
//# sourceMappingURL=WalletEntryButton.js.map