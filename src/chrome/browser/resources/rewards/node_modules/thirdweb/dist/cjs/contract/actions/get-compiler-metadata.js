"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCompilerMetadata = getCompilerMetadata;
const compiler_metadata_js_1 = require("./compiler-metadata.js");
/**
 * Down the compiled metadata from thirdweb contract api and format it
 * @param metadata The (json) data returned from https://contract.thirdweb.com/metadata/<chainId>/<contractAddress>
 *
 * @example
 * ```ts
 * import { getCompilerMetadata, getContract } from "thirdweb/contracts";
 *
 * const contract = getContract({
 *   address: "0x...",
 *   chain: ethereum,
 *   client: "",
 * });
 * const metadata = await getCompilerMetadata(contract);
 * ```
 * @returns The compiler metadata for the contract
 * @contract
 */
async function getCompilerMetadata(contract) {
    const { address, chain } = contract;
    const response = await fetch(`https://contract.thirdweb.com/metadata/${chain.id}/${address}`, {
        method: "GET",
        headers: {
            "Content-Type": "application/json",
        },
    });
    if (!response.ok) {
        const errorMsg = await response.json();
        throw new Error(errorMsg.message || errorMsg.error || "Failed to get compiler metadata");
    }
    const data = await response.json();
    return (0, compiler_metadata_js_1.formatCompilerMetadata)(data);
}
//# sourceMappingURL=get-compiler-metadata.js.map