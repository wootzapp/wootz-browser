"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeFunctionParams = normalizeFunctionParams;
const parse_abi_params_js_1 = require("../contract/parse-abi-params.js");
function normalizeFunctionParams(abiFunction, params = {}) {
    if (!abiFunction) {
        return [];
    }
    return (0, parse_abi_params_js_1.parseAbiParams)(abiFunction.inputs.map((i) => i.type), abiFunction.inputs.map((input, index) => {
        const value = input.name;
        if (value === undefined) {
            throw new Error(`Missing named parameter for ${"name" in abiFunction ? abiFunction.name : "constructor"} at index ${index}`);
        }
        const valueWithoutUnderscore = value.replace(/^_+/, "");
        const normalizedValue = valueWithoutUnderscore in params
            ? params[valueWithoutUnderscore]
            : params[value]; // handle _name, _symbol, etc passed without underscore in the keys
        if (normalizedValue === undefined) {
            throw new Error(`Missing value for parameter ${value} at index ${index}`);
        }
        return normalizedValue;
    }));
}
//# sourceMappingURL=normalizeFunctionParams.js.map