import type { Chain } from "../../../chains/types.js";
import type { ThirdwebClient } from "../../../client/client.js";
import type { Account, Wallet } from "../../../wallets/interfaces/wallet.js";
import type { WalletInfo } from "../../../wallets/wallet-info.js";
import type { WalletId } from "../../../wallets/wallet-types.js";
/**
 * Get the ENS name and avatar for an address
 * @param options - the client and address to get the ENS name and avatar for
 * @returns - a query object that resolves to the ENS name
 * @example
 * ```tsx
 * import { useEnsName } from "thirdweb/react";
 *
 * const { data: ensName } = useEnsName({
 *  client,
 *  address: "0x1234...",
 * });
 * ```
 * @extension ENS
 */
export declare function useEnsName(options: {
    client: ThirdwebClient;
    address: string | undefined;
}): import("@tanstack/react-query").UseQueryResult<string | null, Error>;
/**
 * Get the ENS avatar for an ENS name
 * @param options - the client and ENS name to get the avatar for
 * @returns - a query object that resolves to the avatar
 * @example
 * ```tsx
 * import { useEnsAvatar } from "thirdweb/react";
 *
 * const { data: ensAvatar } = useEnsAvatar({
 *  client,
 *  ensName: "my-ens-name.eth",
 * });
 * ```
 * @extension ENS
 */
export declare function useEnsAvatar(options: {
    client: ThirdwebClient;
    ensName: string | null | undefined;
}): import("@tanstack/react-query").UseQueryResult<string | null, Error>;
/**
 * @internal
 */
export declare function useConnectedWalletDetails(client: ThirdwebClient, walletChain: Chain | undefined, activeAccount: Account | undefined, displayBalanceToken?: Record<number, string>): {
    socialProfileQuery: import("@tanstack/react-query").UseQueryResult<import("../../../social/types.js").SocialProfile[], Error>;
    ensNameQuery: import("@tanstack/react-query").UseQueryResult<string | null, Error>;
    ensAvatarQuery: import("@tanstack/react-query").UseQueryResult<string | null, Error>;
    addressOrENS: string;
    pfp: string | null | undefined;
    name: string;
    shortAddress: string;
    balanceQuery: import("@tanstack/react-query").UseQueryResult<import("../../../wallets/utils/getWalletBalance.js").GetWalletBalanceResult>;
};
/**
 * Returns the wallet info for the provided wallet id.
 *
 * @example
 * ```tsx
 * import { useWalletInfo } from "thirdweb/react";
 *
 * const { data: walletInfo } = useWalletInfo("io.metamask");
 * console.log("Walelt name", walletInfo?.name);
 * ```
 * @wallet
 */
export declare function useWalletInfo(id: WalletId | undefined): import("@tanstack/react-query").UseQueryResult<WalletInfo, Error>;
/**
 * Returns the wallet icon for the provided wallet id.
 *
 * @example
 * ```tsx
 * import { useWalletImage } from "thirdweb/react";
 *
 * const { data: walletImage } = useWalletImage("io.metamask");
 *
 * return <img src={walletImage} alt="MetaMask logo" />;
 * ```
 *
 * @wallet
 */
export declare function useWalletImage(id: WalletId | undefined): import("@tanstack/react-query").UseQueryResult<string, Error>;
/**
 * @internal
 */
export declare function hasSponsoredTransactionsEnabled(wallet: Wallet | undefined): boolean;
//# sourceMappingURL=wallet.d.ts.map