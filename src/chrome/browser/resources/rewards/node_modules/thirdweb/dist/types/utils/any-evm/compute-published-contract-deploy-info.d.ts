import type { Chain } from "../../chains/types.js";
import type { ThirdwebClient } from "../../client/client.js";
import type { FetchDeployMetadataResult } from "./deploy-metadata.js";
/**
 * @internal
 */
export declare function computeDeploymentInfoFromContractId(args: {
    client: ThirdwebClient;
    chain: Chain;
    contractId: string;
    constructorParams: unknown[];
    publisher?: string;
    version?: string;
    salt?: string;
}): Promise<{
    bytecode: `0x${string}`;
    initBytecodeWithsalt: `0x${string}`;
    encodedArgs: `0x${string}`;
    create2FactoryAddress: string;
}>;
/**
 * @internal
 */
export declare function computeDeploymentInfoFromMetadata(args: {
    client: ThirdwebClient;
    chain: Chain;
    contractMetadata: FetchDeployMetadataResult;
    constructorParams: unknown[];
    salt?: string;
}): Promise<{
    bytecode: `0x${string}`;
    initBytecodeWithsalt: `0x${string}`;
    encodedArgs: `0x${string}`;
    create2FactoryAddress: string;
}>;
//# sourceMappingURL=compute-published-contract-deploy-info.d.ts.map