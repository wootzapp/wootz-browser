"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAll = getAll;
const getAllProposals_js_1 = require("../__generated__/Vote/read/getAllProposals.js");
const state_js_1 = require("../__generated__/Vote/read/state.js");
const types_js_1 = require("../types.js");
const getProposalVoteCounts_js_1 = require("./getProposalVoteCounts.js");
/**
 * Get all proposals from a Vote contract with some extra info attached for each proposal (current state and votes)
 * @extension VOTE
 * @returns An array containing proposals data
 *
 * @example
 * ```ts
 * import { getAll } from "thirdweb/extension/getAll";
 *
 * const allProposals = await getAll({ contract });
 * ```
 */
async function getAll(options) {
    const _proposals = await (0, getAllProposals_js_1.getAllProposals)(options);
    const _extraData = await Promise.all(_proposals.map((proposal) => {
        const params = {
            contract: options.contract,
            proposalId: proposal.proposalId,
        };
        return Promise.all([(0, state_js_1.state)(params), (0, getProposalVoteCounts_js_1.getProposalVoteCounts)(params)]);
    }));
    return _extraData.map(([state, votes], index) => {
        const data = _proposals[index];
        // We know `data` SHOULD exist but adding the error-throw below to make typescript happy
        if (!data) {
            throw new Error(`Proposal not found for index: ${index}`);
        }
        return {
            proposalId: data.proposalId,
            proposer: data.proposer,
            description: data.description,
            startBlock: data.startBlock,
            endBlock: data.endBlock,
            state: state,
            stateLabel: types_js_1.ProposalState[state],
            votes: votes,
            executions: data.targets.map((_, index) => ({
                toAddress: data.targets[index],
                nativeTokenValue: data.values[index],
                transactionData: data.calldatas[index],
            })),
        };
    });
}
//# sourceMappingURL=getAll.js.map