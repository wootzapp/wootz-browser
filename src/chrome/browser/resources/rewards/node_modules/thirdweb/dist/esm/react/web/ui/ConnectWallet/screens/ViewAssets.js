import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { iconSize } from "../../../../core/design-system/index.js";
import { Spacer } from "../../components/Spacer.js";
import Tabs from "../../components/Tabs.js";
import { Container, Line, ModalHeader } from "../../components/basic.js";
import { CoinsIcon } from "../icons/CoinsIcon.js";
import { ImageIcon } from "../icons/ImageIcon.js";
import { ViewNFTsContent } from "./ViewNFTs.js";
import { ViewTokensContent } from "./ViewTokens.js";
/**
 * @internal
 */
export function ViewAssets(props) {
    const [activeTab, setActiveTab] = useState("Tokens");
    const { connectLocale } = props;
    return (_jsxs(Container, { animate: "fadein", style: {
            minHeight: "300px",
        }, children: [_jsx(Container, { p: "lg", children: _jsx(ModalHeader, { title: connectLocale.viewFunds.title, onBack: props.onBack }) }), _jsx(Line, {}), _jsxs(Container, { px: "lg", scrollY: true, style: {
                    minHeight: "330px",
                }, children: [_jsx(Spacer, { y: "md" }), _jsx(Tabs, { options: [
                            {
                                label: (_jsxs("span", { className: "flex gap-2", children: [_jsx(CoinsIcon, { size: iconSize.sm }), " Tokens"] })),
                                value: "Tokens",
                            },
                            {
                                label: (_jsxs("span", { className: "flex gap-2", children: [_jsx(ImageIcon, { size: iconSize.sm }), " NFTs"] })),
                                value: "NFTs",
                            },
                        ], selected: activeTab, onSelect: setActiveTab, children: _jsxs(Container, { scrollY: true, style: {
                                maxHeight: "300px",
                            }, children: [activeTab === "Tokens" && (_jsx(ViewTokensContent, { client: props.client, connectLocale: connectLocale, supportedTokens: props.supportedTokens })), activeTab === "NFTs" && (_jsx(ViewNFTsContent, { supportedNFTs: props.supportedNFTs, client: props.client, theme: props.theme, connectLocale: connectLocale }))] }) }), _jsx(Spacer, { y: "lg" })] })] }));
}
//# sourceMappingURL=ViewAssets.js.map