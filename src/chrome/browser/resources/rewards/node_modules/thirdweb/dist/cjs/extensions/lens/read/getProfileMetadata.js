"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProfileMetadata = getProfileMetadata;
const polygon_js_1 = require("../../../chains/chain-definitions/polygon.js");
const contract_js_1 = require("../../../contract/contract.js");
const getProfile_js_1 = require("../__generated__/LensHub/read/getProfile.js");
const consts_js_1 = require("../consts.js");
/**
 * Download user lens profile from Arweave
 * This method does NOT give you the user handle & join-time - consider using `getFullProfileData` instead
 * It is useful & cost efficient if you only want to get user's name, bio, picture, coverPicture etc.
 *
 * @important The contract here is the LensHub contract
 * @param options
 * @returns LensProfileSchema | null
 * @extension LENS
 *
 * @example
 * ```ts
 * import { getProfileMetadata } from "thirdweb/extensions/lens";
 *
 * const profileData = await getProfileMetadata({ profileId, client });
 *
 * if (profileData) {
 *   console.log("Display name: ", profileData.lens.name);
 *   console.log("Bio: ", profileData.lens.bio);
 * }
 * ```
 */
async function getProfileMetadata(options) {
    const { client, profileId, overrides } = options;
    const lensHubContract = (0, contract_js_1.getContract)({
        address: overrides?.lensHubAddress || consts_js_1.LENS_HUB_ADDRESS,
        chain: overrides?.chain || polygon_js_1.polygon,
        client,
    });
    const profile = await (0, getProfile_js_1.getProfile)({
        contract: lensHubContract,
        profileId,
    }).catch(() => null);
    if (profile === null) {
        return profile;
    }
    if (!profile?.metadataURI) {
        return null;
    }
    const { download } = await Promise.resolve().then(() => require("../../../storage/download.js"));
    const res = await download({
        uri: profile.metadataURI,
        client,
    });
    const profileData = (await res.json()) || null;
    return profileData;
}
//# sourceMappingURL=getProfileMetadata.js.map