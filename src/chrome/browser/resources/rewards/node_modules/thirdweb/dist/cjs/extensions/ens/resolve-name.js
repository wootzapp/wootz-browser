"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveName = resolveName;
const ethereum_js_1 = require("../../chains/chain-definitions/ethereum.js");
const contract_js_1 = require("../../contract/contract.js");
const hex_js_1 = require("../../utils/encoding/hex.js");
const packetToBytes_js_1 = require("../../utils/ens/packetToBytes.js");
const withCache_js_1 = require("../../utils/promise/withCache.js");
const reverse_js_1 = require("./__generated__/UniversalResolver/read/reverse.js");
const constants_js_1 = require("./constants.js");
/**
 * Resolves the primary name for a specified address.
 * @param options - The options for resolving an ENS address.
 * @example
 * ```ts
 * import { resolveName } from "thirdweb/extensions/ens";
 * const name = await resolveName({
 *    client,
 *    address: "0x1234...",
 * });
 * ```
 * @extension ENS
 * @returns A promise that resolves to the Ethereum address.
 */
async function resolveName(options) {
    const { client, address, resolverAddress, resolverChain } = options;
    return (0, withCache_js_1.withCache)(async () => {
        const contract = (0, contract_js_1.getContract)({
            client,
            chain: resolverChain || ethereum_js_1.ethereum,
            address: resolverAddress || constants_js_1.UNIVERSAL_RESOLVER_ADDRESS,
        });
        const reverseName = (0, hex_js_1.toHex)((0, packetToBytes_js_1.packetToBytes)(`${address.toLowerCase().substring(2)}.addr.reverse`));
        const [name, resolvedAddress] = await (0, reverse_js_1.reverse)({
            contract,
            reverseName,
        }).catch((e) => {
            if ("data" in e && e.data === "0x7199966d") {
                return [null, address];
            }
            throw e;
        });
        if (address.toLowerCase() !== resolvedAddress.toLowerCase()) {
            return null;
        }
        return name;
    }, {
        cacheKey: `ens:name:${resolverChain?.id || 1}:${address}`,
        // 1min cache
        cacheTime: 60 * 1000,
    });
}
//# sourceMappingURL=resolve-name.js.map