{"version":3,"file":"static/js/48803.6a45f531.chunk.js","mappings":"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","sources":["../node_modules/thirdweb/src/react/web/wallets/ecosystem/EcosystemWalletHeader.tsx","../node_modules/thirdweb/src/react/web/wallets/ecosystem/EcosystemWalletFormUI.tsx","../node_modules/thirdweb/src/react/web/wallets/ecosystem/EcosystemWalletConnectUI.tsx"],"sourcesContent":["\"use client\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport type { EcosystemWalletId } from \"../../../../wallets/wallet-types.js\";\nimport { iconSize, radius } from \"../../../core/design-system/index.js\";\nimport { useWalletInfo } from \"../../../core/utils/wallet.js\";\nimport { Img } from \"../../ui/components/Img.js\";\nimport { Skeleton } from \"../../ui/components/Skeleton.js\";\nimport { ModalHeader } from \"../../ui/components/basic.js\";\nimport { ModalTitle } from \"../../ui/components/modalElements.js\";\n\n/**\n * @internal\n */\nexport function EcosystemWalletHeader(props: {\n  wallet: Wallet<EcosystemWalletId>;\n  client: ThirdwebClient;\n  onBack?: () => void;\n}) {\n  const walletInfo = useWalletInfo(props.wallet.id);\n\n  return (\n    <ModalHeader\n      onBack={props.onBack}\n      title={\n        <>\n          {walletInfo.isLoading ? (\n            <Skeleton height=\"24px\" width=\"200px\" />\n          ) : (\n            <>\n              {!walletInfo.data?.image_id ? null : (\n                <Img\n                  src={walletInfo.data?.image_id}\n                  style={{\n                    borderRadius: radius.sm,\n                  }}\n                  width={iconSize.md}\n                  height={iconSize.md}\n                  client={props.client}\n                />\n              )}\n              <ModalTitle>{walletInfo.data?.name}</ModalTitle>\n            </>\n          )}\n        </>\n      }\n      leftAligned\n    />\n  );\n}\n","\"use client\";\nimport { useState } from \"react\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport type { EcosystemWalletId } from \"../../../../wallets/wallet-types.js\";\nimport { TOS } from \"../../ui/ConnectWallet/Modal/TOS.js\";\nimport { useScreenContext } from \"../../ui/ConnectWallet/Modal/screen.js\";\nimport { PoweredByThirdweb } from \"../../ui/ConnectWallet/PoweredByTW.js\";\nimport type { ConnectLocale } from \"../../ui/ConnectWallet/locale/types.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { Container, ModalHeader } from \"../../ui/components/basic.js\";\nimport { ConnectWalletSocialOptions } from \"../shared/ConnectWalletSocialOptions.js\";\nimport type { InAppWalletLocale } from \"../shared/locale/types.js\";\nimport { EcosystemWalletHeader } from \"./EcosystemWalletHeader.js\";\n\nexport type EcosystemWalletFormUIProps = {\n  select: () => void;\n  done: () => void;\n  locale: InAppWalletLocale;\n  wallet: Wallet<EcosystemWalletId>;\n  goBack?: () => void;\n  size: \"compact\" | \"wide\";\n  meta: {\n    title?: string;\n    titleIconUrl?: string;\n    showThirdwebBranding?: boolean;\n    termsOfServiceUrl?: string;\n    privacyPolicyUrl?: string;\n    requireApproval?: boolean;\n  };\n  client: ThirdwebClient;\n  chain: Chain | undefined;\n  connectLocale: ConnectLocale;\n  isLinking?: boolean;\n};\n\n/**\n * @internal\n */\nexport function EcosystemWalletFormUIScreen(props: EcosystemWalletFormUIProps) {\n  const isCompact = props.size === \"compact\";\n  const { initialScreen, screen } = useScreenContext();\n  // This is only used when requireApproval is true to accept the TOS\n  const [isApproved, setIsApproved] = useState(false);\n\n  const onBack =\n    screen === props.wallet && initialScreen === props.wallet\n      ? undefined\n      : props.goBack;\n\n  return (\n    <Container\n      fullHeight\n      flex=\"column\"\n      p=\"lg\"\n      animate=\"fadein\"\n      style={{\n        minHeight: \"250px\",\n      }}\n    >\n      {props.isLinking ? (\n        <ModalHeader\n          title={props.connectLocale.manageWallet.linkProfile}\n          onBack={onBack}\n        />\n      ) : (\n        <EcosystemWalletHeader\n          client={props.client}\n          onBack={isCompact ? onBack : undefined}\n          wallet={props.wallet}\n        />\n      )}\n      <Spacer y=\"lg\" />\n\n      <Container\n        expand\n        flex=\"column\"\n        center=\"y\"\n        p={isCompact ? undefined : \"lg\"}\n      >\n        <ConnectWalletSocialOptions\n          disabled={props.meta.requireApproval && !isApproved}\n          {...props}\n        />\n      </Container>\n\n      {isCompact &&\n        (props.meta.showThirdwebBranding !== false ||\n          props.meta.termsOfServiceUrl ||\n          props.meta.privacyPolicyUrl) && <Spacer y=\"xl\" />}\n\n      <Container flex=\"column\" gap=\"lg\">\n        <TOS\n          termsOfServiceUrl={props.meta.termsOfServiceUrl}\n          privacyPolicyUrl={props.meta.privacyPolicyUrl}\n          locale={props.connectLocale.agreement}\n          requireApproval={props.meta.requireApproval}\n          onApprove={() => {\n            setIsApproved(!isApproved);\n          }}\n          isApproved={isApproved}\n        />\n\n        {props.meta.showThirdwebBranding !== false && <PoweredByThirdweb />}\n      </Container>\n    </Container>\n  );\n}\n","\"use client\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport type { EcosystemWalletId } from \"../../../../wallets/wallet-types.js\";\nimport {\n  useSelectionData,\n  useSetSelectionData,\n} from \"../../providers/wallet-ui-states-provider.js\";\nimport type { ConnectLocale } from \"../../ui/ConnectWallet/locale/types.js\";\nimport { useInAppWalletLocale } from \"../in-app/useInAppWalletLocale.js\";\nimport type { ConnectWalletSelectUIState } from \"../shared/ConnectWalletSocialOptions.js\";\nimport { LoadingScreen } from \"../shared/LoadingScreen.js\";\nimport { OTPLoginUI } from \"../shared/OTPLoginUI.js\";\nimport { PassKeyLogin } from \"../shared/PassKeyLogin.js\";\nimport { SocialLogin } from \"../shared/SocialLogin.js\";\nimport { EcosystemWalletFormUIScreen } from \"./EcosystemWalletFormUI.js\";\n\n/**\n *\n * @internal\n */\nfunction EcosystemWalletConnectUI(props: {\n  wallet: Wallet<EcosystemWalletId>;\n  done: () => void;\n  goBack?: () => void;\n  client: ThirdwebClient;\n  chain: Chain | undefined;\n  connectLocale: ConnectLocale;\n  size: \"compact\" | \"wide\";\n  meta: {\n    title?: string;\n    titleIconUrl?: string;\n    showThirdwebBranding?: boolean;\n    termsOfServiceUrl?: string;\n    privacyPolicyUrl?: string;\n  };\n  isLinking?: boolean;\n}) {\n  const data = useSelectionData();\n  const setSelectionData = useSetSelectionData();\n  const state = data as ConnectWalletSelectUIState;\n  const localeId = props.connectLocale.id;\n  const locale = useInAppWalletLocale(localeId);\n\n  if (!locale) {\n    return <LoadingScreen />;\n  }\n\n  const goBackToMain =\n    props.size === \"compact\"\n      ? props.goBack\n      : () => {\n          setSelectionData({});\n        };\n\n  const done = () => {\n    props.done();\n    setSelectionData({});\n  };\n\n  const otpUserInfo = state?.emailLogin\n    ? { email: state.emailLogin }\n    : state?.phoneLogin\n      ? { phone: state.phoneLogin }\n      : undefined;\n\n  if (otpUserInfo) {\n    return (\n      <OTPLoginUI\n        userInfo={otpUserInfo}\n        locale={locale}\n        done={done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n        chain={props.chain}\n        client={props.client}\n        size={props.size}\n        isLinking={props.isLinking}\n      />\n    );\n  }\n\n  if (state?.passkeyLogin) {\n    return (\n      <PassKeyLogin\n        locale={props.connectLocale}\n        wallet={props.wallet}\n        done={done}\n        onBack={goBackToMain}\n        chain={props.chain}\n        client={props.client}\n        size={props.size}\n        isLinking={props.isLinking}\n      />\n    );\n  }\n\n  if (state?.socialLogin) {\n    return (\n      <SocialLogin\n        socialAuth={state.socialLogin.type}\n        locale={locale}\n        done={done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n        state={state}\n        chain={props.chain}\n        client={props.client}\n        size={props.size}\n        connectLocale={props.connectLocale}\n        isLinking={props.isLinking}\n      />\n    );\n  }\n\n  return (\n    <EcosystemWalletFormUIScreen\n      select={() => {}}\n      locale={locale}\n      done={done}\n      goBack={props.goBack}\n      wallet={props.wallet}\n      chain={props.chain}\n      client={props.client}\n      size={props.size}\n      connectLocale={props.connectLocale}\n      meta={props.meta}\n      isLinking={props.isLinking}\n    />\n  );\n}\n\nexport default EcosystemWalletConnectUI;\n"],"names":["EcosystemWalletHeader","props","walletInfo","useWalletInfo","wallet","id","_jsx","ModalHeader","onBack","title","_Fragment","children","isLoading","Skeleton","height","width","_jsxs","data","image_id","Img","src","style","borderRadius","radius","sm","iconSize","md","client","ModalTitle","name","leftAligned","EcosystemWalletFormUIScreen","isCompact","size","initialScreen","screen","useScreenContext","isApproved","setIsApproved","useState","undefined","goBack","Container","fullHeight","flex","p","animate","minHeight","isLinking","connectLocale","manageWallet","linkProfile","Spacer","y","expand","center","ConnectWalletSocialOptions","disabled","meta","requireApproval","showThirdwebBranding","termsOfServiceUrl","privacyPolicyUrl","gap","TOS","locale","agreement","onApprove","PoweredByThirdweb","useSelectionData","setSelectionData","useSetSelectionData","state","localeId","useInAppWalletLocale","LoadingScreen","goBackToMain","done","otpUserInfo","emailLogin","email","phoneLogin","phone","OTPLoginUI","userInfo","chain","passkeyLogin","PassKeyLogin","socialLogin","SocialLogin","socialAuth","type","select"],"sourceRoot":""}