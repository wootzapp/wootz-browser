"use strict";(self.webpackChunkrewards=self.webpackChunkrewards||[]).push([[64621],{64621:(a,e,t)=>{t.d(e,{fulfillRequest:()=>n});var s=t(51784);async function n(a){const{wallet:e,walletConnectClient:n,thirdwebClient:i,event:{topic:r,id:c,params:{chainId:o,request:h}},handlers:d}=a,l=e.getAccount();if(!l)throw new Error("No account connected to provided wallet");let p;try{switch(h.method){case"personal_sign":if(d?.personal_sign)p=await d.personal_sign({account:l,params:h.params});else{const{handleSignRequest:a}=await Promise.resolve().then(t.bind(t,1558));p=await a({account:l,params:h.params})}break;case"eth_sign":if(d?.eth_sign)p=await d.eth_sign({account:l,params:h.params});else{const{handleSignRequest:a}=await Promise.resolve().then(t.bind(t,1558));p=await a({account:l,params:h.params})}break;case"eth_signTypedData":if(d?.eth_signTypedData)p=await d.eth_signTypedData({account:l,params:h.params});else{const{handleSignTypedDataRequest:a}=await Promise.resolve().then(t.bind(t,57904));p=await a({account:l,params:h.params})}break;case"eth_signTypedData_v4":if(d?.eth_signTypedData_v4)p=await d.eth_signTypedData_v4({account:l,params:h.params});else{const{handleSignTypedDataRequest:a}=await Promise.resolve().then(t.bind(t,57904));p=await a({account:l,params:h.params})}break;case"eth_signTransaction":if(d?.eth_signTransaction)p=await d.eth_signTransaction({account:l,params:h.params});else{const{handleSignTransactionRequest:a}=await Promise.resolve().then(t.bind(t,15599));p=await a({account:l,params:h.params})}break;case"eth_sendTransaction":{const a=(0,s.p)(o);if(d?.eth_sendTransaction)p=await d.eth_sendTransaction({account:l,chainId:a,params:h.params});else{const{handleSendTransactionRequest:e}=await Promise.resolve().then(t.bind(t,68624));p=await e({account:l,chainId:a,thirdwebClient:i,params:h.params})}break}case"eth_sendRawTransaction":{const a=(0,s.p)(o);if(d?.eth_sendRawTransaction)p=await d.eth_sendRawTransaction({account:l,chainId:a,params:h.params});else{const{handleSendRawTransactionRequest:e}=await Promise.resolve().then(t.bind(t,99003));p=await e({account:l,chainId:a,params:h.params})}break}case"wallet_addEthereumChain":if(!d?.wallet_addEthereumChain)throw new Error("Unsupported request method: wallet_addEthereumChain");p=await d.wallet_addEthereumChain({wallet:e,params:h.params});break;case"wallet_switchEthereumChain":if(d?.wallet_switchEthereumChain)p=await d.wallet_switchEthereumChain({wallet:e,params:h.params});else{const{handleSwitchChain:a}=await Promise.resolve().then(t.bind(t,27795));p=await a({wallet:e,params:h.params})}break;default:{const a=d?.[h.method];if(!a)throw new Error(`Unsupported request method: ${h.method}`);p=await a({account:l,chainId:(0,s.p)(o),params:h.params})}}}catch(w){p={code:"object"===typeof w&&null!==w&&"code"in w?w.code:500,message:"object"===typeof w&&null!==w&&"message"in w?w.message:"Unknown error"}}n.respond({topic:r,response:{id:c,jsonrpc:"2.0",result:p}})}}}]);
//# sourceMappingURL=64621.43865043.chunk.js.map