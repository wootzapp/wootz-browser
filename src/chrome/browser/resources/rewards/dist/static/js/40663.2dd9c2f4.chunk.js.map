{"version":3,"file":"static/js/40663.2dd9c2f4.chunk.js","mappings":"uKAwEA,QA5DA,SAAoCA,GAWlC,MAAM,OAAEC,EAAM,KAAEC,EAAI,OAAEC,EAAM,WAAEC,EAAU,aAAEC,EAAY,OAAEC,GAAWN,GAC5DO,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,GAEjDC,GAAUC,EAAAA,EAAAA,cAAY,KAC1BH,GAAmB,GACnBL,EACGO,QAAQ,CACPE,OAAQZ,EAAMY,OACdC,MAAOb,EAAMa,QAEdC,MAAK,KACJZ,GAAM,IAEPa,OAAOC,IACNC,QAAQC,MAAMF,GACdR,GAAmB,EAAK,GACxB,GACH,CAACR,EAAMY,OAAQT,EAAQH,EAAMa,MAAOX,IAEjCiB,GAAcC,EAAAA,EAAAA,SAAO,GAS3B,OARAC,EAAAA,EAAAA,YAAU,KACJF,EAAYG,UAGhBH,EAAYG,SAAU,EACtBZ,IAAS,GACR,CAACA,KAGFa,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACflB,OAAQ,CACNmB,eAAgBnB,EAAOmB,eACvBC,YAAapB,EAAOqB,iBAAiBD,YACrCE,SAAUtB,EAAOqB,iBAAiBE,MAClCC,WAAYxB,EAAOqB,iBAAiBG,WACpCC,OAAQzB,EAAOqB,iBAAiBI,QAElC9B,OAAQA,EACR+B,WAAY5B,EAAW6B,KACvBC,SAAU/B,EAAOgC,GACjB5B,gBAAiBA,EACjB6B,QAAS1B,EACTL,aAAcA,EACdO,OAAQZ,EAAMY,OACdyB,KAAMrC,EAAMqC,MAGlB,C","sources":["../node_modules/thirdweb/src/react/web/wallets/shared/CoinbaseSDKConnection.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { COINBASE } from \"../../../../wallets/constants.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport type { WalletInfo } from \"../../../../wallets/wallet-info.js\";\nimport type { InjectedWalletLocale } from \"../injected/locale/types.js\";\nimport { ConnectingScreen } from \"./ConnectingScreen.js\";\n\n/**\n * @internal\n */\nfunction CoinbaseSDKWalletConnectUI(props: {\n  onBack?: () => void;\n  onGetStarted: () => void;\n  done: () => void;\n  locale: InjectedWalletLocale;\n  wallet: Wallet<typeof COINBASE>;\n  walletInfo: WalletInfo;\n  client: ThirdwebClient;\n  chain: Chain | undefined;\n  size: \"compact\" | \"wide\";\n}) {\n  const { onBack, done, wallet, walletInfo, onGetStarted, locale } = props;\n  const [errorConnecting, setErrorConnecting] = useState(false);\n\n  const connect = useCallback(() => {\n    setErrorConnecting(false);\n    wallet\n      .connect({\n        client: props.client,\n        chain: props.chain,\n      })\n      .then(() => {\n        done();\n      })\n      .catch((e) => {\n        console.error(e);\n        setErrorConnecting(true);\n      });\n  }, [props.client, wallet, props.chain, done]);\n\n  const scanStarted = useRef(false);\n  useEffect(() => {\n    if (scanStarted.current) {\n      return;\n    }\n    scanStarted.current = true;\n    connect();\n  }, [connect]);\n\n  return (\n    <ConnectingScreen\n      locale={{\n        getStartedLink: locale.getStartedLink,\n        instruction: locale.connectionScreen.instruction,\n        tryAgain: locale.connectionScreen.retry,\n        inProgress: locale.connectionScreen.inProgress,\n        failed: locale.connectionScreen.failed,\n      }}\n      onBack={onBack}\n      walletName={walletInfo.name}\n      walletId={wallet.id}\n      errorConnecting={errorConnecting}\n      onRetry={connect}\n      onGetStarted={onGetStarted}\n      client={props.client}\n      size={props.size}\n    />\n  );\n}\n\nexport default CoinbaseSDKWalletConnectUI;\n"],"names":["props","onBack","done","wallet","walletInfo","onGetStarted","locale","errorConnecting","setErrorConnecting","useState","connect","useCallback","client","chain","then","catch","e","console","error","scanStarted","useRef","useEffect","current","_jsx","ConnectingScreen","getStartedLink","instruction","connectionScreen","tryAgain","retry","inProgress","failed","walletName","name","walletId","id","onRetry","size"],"sourceRoot":""}