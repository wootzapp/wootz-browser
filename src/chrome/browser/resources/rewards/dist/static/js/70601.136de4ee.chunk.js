"use strict";(self.webpackChunkrewards=self.webpackChunkrewards||[]).push([[70601,93431],{93431:(e,t,a)=>{function i(e){let t=[`${e.domain} wants you to sign in with your Ethereum account:`,e.address].join("\n");t=[t,e.statement].join("\n\n"),e.statement&&(t+="\n");const a=[];if(e.uri){const t=`URI: ${e.uri}`;a.push(t)}const i=`Version: ${e.version}`;if(a.push(i),e.chain_id){const t=`Chain ID: ${e.chain_id}`||"1";a.push(t)}const n=`Nonce: ${e.nonce}`;a.push(n);const s=`Issued At: ${e.issued_at}`;a.push(s);const r=`Expiration Time: ${e.expiration_time}`;if(a.push(r),e.invalid_before){const t=`Not Before: ${e.invalid_before}`;a.push(t)}e.resources&&a.push(["Resources:",...e.resources.map((e=>`- ${e}`))].join("\n"));return[t,a.join("\n")].join("\n")}async function n(e){const{payload:t,account:a}=e;return{signature:await a.signMessage({message:i(t)}),payload:t}}a.r(t),a.d(t,{signLoginPayload:()=>n})},17749:(e,t,a)=>{async function i(e,t){return await e({method:"eth_sendRawTransaction",params:[t]})}a.d(t,{B:()=>i})},70601:(e,t,a)=>{a.r(t),a.d(t,{InAppWebConnector:()=>G});var i=a(18342),n=a(22318),s=a(49703),r=a(3340);function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:32;return(0,r.EY)(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:32;return globalThis.crypto.getRandomValues(new Uint8Array(e))}(e))}var c=a(89953),l=a(86085);function d(){return`${(0,i.Wg)("inAppWallet")}/api/2024-05-05/login/passkey/callback`}function h(e,t){return`${(0,i.Wg)("inAppWallet")}/api/2024-05-05/login/passkey?type=${e}${t?`&username=${t}`:""}`}async function u(e){if(!e.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const t=new c.t({storage:e.storage,clientId:e.client.clientId,ecosystemId:e.ecosystem?.id}),a=(0,s.KI)(e.client,e.ecosystem),i=e.username??(n=e.ecosystem,`${n?.id??"wallet"}-${(new Date).toISOString()}`);var n;const r=await a(h("sign-up",i)),o=await r.json();if(!o.challenge)throw new Error("No challenge received");const l=o.challenge,u=await e.passkeyClient.register({name:i,challenge:l,rp:e.rp}),p={};e.ecosystem?.partnerId&&(p["x-ecosystem-partner-id"]=e.ecosystem.partnerId),e.ecosystem?.id&&(p["x-ecosystem-id"]=e.ecosystem.id);const y=await a(d(),{method:"POST",headers:{"Content-Type":"application/json",...p},body:JSON.stringify({type:"sign-up",authenticatorData:u.authenticatorData,credentialId:u.credentialId,serverVerificationId:o.serverVerificationId,clientData:u.clientData,username:i,credential:{publicKey:u.credential.publicKey,algorithm:u.credential.algorithm},origin:u.origin,rpId:e.rp.id})}),m=await y.json();if(!m||!m.storedToken)throw new Error(`Error verifying passkey: ${m.message??"unknown error"}`);return await t.savePasskeyCredentialId(u.credentialId),m}var p=a(93431);var y=a(35770);async function m(e){let{authToken:t,client:a,ecosystem:n}=e;const r=(0,s.KI)(a,n),o=await r(`${(0,i.Wg)("inAppWallet")}/api/2024-05-05/accounts`,{method:"GET",headers:{"Content-Type":"application/json","x-thirdweb-client-id":a.clientId,Authorization:`Bearer embedded-wallet-token:${t}`}});if(!o.ok){if(401===o.status)return;const e=await o.json();throw new Error(`Failed to get user status: ${e.error}`)}return await o.json()}var w=a(387);function g(e){return new Promise((t=>{setTimeout(t,1e3*e)}))}const f={height:"100%",width:"100%",border:"none",backgroundColor:"transparent",colorScheme:"light",position:"fixed",top:"0px",right:"0px",zIndex:"2147483646",display:"none",pointerEvents:"all"},I=new Map;class b{constructor(e){let{link:t,baseUrl:a,iframeId:i,container:n=document.body,onIframeInitialize:s}=e;Object.defineProperty(this,"iframe",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"POLLING_INTERVAL_SECONDS",{enumerable:!0,configurable:!0,writable:!0,value:1.4}),Object.defineProperty(this,"iframeBaseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.iframeBaseUrl=a;let r=document.getElementById(i);const o=new URL(t);if(!r||r.src!==o.href){r=document.createElement("iframe");const e={...f};Object.assign(r.style,e),r.setAttribute("id",i),r.setAttribute("fetchpriority","high"),n.appendChild(r),r.src=o.href;const t=e=>{if("ewsIframeLoaded"===e.data.eventType){if(window.removeEventListener("message",t),!r)return void console.warn("thirdweb iFrame not found");this.onIframeLoadHandler(r,s)()}};window.addEventListener("message",t)}this.iframe=r}async onIframeLoadedInitVariables(){return{}}onIframeLoadHandler(e,t){return async()=>{const a=new MessageChannel,i=new Promise(((i,n)=>{a.port1.onmessage=s=>{const{data:r}=s;a.port1.close(),r.success||n(new Error(r.error)),I.set(e.src,!0),t&&t(),i(!0)}}));e?.contentWindow?.postMessage({eventType:"initIframe",data:await this.onIframeLoadedInitVariables()},this.iframeBaseUrl,[a.port2]),await i}}async call(e){let{procedureName:t,params:a,showIframe:i=!1}=e;for(;!I.get(this.iframe.src);)await g(this.POLLING_INTERVAL_SECONDS);i&&(this.iframe.style.display="block",await g(.005));const n=new MessageChannel,s=new Promise(((e,t)=>{n.port1.onmessage=async a=>{const{data:s}=a;n.port1.close(),i&&(await g(.1),this.iframe.style.display="none"),s.success?e(s.data):t(new Error(s.error))}}));return this.iframe.contentWindow?.postMessage({eventType:t,data:a},this.iframeBaseUrl,[n.port2]),s}destroy(){I.delete(this.iframe.src)}}class v extends b{constructor(e){let{clientId:t,baseUrl:a,ecosystem:i}=e;super({iframeId:k+(i?.id||""),link:L({clientId:t,path:w.CW,ecosystem:i,baseUrl:a}).href,baseUrl:a,container:document.body}),Object.defineProperty(this,"clientId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.clientId=t,this.ecosystem=i}async onIframeLoadedInitVariables(){const e=new c.t({storage:n.n,clientId:this.clientId,ecosystemId:this.ecosystem?.id});return{authCookie:await e.getAuthCookie(),deviceShareStored:await e.getDeviceShare(),walletUserId:await e.getWalletUserId(),clientId:this.clientId,partnerId:this.ecosystem?.partnerId,ecosystemId:this.ecosystem?.id}}}function L(e){let{clientId:t,baseUrl:a,path:i,ecosystem:n,queryParams:s}=e;const r=new URL(`${i}`,a);if(s)for(const o of Object.keys(s))r.searchParams.set(o,s[o]?.toString()||"");return r.searchParams.set("clientId",t),void 0!==n?.partnerId&&r.searchParams.set("partnerId",n.partnerId),void 0!==n?.id&&r.searchParams.set("ecosystemId",n.id),r}const k="thirdweb-in-app-wallet-iframe";class E{constructor(e){let{baseUrl:t,querier:a,preLogin:i,postLogin:n,client:s,ecosystem:r}=e;Object.defineProperty(this,"LoginQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"preLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"postLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"baseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.baseUrl=t,this.LoginQuerier=a,this.preLogin=i,this.postLogin=n,this.client=s,this.ecosystem=r}async sendEmailLoginOtp(e){let{email:t}=e;return await this.LoginQuerier.call({procedureName:"sendThirdwebEmailLoginOtp",params:{email:t}})}async sendSmsLoginOtp(e){let{phoneNumber:t}=e;return await this.LoginQuerier.call({procedureName:"sendThirdwebSmsLoginOtp",params:{phoneNumber:t}})}}class W extends E{async authenticateWithModal(){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:void 0,showIframe:!0})}async loginWithModal(){await this.preLogin();const e=await this.authenticateWithModal();return this.postLogin(e)}async authenticateWithIframe(e){let{email:t}=e;return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:{email:t},showIframe:!0})}async loginWithIframe(e){let{email:t}=e;await this.preLogin();const a=await this.authenticateWithIframe({email:t});return this.postLogin(a)}async authenticateWithCustomJwt(e){let{encryptionKey:t,jwt:a}=e;if(!t||0===t.length)throw new Error("Encryption key is required for custom jwt auth");return this.LoginQuerier.call({procedureName:"loginWithCustomJwt",params:{encryptionKey:t,jwt:a}})}async loginWithCustomJwt(e){let{encryptionKey:t,jwt:a}=e;if(!t||0===t.length)throw new Error("Encryption key is required for custom jwt auth");await this.preLogin();const i=await this.authenticateWithCustomJwt({encryptionKey:t,jwt:a});return this.postLogin(i)}async authenticateWithCustomAuthEndpoint(e){let{encryptionKey:t,payload:a}=e;return this.LoginQuerier.call({procedureName:"loginWithCustomAuthEndpoint",params:{encryptionKey:t,payload:a}})}async loginWithCustomAuthEndpoint(e){let{encryptionKey:t,payload:a}=e;if(!t||0===t.length)throw new Error("Encryption key is required for custom auth");await this.preLogin();const i=await this.authenticateWithCustomAuthEndpoint({encryptionKey:t,payload:a});return this.postLogin(i)}async authenticateWithEmailOtp(e){let{email:t,otp:a,recoveryCode:i}=e;return this.LoginQuerier.call({procedureName:"verifyThirdwebEmailLoginOtp",params:{email:t,otp:a,recoveryCode:i}})}async loginWithEmailOtp(e){let{email:t,otp:a,recoveryCode:i}=e;const n=await this.authenticateWithEmailOtp({email:t,otp:a,recoveryCode:i});return this.postLogin(n)}async authenticateWithSmsOtp(e){let{phoneNumber:t,otp:a,recoveryCode:i}=e;return this.LoginQuerier.call({procedureName:"verifyThirdwebSmsLoginOtp",params:{phoneNumber:t,otp:a,recoveryCode:i}})}async loginWithSmsOtp(e){let{phoneNumber:t,otp:a,recoveryCode:i}=e;const n=await this.authenticateWithSmsOtp({phoneNumber:t,otp:a,recoveryCode:i});return this.postLogin(n)}}class T{constructor(e){let{client:t,querier:a,onAuthSuccess:i,ecosystem:s,baseUrl:r}=e;Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"AuthQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onAuthSuccess",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"BaseLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=t,this.ecosystem=s,this.AuthQuerier=a,this.localStorage=new c.t({storage:n.n,clientId:t.clientId,ecosystemId:s?.id}),this.onAuthSuccess=i,this.BaseLogin=new W({postLogin:async e=>this.postLogin(e),preLogin:async()=>{await this.preLogin()},ecosystem:s,querier:a,client:t,baseUrl:r})}async preLogin(){await this.logout()}async postLogin(e){let{storedToken:t,walletDetails:a}=e;t.shouldStoreCookieString&&await this.localStorage.saveAuthCookie(t.cookieString);return await this.onAuthSuccess({storedToken:t,walletDetails:a})}async loginWithAuthToken(e,t){await this.preLogin();const a=await m({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});if(!a)throw new Error("Cannot login, no user found for auth token");if(a.wallets.length>0&&"enclave"===a.wallets[0]?.type)return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:a.wallets[0].address}});if(0===a.wallets.length&&this.ecosystem){const t=await async function(e){let{authToken:t,client:a,ecosystem:n}=e;const r=(0,s.KI)(a,n),o=await r(`${(0,i.Wg)("inAppWallet")}/api/v1/enclave-wallet/generate`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":a.clientId,Authorization:`Bearer embedded-wallet-token:${t}`}});if(!o.ok)throw new Error("Failed to generate wallet");const{wallet:c}=await o.json();return c}({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:t.address}})}const n=await this.AuthQuerier.call({procedureName:"loginWithStoredTokenDetails",params:{storedToken:e.storedToken,recoveryCode:t}});return this.postLogin(n)}async loginWithModal(){return this.BaseLogin.loginWithModal()}async authenticateWithModal(){return this.BaseLogin.authenticateWithModal()}async loginWithIframe(e){return this.BaseLogin.loginWithIframe(e)}async authenticateWithIframe(e){return this.BaseLogin.authenticateWithIframe(e)}async loginWithCustomJwt(e){return this.BaseLogin.loginWithCustomJwt(e)}async authenticateWithCustomJwt(e){return this.BaseLogin.authenticateWithCustomJwt(e)}async loginWithCustomAuthEndpoint(e){return this.BaseLogin.loginWithCustomAuthEndpoint(e)}async authenticateWithCustomAuthEndpoint(e){return this.BaseLogin.authenticateWithCustomAuthEndpoint(e)}async sendEmailLoginOtp(e){let{email:t}=e;return this.BaseLogin.sendEmailLoginOtp({email:t})}async sendSmsLoginOtp(e){let{phoneNumber:t}=e;return this.BaseLogin.sendSmsLoginOtp({phoneNumber:t})}async loginWithEmailOtp(e){return await this.preLogin(),this.BaseLogin.loginWithEmailOtp(e)}async authenticateWithEmailOtp(e){return this.BaseLogin.authenticateWithEmailOtp(e)}async loginWithSmsOtp(e){return await this.preLogin(),this.BaseLogin.loginWithSmsOtp(e)}async authenticateWithSmsOtp(e){return this.BaseLogin.authenticateWithSmsOtp(e)}async logout(){const e=await this.localStorage.removeAuthCookie(),t=await this.localStorage.removeWalletUserId();return{success:e||t}}}var O=a(9142);const P=async e=>{const{client:t,ecosystem:a}=e,i=(0,l.K)({authOption:e.strategy,client:e.client,ecosystem:e.ecosystem}),n={"Content-Type":"application/json","x-client-id":t.clientId};a?.id&&(n["x-ecosystem-id"]=a.id),a?.partnerId&&(n["x-ecosystem-partner-id"]=a.partnerId);const s=(()=>{switch(e.strategy){case"email":return{email:e.email,code:e.verificationCode};case"phone":return{phone:e.phoneNumber,code:e.verificationCode}}})(),r=await fetch(i,{method:"POST",headers:n,body:JSON.stringify(s)});if(!r.ok)throw new Error("Failed to verify verification code");return await r.json()};var A=a(84117),S=a(9893),C=a(17749),j=a(72364),N=a(83423),D=a(93300),_=a(77717);async function U(e,t){return new c.t({storage:n.n,clientId:e.clientId,ecosystemId:t?.id}).getAuthCookie()}class ${constructor(e){let{client:t,ecosystem:a,address:i}=e;Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=t,this.ecosystem=a,this.address=i,this.localStorage=new c.t({storage:n.n,clientId:t.clientId,ecosystemId:a?.id})}async postWalletSetUp(e){let{walletAddress:t,authToken:a}=e;return await this.localStorage.saveAuthCookie(a),{walletAddress:t}}async getUserWalletStatus(){const e=await this.localStorage.getAuthCookie();if(!e)return{status:y.P1.LOGGED_OUT};const t=await m({authToken:e,client:this.client,ecosystem:this.ecosystem});if(!t)return{status:y.P1.LOGGED_OUT};const a=t.wallets[0],i={email:t.linkedAccounts.find((e=>void 0!==e.details.email))?.details.email,phoneNumber:t.linkedAccounts.find((e=>void 0!==e.details.phone))?.details.phone,userWalletId:t.id||"",recoveryShareManagement:y.Q.ENCLAVE};return a?{status:y.P1.LOGGED_IN_WALLET_INITIALIZED,walletAddress:a.address,authDetails:i,account:await this.getAccount()}:{status:y.P1.LOGGED_IN_WALLET_UNINITIALIZED,authDetails:i}}async getAccount(){const e=this.client,t=this.ecosystem,n=async n=>{const o=(0,j.getRpcClient)({client:e,chain:(0,S.Q4)(n.chainId)}),c={to:n.to??void 0,data:n.data?(0,r.nj)(n.data):void 0,value:n.value?(0,r.nj)(n.value):void 0,gas:n.gas?(0,r.nj)(n.gas+n.gas/BigInt(10)):void 0,nonce:n.nonce?(0,r.nj)(n.nonce):(0,r.nj)(await a.e(37338).then(a.bind(a,37338)).then((e=>{let{eth_getTransactionCount:t}=e;return t(o,{address:this.address,blockTag:"pending"})}))),chainId:(0,r.nj)(n.chainId)};return n.maxFeePerGas?(c.maxFeePerGas=(0,r.nj)(n.maxFeePerGas),c.maxPriorityFeePerGas=n.maxPriorityFeePerGas?(0,r.nj)(n.maxPriorityFeePerGas):void 0,c.type=2):(c.gasPrice=n.gasPrice?(0,r.nj)(n.gasPrice):void 0,c.type=0),async function(e){let{client:t,ecosystem:a,payload:n}=e;console.log("payload",n);const r=(0,s.KI)(t,a),o=await U(t,a),c=await r(`${(0,i.Wg)("inAppWallet")}/api/v1/enclave-wallet/sign-transaction`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":t.clientId,Authorization:`Bearer embedded-wallet-token:${o}`},body:(0,_.A)({transactionPayload:n})});if(!c.ok)throw new Error("Failed to sign transaction");return(await c.json()).signature}({client:e,ecosystem:t,payload:c})};return{address:(0,N.bv)(this.address),async signTransaction(e){if(!e.chainId)throw new Error("chainId required in tx to sign");return n({chainId:e.chainId,...e})},async sendTransaction(t){const a=(0,j.getRpcClient)({client:e,chain:(0,S.Q4)(t.chainId)}),i=await n(t);return{transactionHash:await(0,C.B)(a,i)}},async signMessage(a){let{message:n}=a;const r="string"===typeof n?{message:n,isRaw:!1}:{message:"string"===typeof n.raw?n.raw:(0,A.My)(n.raw),isRaw:!0},{signature:o}=await async function(e){let{client:t,ecosystem:a,payload:{message:n,isRaw:r}}=e;const o=(0,s.KI)(t,a),c=await U(t,a),l=await o(`${(0,i.Wg)("inAppWallet")}/api/v1/enclave-wallet/sign-message`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":t.clientId,Authorization:`Bearer embedded-wallet-token:${c}`},body:(0,_.A)({messagePayload:{message:n,isRaw:r}})});if(!l.ok)throw new Error("Failed to sign message");return await l.json()}({client:e,ecosystem:t,payload:r});return o},async signTypedData(a){const n=(0,D.y)(a),{signature:r}=await async function(e){let{client:t,ecosystem:a,payload:n}=e;const r=(0,s.KI)(t,a),o=await U(t,a),c=await r(`${(0,i.Wg)("inAppWallet")}/api/v1/enclave-wallet/sign-typed-data`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":t.clientId,Authorization:`Bearer embedded-wallet-token:${o}`},body:(0,_.A)({...n})});if(!c.ok)throw new Error("Failed to sign typed data");return await c.json()}({client:e,ecosystem:t,payload:n});return r}}}}class x{constructor(e){let{client:t,ecosystem:a,querier:i}=e;Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"walletManagerQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=t,this.ecosystem=a,this.walletManagerQuerier=i,this.localStorage=new c.t({storage:n.n,clientId:t.clientId,ecosystemId:a?.id})}async postWalletSetUp(e){if("isIframeStorageEnabled"in e)return e.isIframeStorageEnabled||await this.localStorage.saveDeviceShare(e.deviceShareStored,e.walletUserId),{walletAddress:e.walletAddress};throw new Error("Invalid postWalletSetUp props")}async getUserWalletStatus(){const e=await this.walletManagerQuerier.call({procedureName:"getUserStatus",params:void 0});return e.status===y.P1.LOGGED_IN_WALLET_INITIALIZED?{status:y.P1.LOGGED_IN_WALLET_INITIALIZED,...e.user,account:await this.getAccount()}:e.status===y.P1.LOGGED_IN_NEW_DEVICE||e.status===y.P1.LOGGED_IN_WALLET_UNINITIALIZED?{status:y.P1.LOGGED_IN_WALLET_UNINITIALIZED,...e.user}:{status:e.status}}async getAccount(){const e=this.walletManagerQuerier,t=this.client,a=this.ecosystem?.partnerId,{address:n}=await e.call({procedureName:"getAddress",params:void 0}),s=async t=>{const n={to:t.to??void 0,data:t.data,value:t.value,gasLimit:t.gas,nonce:t.nonce,chainId:t.chainId};t.maxFeePerGas?(n.accessList=t.accessList,n.maxFeePerGas=t.maxFeePerGas,n.maxPriorityFeePerGas=t.maxPriorityFeePerGas,n.type=2):(n.gasPrice=t.gasPrice,n.type=0);const s=(0,i.JD)().rpc,{signedTransaction:r}=await e.call({procedureName:"signTransaction",params:{transaction:n,chainId:t.chainId,partnerId:a,rpcEndpoint:`https://${t.chainId}.${s}`}});return r};return{address:(0,N.bv)(n),async signTransaction(e){if(!e.chainId)throw new Error("chainId required in tx to sign");return s({...e,chainId:e.chainId})},async sendTransaction(e){const a=(0,j.getRpcClient)({client:t,chain:(0,S.Q4)(e.chainId)}),i=await s(e);return{transactionHash:await(0,C.B)(a,i)}},async signMessage(t){let{message:i}=t;const n="string"===typeof i?i:i.raw instanceof Uint8Array?i.raw:(0,r.IQ)(i.raw),{signedMessage:s}=await e.call({procedureName:"signMessage",params:{message:n,partnerId:a,chainId:1}});return s},async signTypedData(t){const n=(0,D.y)(t);n.types?.EIP712Domain&&(n.types.EIP712Domain=void 0);const s=n.domain,r=s?.chainId,o={...s?.verifyingContract?{verifyingContract:s?.verifyingContract}:{},name:s?.name,version:s?.version};r&&(o.chainId=r);const c=(0,i.JD)().rpc,{signedTypedData:l}=await e.call({procedureName:"signTypedDataV4",params:{domain:o,types:n.types,message:n.message,chainId:r||1,partnerId:a,rpcEndpoint:`https://${r}.${c}`}});return l}}}}class G{isClientIdLegacyPaper(e){return e.indexOf("-")>0&&36===e.length}constructor(e){let{client:t,onAuthSuccess:a,ecosystem:n,passkeyDomain:s}=e;if(Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"querier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"auth",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"passkeyDomain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.isClientIdLegacyPaper(t.clientId))throw new Error("You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page");const r=(0,i.Wg)("inAppWallet");this.client=t,this.ecosystem=n,this.passkeyDomain=s,this.querier=new v({clientId:t.clientId,ecosystem:n,baseUrl:r}),this.auth=new T({client:t,querier:this.querier,baseUrl:r,ecosystem:n,onAuthSuccess:async e=>{if(a?.(e),this.ecosystem&&"sharded"===e.storedToken.authDetails.walletType){if(!await this.querier.call({procedureName:"migrateFromShardToEnclave",params:{storedToken:e.storedToken}}))throw new Error("Failed to migrate from sharded to enclave wallet")}if(await this.initializeWallet(e.storedToken.cookieString),!this.wallet)throw new Error("Failed to initialize wallet");return await this.wallet.postWalletSetUp({...e.walletDetails,authToken:e.storedToken.cookieString,walletUserId:e.storedToken.authDetails.userWalletId}),"enclave"!==e.storedToken.authDetails.walletType&&await this.querier.call({procedureName:"initIframe",params:{partnerId:n?.partnerId,ecosystemId:n?.id,clientId:this.client.clientId,deviceShareStored:"deviceShareStored"in e.walletDetails?e.walletDetails.deviceShareStored:null,walletUserId:e.storedToken.authDetails.userWalletId,authCookie:e.storedToken.cookieString}}),{user:{status:y.P1.LOGGED_IN_WALLET_INITIALIZED,authDetails:e.storedToken.authDetails,account:await this.wallet.getAccount(),walletAddress:e.walletDetails.walletAddress}}}})}async initializeWallet(e){const t=await U(this.client,this.ecosystem);if(!e&&null===t)throw new Error("No auth token provided and no stored auth token found to initialize the wallet");const a=await m({authToken:e||t,client:this.client,ecosystem:this.ecosystem});if(!a)throw new Error("Cannot initialize wallet, no user logged in");if(0===a.wallets.length)throw new Error("Cannot initialize wallet, this user does not have a wallet generated yet");"enclave"!==a.wallets[0].type?this.wallet=new x({client:this.client,ecosystem:this.ecosystem,querier:this.querier}):this.wallet=new $({client:this.client,ecosystem:this.ecosystem,address:a.wallets[0].address})}async getUser(){if(!this.wallet){const e=await U(this.client,this.ecosystem);if(!e)return{status:y.P1.LOGGED_OUT};await this.initializeWallet(e)}if(!this.wallet)throw new Error("Wallet not initialized");return await this.wallet.getUserWalletStatus()}getAccount(){if(!this.wallet)throw new Error("Wallet not initialized");return this.wallet.getAccount()}async preAuthenticate(e){return(async e=>{const{client:t,ecosystem:a}=e,i=(0,l.f)({client:t,ecosystem:a,authOption:e.strategy}),n={"Content-Type":"application/json","x-client-id":t.clientId};a?.id&&(n["x-ecosystem-id"]=a.id),a?.partnerId&&(n["x-ecosystem-partner-id"]=a.partnerId);const s=(()=>{switch(e.strategy){case"email":return{email:e.email};case"phone":return{phone:e.phoneNumber}}})(),r=await fetch(i,{method:"POST",headers:n,body:JSON.stringify(s)});if(!r.ok)throw new Error("Failed to send verification code");return await r.json()})({...e,client:this.client,ecosystem:this.ecosystem})}authenticateWithRedirect(e,t,a){(0,O.N)({authOption:e,client:this.client,ecosystem:this.ecosystem,redirectUrl:a,mode:t})}async loginWithAuthToken(e){return this.auth.loginWithAuthToken(e)}async authenticate(e){const t=e.strategy;switch(t){case"email":case"phone":return P({...e,client:this.client,ecosystem:this.ecosystem});case"jwt":return this.auth.authenticateWithCustomJwt({jwt:e.jwt,encryptionKey:e.encryptionKey});case"passkey":return this.passkeyAuth(e);case"auth_endpoint":return this.auth.authenticateWithCustomAuthEndpoint({payload:e.payload,encryptionKey:e.encryptionKey});case"iframe_email_verification":return this.auth.authenticateWithIframe({email:e.email});case"iframe":return this.auth.authenticateWithModal();case"apple":case"facebook":case"google":case"telegram":case"farcaster":case"line":case"x":case"coinbase":case"discord":return(0,O.x)({authOption:t,client:this.client,ecosystem:this.ecosystem,closeOpenedWindow:e.closeOpenedWindow,openedWindow:e.openedWindow});case"guest":return async function(e){const t=new c.t({storage:e.storage,clientId:e.client.clientId,ecosystemId:e.ecosystem?.id});let a=await t.getGuestSessionId();a||(a=o(32),t.saveGuestSessionId(a));const i=(0,s.KI)(e.client,e.ecosystem);return await(async()=>{const t=(0,l.K)({authOption:"guest",client:e.client,ecosystem:e.ecosystem}),n=await i(`${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({sessionId:a})});if(!n.ok)throw new Error("Failed to generate guest account");return await n.json()})()}({client:this.client,ecosystem:this.ecosystem,storage:n.n});case"wallet":return async function(e){const{wallet:t,chain:a}=e,i=await t.connect({client:e.client}),n=(0,s.KI)(e.client,e.ecosystem),r=await(async()=>{const t=(0,l.f)({authOption:"wallet",client:e.client,ecosystem:e.ecosystem}),s=await n(`${t}&address=${i.address}&chainId=${a.id}`);if(!s.ok)throw new Error("Failed to generate SIWE login payload");return await s.json()})(),{signature:o}=await(0,p.signLoginPayload)({payload:r,account:i});return await(async()=>{const t=(0,l.K)({authOption:"wallet",client:e.client,ecosystem:e.ecosystem}),a=await n(`${t}&signature=${o}&payload=${encodeURIComponent(r)}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({signature:o,payload:r})});if(!a.ok)throw new Error("Failed to verify SIWE signature");return await a.json()})()}({ecosystem:this.ecosystem,client:this.client,wallet:e.wallet,chain:e.chain})}}async connect(e){const t=e.strategy;switch(t){case"jwt":return this.auth.loginWithCustomJwt({jwt:e.jwt,encryptionKey:e.encryptionKey});case"auth_endpoint":return this.auth.loginWithCustomAuthEndpoint({payload:e.payload,encryptionKey:e.encryptionKey});case"iframe_email_verification":return this.auth.loginWithIframe({email:e.email});case"iframe":return this.auth.loginWithModal();case"passkey":{const t=await this.passkeyAuth(e);return this.loginWithAuthToken(t)}case"phone":case"email":case"wallet":case"apple":case"facebook":case"google":case"farcaster":case"telegram":case"line":case"x":case"guest":case"coinbase":case"discord":{const t=await this.authenticate(e);return await this.auth.loginWithAuthToken(t)}default:!function(e,t){throw new Error(t??`Invalid param: ${e}`)}(t)}}async logout(){return await this.auth.logout()}async passkeyAuth(e){const{PasskeyWebClient:t}=await Promise.resolve().then(a.bind(a,63109)),i=new t,r=n.n;return"sign-up"===e.type?u({client:this.client,ecosystem:this.ecosystem,username:e.passkeyName,passkeyClient:i,storage:r,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}}):async function(e){if(!e.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const t=new c.t({storage:e.storage,clientId:e.client.clientId,ecosystemId:e.ecosystem?.id}),a=(0,s.KI)(e.client,e.ecosystem),i=await a(h("sign-in")),n=await i.json();if(!n.challenge)throw new Error("No challenge received");const r=n.challenge,o=await t.getPasskeyCredentialId()??void 0,l=await e.passkeyClient.authenticate({credentialId:o,challenge:r,rp:e.rp}),u={};e.ecosystem?.partnerId&&(u["x-ecosystem-partner-id"]=e.ecosystem.partnerId),e.ecosystem?.id&&(u["x-ecosystem-id"]=e.ecosystem.id);const p=await a(d(),{method:"POST",headers:{"Content-Type":"application/json",...u},body:JSON.stringify({type:"sign-in",authenticatorData:l.authenticatorData,credentialId:l.credentialId,serverVerificationId:n.serverVerificationId,clientData:l.clientData,signature:l.signature,origin:l.origin,rpId:e.rp.id})}),y=await p.json();if(!y||!y.storedToken)throw new Error(`Error verifying passkey: ${y.message??"unknown error"}`);return await t.savePasskeyCredentialId(l.credentialId),y}({client:this.client,ecosystem:this.ecosystem,passkeyClient:i,storage:r,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}})}}}}]);
//# sourceMappingURL=70601.136de4ee.chunk.js.map