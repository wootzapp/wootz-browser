"use strict";(self.webpackChunkrewards=self.webpackChunkrewards||[]).push([[3355],{79578:(t,c,r)=>{r.d(c,{rr:()=>s});var n=r(86511);const a="0x313ce567",e=[],o=[{type:"uint8"}];async function s(t){return(0,n.readContract)({contract:t.contract,method:[a,e,o],params:[]})}},3355:(t,c,r)=>{r.d(c,{getCurrencyMetadata:()=>f});var n=r(28887),a=r(27059),e=r(86511);const o="0x06fdde03",s=[],d=[{type:"string"}];async function i(t){return(0,a.n)((()=>async function(t){return(0,e.readContract)({contract:t.contract,method:[o,s,d],params:[]})}(t)),{cacheKey:`${t.contract.chain.id}:${t.contract.address}:name`,cacheTime:Number.POSITIVE_INFINITY})}const u="0x95d89b41",m=[],y=[{type:"string"}];async function h(t){return(0,a.n)((()=>async function(t){return(0,e.readContract)({contract:t.contract,method:[u,m,y],params:[]})}(t)),{cacheKey:`${t.contract.chain.id}:${t.contract.address}:symbol`,cacheTime:Number.POSITIVE_INFINITY})}var I=r(79578);async function f(t){if((0,n.dw)(t.contract.address))return{name:"Ether",symbol:"ETH",decimals:18,...t.contract.chain.nativeCurrency};try{const[c,r,n]=await Promise.all([i(t).catch((()=>"")),h(t),(0,I.rr)(t)]);return{name:c,symbol:r,decimals:n}}catch{throw new Error("Invalid currency token")}}}}]);
//# sourceMappingURL=3355.02915331.chunk.js.map