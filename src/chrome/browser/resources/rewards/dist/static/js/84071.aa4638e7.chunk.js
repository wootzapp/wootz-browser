"use strict";(self.webpackChunkrewards=self.webpackChunkrewards||[]).push([[84071],{84071:(e,t,n)=>{n.d(t,{estimateL1Fee:()=>ne});const r={ether:-9,wei:9};function o(e,t){let n=e.toString();const r=n.startsWith("-");r&&(n=n.slice(1)),n=n.padStart(t,"0");let[o,s]=[n.slice(0,n.length-t),n.slice(n.length-t)];return s=s.replace(/(0+)$/,""),`${r?"-":""}${o||"0"}${s?`.${s}`:""}`}function s(e){return o(e,r[arguments.length>1&&void 0!==arguments[1]?arguments[1]:"wei"])}var a=n(6109);function i(e){const t=Object.entries(e).map((e=>{let[t,n]=e;return void 0===n||!1===n?null:[t,n]})).filter(Boolean),n=t.reduce(((e,t)=>{let[n]=t;return Math.max(e,n.length)}),0);return t.map((e=>{let[t,r]=e;return`  ${`${t}:`.padEnd(n+1)}  ${r}`})).join("\n")}a.C;class c extends a.C{constructor(e){let{v:t}=e;super(`Invalid \`v\` value "${t}". Expected 27 or 28.`,{name:"InvalidLegacyVError"})}}class u extends a.C{constructor(e){let{transaction:t}=e;super("Cannot infer a transaction type from provided transaction.",{metaMessages:["Provided Transaction:","{",i(t),"}","","To infer the type, either provide:","- a `type` to the Transaction, or","- an EIP-1559 Transaction with `maxFeePerGas`, or","- an EIP-2930 Transaction with `gasPrice` & `accessList`, or","- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or","- an EIP-7702 Transaction with `authorizationList`, or","- a Legacy Transaction with `gasPrice`"],name:"InvalidSerializableTransactionError"})}}a.C;a.C;class l extends a.C{constructor(e){let{storageKey:t}=e;super(`Size for storage key "${t}" is invalid. Expected 32 bytes. Got ${Math.floor((t.length-2)/2)} bytes.`,{name:"InvalidStorageKeySizeError"})}}a.C;a.C;a.C;a.C;var d=n(49466),h=n(24776);function f(e){const{kzg:t}=e,n=e.to??("string"===typeof e.blobs[0]?"hex":"bytes"),r="string"===typeof e.blobs[0]?e.blobs.map((e=>(0,d.aT)(e))):e.blobs,o=[];for(const s of r)o.push(Uint8Array.from(t.blobToKzgCommitment(s)));return"bytes"===n?o:o.map((e=>(0,h.My)(e)))}function p(e){const{kzg:t}=e,n=e.to??("string"===typeof e.blobs[0]?"hex":"bytes"),r="string"===typeof e.blobs[0]?e.blobs.map((e=>(0,d.aT)(e))):e.blobs,o="string"===typeof e.commitments[0]?e.commitments.map((e=>(0,d.aT)(e))):e.commitments,s=[];for(let a=0;a<r.length;a++){const e=r[a],n=o[a];s.push(Uint8Array.from(t.computeBlobKzgProof(e,n)))}return"bytes"===n?s:s.map((e=>(0,h.My)(e)))}var g=n(86952);function m(e){const{commitment:t,version:n=1}=e,r=e.to??("string"===typeof t?"hex":"bytes"),o=(0,g.s)(t,"bytes");return o.set([n],0),"bytes"===r?o:(0,h.My)(o)}const b=32,x=4096,y=b*x,v=6*y-1-1*x*6,w=1;class P extends a.C{constructor(e){let{maxSize:t,size:n}=e;super("Blob size is too large.",{metaMessages:[`Max: ${t} bytes`,`Given: ${n} bytes`],name:"BlobSizeTooLargeError"})}}class j extends a.C{constructor(){super("Blob data must not be empty.",{name:"EmptyBlobError"})}}class C extends a.C{constructor(e){let{hash:t,size:n}=e;super(`Versioned hash "${t}" size is invalid.`,{metaMessages:["Expected: 32",`Received: ${n}`],name:"InvalidVersionedHashSizeError"})}}class E extends a.C{constructor(e){let{hash:t,version:n}=e;super(`Versioned hash "${t}" version is invalid.`,{metaMessages:[`Expected: ${w}`,`Received: ${n}`],name:"InvalidVersionedHashVersionError"})}}var F=n(37714),$=n(92678);function G(e){const{data:t,kzg:n,to:r}=e,o=e.blobs??function(e){const t=e.to??("string"===typeof e.data?"hex":"bytes"),n="string"===typeof e.data?(0,d.aT)(e.data):e.data,r=(0,$.E)(n);if(!r)throw new j;if(r>v)throw new P({maxSize:v,size:r});const o=[];let s=!0,a=0;for(;s;){const e=(0,F.l)(new Uint8Array(y));let t=0;for(;t<x;){const r=n.slice(a,a+(b-1));if(e.pushByte(0),e.pushBytes(r),r.length<31){e.pushByte(128),s=!1;break}t++,a+=31}o.push(e)}return"bytes"===t?o.map((e=>e.bytes)):o.map((e=>(0,h.My)(e.bytes)))}({data:t,to:r}),s=e.commitments??f({blobs:o,kzg:n,to:r}),a=e.proofs??p({blobs:o,commitments:s,kzg:n,to:r}),i=[];for(let c=0;c<o.length;c++)i.push({blob:o[c],commitment:s[c],proof:a[c]});return i}var T=n(883),I=n(17023),M=n(81819);var z=n(58202);a.C;a.C;a.C;a.C;class B extends a.C{constructor(e){let{chainId:t}=e;super("number"===typeof t?`Chain ID "${t}" is invalid.`:"Chain ID is invalid.",{name:"InvalidChainIdError"})}}class k extends a.C{constructor(){let{cause:e,message:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const n=t?.replace("execution reverted: ","")?.replace("execution reverted","");super(`Execution reverted ${n?`with reason: ${n}`:"for an unknown reason"}.`,{cause:e,name:"ExecutionRevertedError"})}}Object.defineProperty(k,"code",{enumerable:!0,configurable:!0,writable:!0,value:3}),Object.defineProperty(k,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/execution reverted/});class L extends a.C{constructor(){let{cause:e,maxFeePerGas:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(`The fee cap (\`maxFeePerGas\`${t?` = ${s(t)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`,{cause:e,name:"FeeCapTooHighError"})}}Object.defineProperty(L,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/});class O extends a.C{constructor(){let{cause:e,maxFeePerGas:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(`The fee cap (\`maxFeePerGas\`${t?` = ${s(t)}`:""} gwei) cannot be lower than the block base fee.`,{cause:e,name:"FeeCapTooLowError"})}}Object.defineProperty(O,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/});class U extends a.C{constructor(){let{cause:e,nonce:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(`Nonce provided for the transaction ${t?`(${t}) `:""}is higher than the next one expected.`,{cause:e,name:"NonceTooHighError"})}}Object.defineProperty(U,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce too high/});class S extends a.C{constructor(){let{cause:e,nonce:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super([`Nonce provided for the transaction ${t?`(${t}) `:""}is lower than the current nonce of the account.`,"Try increasing the nonce or find the latest nonce with `getTransactionCount`."].join("\n"),{cause:e,name:"NonceTooLowError"})}}Object.defineProperty(S,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce too low|transaction already imported|already known/});class V extends a.C{constructor(){let{cause:e,nonce:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(`Nonce provided for the transaction ${t?`(${t}) `:""}exceeds the maximum allowed nonce.`,{cause:e,name:"NonceMaxValueError"})}}Object.defineProperty(V,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce has max value/});class A extends a.C{constructor(){let{cause:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(["The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account."].join("\n"),{cause:e,metaMessages:["This error could arise when the account does not have enough funds to:"," - pay for the total gas fee,"," - pay for the value to send."," ","The cost of the transaction is calculated as `gas * gas fee + value`, where:"," - `gas` is the amount of gas needed for transaction to execute,"," - `gas fee` is the gas fee,"," - `value` is the amount of ether to send to the recipient."],name:"InsufficientFundsError"})}}Object.defineProperty(A,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/insufficient funds|exceeds transaction sender account balance/});class H extends a.C{constructor(){let{cause:e,gas:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(`The amount of gas ${t?`(${t}) `:""}provided for the transaction exceeds the limit allowed for the block.`,{cause:e,name:"IntrinsicGasTooHighError"})}}Object.defineProperty(H,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/intrinsic gas too high|gas limit reached/});class N extends a.C{constructor(){let{cause:e,gas:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(`The amount of gas ${t?`(${t}) `:""}provided for the transaction is too low.`,{cause:e,name:"IntrinsicGasTooLowError"})}}Object.defineProperty(N,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/intrinsic gas too low/});class Q extends a.C{constructor(e){let{cause:t}=e;super("The transaction type is not supported for this chain.",{cause:t,name:"TransactionTypeNotSupportedError"})}}Object.defineProperty(Q,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/transaction type not valid/});class K extends a.C{constructor(){let{cause:e,maxPriorityFeePerGas:t,maxFeePerGas:n}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super([`The provided tip (\`maxPriorityFeePerGas\`${t?` = ${s(t)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${n?` = ${s(n)} gwei`:""}).`].join("\n"),{cause:e,name:"TipAboveFeeCapError"})}}Object.defineProperty(K,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max priority fee per gas higher than max fee per gas|tip higher than fee cap/});a.C;var R=n(43593),D=n(29057),q=n(29515);function J(e){const{chainId:t,maxPriorityFeePerGas:n,maxFeePerGas:r,to:o}=e;if(t<=0)throw new B({chainId:t});if(o&&!(0,R.P)(o))throw new z.M({address:o});if(r&&r>2n**256n-1n)throw new L({maxFeePerGas:r});if(n&&r&&n>r)throw new K({maxFeePerGas:r,maxPriorityFeePerGas:n})}function W(e){if(!e||0===e.length)return[];const t=[];for(let n=0;n<e.length;n++){const{address:r,storageKeys:o}=e[n];for(let e=0;e<o.length;e++)if(o[e].length-2!==64)throw new l({storageKey:o[e]});if(!(0,R.P)(r,{strict:!1}))throw new z.M({address:r});t.push([r,o])}return t}function Z(e,t){const n=function(e){if(e.type)return e.type;if("undefined"!==typeof e.authorizationList)return"eip7702";if("undefined"!==typeof e.blobs||"undefined"!==typeof e.blobVersionedHashes||"undefined"!==typeof e.maxFeePerBlobGas||"undefined"!==typeof e.sidecars)return"eip4844";if("undefined"!==typeof e.maxFeePerGas||"undefined"!==typeof e.maxPriorityFeePerGas)return"eip1559";if("undefined"!==typeof e.gasPrice)return"undefined"!==typeof e.accessList?"eip2930":"legacy";throw new u({transaction:e})}(e);return"eip1559"===n?function(e,t){const{chainId:n,gas:r,nonce:o,to:s,value:a,maxFeePerGas:i,maxPriorityFeePerGas:c,accessList:u,data:l}=e;J(e);const d=W(u),f=[(0,h.nj)(n),o?(0,h.nj)(o):"0x",c?(0,h.nj)(c):"0x",i?(0,h.nj)(i):"0x",r?(0,h.nj)(r):"0x",s??"0x",a?(0,h.nj)(a):"0x",l??"0x",d,..._(e,t)];return(0,T.aP)(["0x02",(0,M.EQ)(f)])}(e,t):"eip2930"===n?function(e,t){const{chainId:n,gas:r,data:o,nonce:s,to:i,value:c,accessList:u,gasPrice:l}=e;!function(e){const{chainId:t,maxPriorityFeePerGas:n,gasPrice:r,maxFeePerGas:o,to:s}=e;if(t<=0)throw new B({chainId:t});if(s&&!(0,R.P)(s))throw new z.M({address:s});if(n||o)throw new a.C("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.");if(r&&r>2n**256n-1n)throw new L({maxFeePerGas:r})}(e);const d=W(u),f=[(0,h.nj)(n),s?(0,h.nj)(s):"0x",l?(0,h.nj)(l):"0x",r?(0,h.nj)(r):"0x",i??"0x",c?(0,h.nj)(c):"0x",o??"0x",d,..._(e,t)];return(0,T.aP)(["0x01",(0,M.EQ)(f)])}(e,t):"eip4844"===n?function(e,t){const{chainId:n,gas:r,nonce:o,to:s,value:a,maxFeePerBlobGas:i,maxFeePerGas:c,maxPriorityFeePerGas:u,accessList:l,data:d}=e;!function(e){const{blobVersionedHashes:t}=e;if(t){if(0===t.length)throw new j;for(const e of t){const t=(0,$.E)(e),n=(0,q.ME)((0,D.di)(e,0,1));if(32!==t)throw new C({hash:e,size:t});if(n!==w)throw new E({hash:e,version:n})}}J(e)}(e);let g=e.blobVersionedHashes,b=e.sidecars;if(e.blobs&&("undefined"===typeof g||"undefined"===typeof b)){const t="string"===typeof e.blobs[0]?e.blobs:e.blobs.map((e=>(0,h.My)(e))),n=e.kzg,r=f({blobs:t,kzg:n});if("undefined"===typeof g&&(g=function(e){const{commitments:t,version:n}=e,r=e.to??("string"===typeof t[0]?"hex":"bytes"),o=[];for(const s of t)o.push(m({commitment:s,to:r,version:n}));return o}({commitments:r})),"undefined"===typeof b){b=G({blobs:t,commitments:r,proofs:p({blobs:t,commitments:r,kzg:n})})}}const x=W(l),y=[(0,h.nj)(n),o?(0,h.nj)(o):"0x",u?(0,h.nj)(u):"0x",c?(0,h.nj)(c):"0x",r?(0,h.nj)(r):"0x",s??"0x",a?(0,h.nj)(a):"0x",d??"0x",x,i?(0,h.nj)(i):"0x",g??[],..._(e,t)],v=[],P=[],F=[];if(b)for(let h=0;h<b.length;h++){const{blob:e,commitment:t,proof:n}=b[h];v.push(e),P.push(t),F.push(n)}return(0,T.aP)(["0x03",b?(0,M.EQ)([y,v,P,F]):(0,M.EQ)(y)])}(e,t):"eip7702"===n?function(e,t){const{authorizationList:n,chainId:r,gas:o,nonce:s,to:a,value:i,maxFeePerGas:c,maxPriorityFeePerGas:u,accessList:l,data:d}=e;!function(e){const{authorizationList:t}=e;if(t)for(const n of t){const{contractAddress:e,chainId:t}=n;if(!(0,R.P)(e))throw new z.M({address:e});if(t<=0)throw new B({chainId:t})}J(e)}(e);const f=W(l),p=function(e){if(!e||0===e.length)return[];const t=[];for(const n of e){const{contractAddress:e,chainId:r,nonce:o,...s}=n;t.push([(0,h.nj)(r),e,(0,h.nj)(o),..._({},s)])}return t}(n);return(0,T.aP)(["0x04",(0,M.EQ)([(0,h.nj)(r),s?(0,h.nj)(s):"0x",u?(0,h.nj)(u):"0x",c?(0,h.nj)(c):"0x",o?(0,h.nj)(o):"0x",a??"0x",i?(0,h.nj)(i):"0x",d??"0x",f,p,..._(e,t)])])}(e,t):function(e,t){const{chainId:n=0,gas:r,data:o,nonce:s,to:i,value:u,gasPrice:l}=e;!function(e){const{chainId:t,maxPriorityFeePerGas:n,gasPrice:r,maxFeePerGas:o,to:s}=e;if(s&&!(0,R.P)(s))throw new z.M({address:s});if("undefined"!==typeof t&&t<=0)throw new B({chainId:t});if(n||o)throw new a.C("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.");if(r&&r>2n**256n-1n)throw new L({maxFeePerGas:r})}(e);let d=[s?(0,h.nj)(s):"0x",l?(0,h.nj)(l):"0x",r?(0,h.nj)(r):"0x",i??"0x",u?(0,h.nj)(u):"0x",o??"0x"];if(t){const e=(()=>{if(t.v>=35n){return(t.v-35n)/2n>0?t.v:27n+(35n===t.v?0n:1n)}if(n>0)return BigInt(2*n)+BigInt(35n+t.v-27n);const e=27n+(27n===t.v?0n:1n);if(t.v!==e)throw new c({v:t.v});return e})(),r=(0,I.B)(t.r),o=(0,I.B)(t.s);d=[...d,(0,h.nj)(e),"0x00"===r?"0x":r,"0x00"===o?"0x":o]}else n>0&&(d=[...d,(0,h.nj)(n),"0x","0x"]);return(0,M.EQ)(d)}(e,t)}function _(e,t){const n=t??e,{v:r,yParity:o}=n;if("undefined"===typeof n.r)return[];if("undefined"===typeof n.s)return[];if("undefined"===typeof r&&"undefined"===typeof o)return[];const s=(0,I.B)(n.r),a=(0,I.B)(n.s);return["number"===typeof o?o?(0,h.nj)(1):"0x":0n===r?"0x":1n===r?(0,h.nj)(1):27n===r?"0x":(0,h.nj)(1),"0x00"===s?"0x":s,"0x00"===a?"0x":a]}var X=n(38736),Y=n(77300),ee=n(86511);const te="0x420000000000000000000000000000000000000F";async function ne(e){const{transaction:t,gasPriceOracleAddress:n}=e,r=(0,X.P)({client:t.client,address:n||te,chain:t.chain}),{gasPrice:o,...s}=await(0,Y.$)({transaction:t}),a=Z({...s,type:"eip1559"});return(0,ee.readContract)({contract:r,method:"function getL1Fee(bytes memory _data) view returns (uint256)",params:[a]})}},81819:(e,t,n)=>{n.d(t,{EQ:()=>i});var r=n(6109),o=n(37714),s=n(49466),a=n(24776);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"hex";const n=c(e),r=(0,o.l)(new Uint8Array(n.length));return n.encode(r),"hex"===t?(0,a.My)(r.bytes):r.bytes}function c(e){return Array.isArray(e)?function(e){const t=e.reduce(((e,t)=>e+t.length),0),n=u(t);return{length:t<=55?1+t:1+n+t,encode(r){t<=55?r.pushByte(192+t):(r.pushByte(247+n),1===n?r.pushUint8(t):2===n?r.pushUint16(t):3===n?r.pushUint24(t):r.pushUint32(t));for(const{encode:t}of e)t(r)}}}(e.map((e=>c(e)))):function(e){const t="string"===typeof e?(0,s.aT)(e):e,n=u(t.length),r=1===t.length&&t[0]<128?1:t.length<=55?1+t.length:1+n+t.length;return{length:r,encode(e){1===t.length&&t[0]<128?e.pushBytes(t):t.length<=55?(e.pushByte(128+t.length),e.pushBytes(t)):(e.pushByte(183+n),1===n?e.pushUint8(t.length):2===n?e.pushUint16(t.length):3===n?e.pushUint24(t.length):e.pushUint32(t.length),e.pushBytes(t))}}}(e)}function u(e){if(e<256)return 1;if(e<65536)return 2;if(e<2**24)return 3;if(e<2**32)return 4;throw new r.C("Length is too large.")}},86952:(e,t,n)=>{n.d(t,{s:()=>i});var r=n(98780),o=n(71874),s=n(49466),a=n(24776);function i(e,t){const n=t||"hex",i=(0,r.s)((0,o.q)(e,{strict:!1})?(0,s.ZJ)(e):e);return"bytes"===n?i:(0,a.nj)(i)}}}]);
//# sourceMappingURL=84071.aa4638e7.chunk.js.map