{"version":3,"file":"static/js/55749.8e6d42b8.chunk.js","mappings":"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","sources":["../node_modules/thirdweb/src/react/web/wallets/in-app/useInAppWalletLocale.ts","../node_modules/thirdweb/src/react/web/wallets/shared/locale/getConnectLocale.ts","../node_modules/thirdweb/src/react/web/wallets/shared/ConnectWalletSocialOptions.tsx","../node_modules/thirdweb/src/wallets/ecosystem/get-ecosystem-wallet-auth-options.ts","../node_modules/thirdweb/src/react/web/wallets/in-app/validateEmail.ts","../node_modules/thirdweb/src/react/web/wallets/shared/oauthSignIn.ts","../node_modules/thirdweb/src/wallets/in-app/core/authentication/getLoginPath.ts","../node_modules/thirdweb/src/wallets/in-app/web/lib/auth/constants.ts","../node_modules/thirdweb/src/wallets/in-app/web/lib/auth/oauth.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport type { LocaleId } from \"../../ui/types.js\";\nimport { getInAppWalletLocale } from \"../shared/locale/getConnectLocale.js\";\nimport type { InAppWalletLocale } from \"../shared/locale/types.js\";\n\n/**\n * @internal\n */\nexport function useInAppWalletLocale(localeId: LocaleId) {\n  const [locale, setLocale] = useState<InAppWalletLocale | undefined>(\n    undefined,\n  );\n\n  // TODO: move this to a useQuery hook\n  // or at the very least dedupe it?\n  useEffect(() => {\n    getInAppWalletLocale(localeId).then((l) => {\n      setLocale(l);\n    });\n  }, [localeId]);\n\n  return locale;\n}\n","import type { LocaleId } from \"../../../ui/types.js\";\nimport type { InAppWalletLocale } from \"./types.js\";\n\n/**\n * @internal\n */\nexport async function getInAppWalletLocale(\n  localeId: LocaleId,\n): Promise<InAppWalletLocale> {\n  switch (localeId) {\n    case \"es_ES\":\n      return (await import(\"./es.js\")).default;\n    case \"ja_JP\":\n      return (await import(\"./ja.js\")).default;\n    case \"tl_PH\":\n      return (await import(\"./tl.js\")).default;\n    case \"vi_VN\":\n      return (await import(\"./vi.js\")).default;\n    case \"de_DE\":\n      return (await import(\"./de.js\")).default;\n    case \"ko_KR\":\n      return (await import(\"./kr.js\")).default;\n    case \"fr_FR\":\n      return (await import(\"./fr.js\")).default;\n    default:\n      return (await import(\"./en.js\")).default;\n  }\n}\n","\"use client\";\nimport styled from \"@emotion/styled\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useMemo, useState } from \"react\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport { webLocalStorage } from \"../../../../utils/storage/webStorage.js\";\nimport { getEcosystemWalletAuthOptions } from \"../../../../wallets/ecosystem/get-ecosystem-wallet-auth-options.js\";\nimport { isEcosystemWallet } from \"../../../../wallets/ecosystem/is-ecosystem-wallet.js\";\nimport type { Profile } from \"../../../../wallets/in-app/core/authentication/types.js\";\nimport { linkProfile } from \"../../../../wallets/in-app/core/wallet/profiles.js\";\nimport { loginWithOauthRedirect } from \"../../../../wallets/in-app/web/lib/auth/oauth.js\";\nimport type { Account, Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport {\n  type AuthOption,\n  type SocialAuthOption,\n  socialAuthOptions,\n} from \"../../../../wallets/types.js\";\nimport type { EcosystemWalletId } from \"../../../../wallets/wallet-types.js\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport {\n  fontSize,\n  iconSize,\n  spacing,\n} from \"../../../core/design-system/index.js\";\nimport { setLastAuthProvider } from \"../../../core/utils/storage.js\";\nimport {\n  emailIcon,\n  getWalletIcon,\n  passkeyIcon,\n  phoneIcon,\n  socialIcons,\n} from \"../../../core/utils/walletIcon.js\";\nimport { useSetSelectionData } from \"../../providers/wallet-ui-states-provider.js\";\nimport { WalletTypeRowButton } from \"../../ui/ConnectWallet/WalletTypeRowButton.js\";\nimport { Img } from \"../../ui/components/Img.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { TextDivider } from \"../../ui/components/TextDivider.js\";\nimport { Container } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { InputSelectionUI } from \"../in-app/InputSelectionUI.js\";\nimport { validateEmail } from \"../in-app/validateEmail.js\";\nimport { LoadingScreen } from \"./LoadingScreen.js\";\nimport type { InAppWalletLocale } from \"./locale/types.js\";\nimport { openOauthSignInWindow } from \"./oauthSignIn.js\";\n\nexport type ConnectWalletSelectUIState =\n  | undefined\n  | {\n      emailLogin?: string;\n      phoneLogin?: string;\n      socialLogin?: {\n        type: SocialAuthOption;\n        connectionPromise: Promise<Account | Profile[]>;\n      };\n      passkeyLogin?: boolean;\n      walletLogin?: boolean;\n    };\n\nconst defaultAuthOptions: AuthOption[] = [\n  \"email\",\n  \"phone\",\n  \"google\",\n  \"apple\",\n  \"facebook\",\n  \"passkey\",\n];\n\nexport type ConnectWalletSocialOptionsProps = {\n  select: () => void;\n  done: () => void;\n  locale: InAppWalletLocale;\n  wallet: Wallet<EcosystemWalletId> | Wallet<\"inApp\">;\n  goBack?: () => void;\n  chain: Chain | undefined;\n  client: ThirdwebClient;\n  size: \"compact\" | \"wide\";\n  isLinking?: boolean;\n  // If true, all options will be disabled. Used for things like requiring TOS approval.\n  disabled?: boolean;\n};\n\n/**\n * @internal\n */\nexport const ConnectWalletSocialOptions = (\n  props: ConnectWalletSocialOptionsProps,\n) => {\n  const locale = props.locale;\n  const { wallet } = props;\n  const setData = useSetSelectionData() as (\n    value: ConnectWalletSelectUIState,\n  ) => void;\n\n  const themeObj = useCustomTheme();\n  const optionalImageMetadata = useMemo(\n    () =>\n      props.wallet.id === \"inApp\"\n        ? props.wallet.getConfig()?.metadata?.image\n        : undefined,\n    [props.wallet],\n  );\n\n  const loginMethodsLabel = {\n    google: locale.signInWithGoogle,\n    facebook: locale.signInWithFacebook,\n    apple: locale.signInWithApple,\n    discord: locale.signInWithDiscord,\n    farcaster: \"Farcaster\",\n    telegram: \"Telegram\",\n  };\n\n  const { data: ecosystemAuthOptions, isLoading } = useQuery({\n    queryKey: [\"auth-options\", wallet.id],\n    queryFn: async () => {\n      if (isEcosystemWallet(wallet)) {\n        return getEcosystemWalletAuthOptions(wallet.id);\n      }\n      return null;\n    },\n    enabled: isEcosystemWallet(wallet),\n    retry: false,\n  });\n  const authOptions = isEcosystemWallet(wallet)\n    ? ecosystemAuthOptions ?? defaultAuthOptions\n    : wallet.getConfig()?.auth?.options ?? defaultAuthOptions;\n\n  const emailIndex = authOptions.indexOf(\"email\");\n  const isEmailEnabled = emailIndex !== -1;\n  const phoneIndex = authOptions.indexOf(\"phone\");\n  const isPhoneEnabled = phoneIndex !== -1;\n\n  const [manualInputMode, setManualInputMode] = useState<\n    \"email\" | \"phone\" | \"none\" | null\n  >(null);\n\n  const inputMode = useMemo(() => {\n    if (manualInputMode) {\n      return manualInputMode;\n    }\n    if (isEmailEnabled && isPhoneEnabled) {\n      return emailIndex < phoneIndex ? \"email\" : \"phone\";\n    }\n    if (isEmailEnabled) {\n      return \"email\";\n    }\n    if (isPhoneEnabled) {\n      return \"phone\";\n    }\n    return \"none\";\n  }, [isEmailEnabled, isPhoneEnabled, emailIndex, phoneIndex, manualInputMode]);\n\n  if (isEcosystemWallet(wallet) && isLoading) {\n    return <LoadingScreen />;\n  }\n\n  const passKeyEnabled = authOptions.includes(\"passkey\");\n\n  const placeholder =\n    inputMode === \"email\" ? locale.emailPlaceholder : locale.phonePlaceholder;\n  const emptyErrorMessage =\n    inputMode === \"email\" ? locale.emailRequired : locale.phoneRequired;\n\n  let type = \"text\";\n  if (inputMode === \"email\") {\n    type = \"email\";\n  } else if (inputMode === \"phone\") {\n    type = \"tel\";\n  }\n\n  const socialLogins = authOptions.filter((o) =>\n    socialAuthOptions.includes(o as SocialAuthOption),\n  );\n\n  const hasSocialLogins = socialLogins.length > 0;\n  const ecosystemInfo = isEcosystemWallet(wallet)\n    ? {\n        id: wallet.id,\n        partnerId: wallet.getConfig()?.partnerId,\n      }\n    : undefined;\n\n  // Need to trigger login on button click to avoid popup from being blocked\n  const handleSocialLogin = async (strategy: SocialAuthOption) => {\n    const walletConfig = wallet.getConfig();\n    const authMode = walletConfig?.auth?.mode ?? \"popup\";\n    if (\n      walletConfig &&\n      \"auth\" in walletConfig &&\n      authMode !== \"popup\" &&\n      !props.isLinking // We do not support redirects for linking\n    ) {\n      return loginWithOauthRedirect({\n        authOption: strategy,\n        client: props.client,\n        ecosystem: ecosystemInfo,\n        redirectUrl: walletConfig?.auth?.redirectUrl,\n        mode: authMode,\n      });\n    }\n\n    try {\n      const socialLoginWindow = openOauthSignInWindow({\n        authOption: strategy,\n        themeObj,\n        client: props.client,\n        ecosystem: ecosystemInfo,\n      });\n      if (!socialLoginWindow) {\n        throw new Error(\"Failed to open login window\");\n      }\n      const connectOptions = {\n        chain: props.chain,\n        client: props.client,\n        strategy,\n        openedWindow: socialLoginWindow,\n        closeOpenedWindow: (openedWindow: Window) => {\n          openedWindow.close();\n        },\n      };\n\n      const connectPromise = (() => {\n        if (props.isLinking) {\n          if (wallet.id !== \"inApp\") {\n            throw new Error(\"Only in-app wallets support multi-auth\");\n          }\n          return linkProfile(wallet, connectOptions);\n        } else {\n          const connectPromise = wallet.connect(connectOptions);\n          setLastAuthProvider(strategy, webLocalStorage);\n          return connectPromise;\n        }\n      })();\n\n      setData({\n        socialLogin: {\n          type: strategy,\n          connectionPromise: connectPromise,\n        },\n      });\n\n      props.select(); // show Connect UI\n\n      // Note: do not call done() here, it will be called SocialLogin component\n      // we simply trigger the connect and save promise here - its resolution is handled in SocialLogin\n    } catch (e) {\n      console.error(`Error signing in with ${strategy}`, e);\n    }\n  };\n\n  function handlePassKeyLogin() {\n    setData({\n      passkeyLogin: true,\n    });\n    props.select();\n  }\n\n  function handleWalletLogin() {\n    setData({\n      walletLogin: true,\n    });\n    props.select();\n  }\n\n  const showOnlyIcons = socialLogins.length > 2;\n\n  return (\n    <Container\n      flex=\"column\"\n      gap=\"md\"\n      style={{\n        position: \"relative\",\n      }}\n    >\n      {optionalImageMetadata && (\n        <>\n          <Img\n            client={props.client}\n            src={optionalImageMetadata.src}\n            alt={optionalImageMetadata.alt}\n            width={`${optionalImageMetadata.width}`}\n            height={`${optionalImageMetadata.height}`}\n            style={{ margin: \"auto\" }}\n          />\n          <Spacer y=\"xxs\" />\n        </>\n      )}\n      {/* Social Login */}\n      {hasSocialLogins && (\n        <Container\n          flex=\"row\"\n          center=\"x\"\n          gap={socialLogins.length > 4 ? \"xs\" : \"sm\"}\n          style={{\n            justifyContent: \"space-between\",\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${socialLogins.length}, 1fr)`,\n          }}\n        >\n          {socialLogins.map((loginMethod) => {\n            const imgIconSize = (() => {\n              if (!showOnlyIcons) {\n                return iconSize.md;\n              } else {\n                if (socialLogins.length > 4) {\n                  return iconSize.md;\n                }\n                return iconSize.lg;\n              }\n            })();\n\n            return (\n              <SocialButton\n                aria-label={`Login with ${loginMethod}`}\n                data-variant={showOnlyIcons ? \"icon\" : \"full\"}\n                key={loginMethod}\n                variant={\"outline\"}\n                disabled={props.disabled}\n                onClick={() => {\n                  handleSocialLogin(loginMethod as SocialAuthOption);\n                }}\n              >\n                <Img\n                  src={socialIcons[loginMethod as SocialAuthOption]}\n                  width={imgIconSize}\n                  height={imgIconSize}\n                  client={props.client}\n                />\n                {!showOnlyIcons &&\n                  `${socialLogins.length === 1 ? \"Continue with \" : \"\"}${loginMethodsLabel[loginMethod as SocialAuthOption]}`}\n              </SocialButton>\n            );\n          })}\n        </Container>\n      )}\n\n      {props.size === \"wide\" &&\n        hasSocialLogins &&\n        (isEmailEnabled || isPhoneEnabled) && <TextDivider text={locale.or} />}\n\n      {/* Email/Phone Login */}\n      {isEmailEnabled && (\n        <>\n          {inputMode === \"email\" ? (\n            <InputSelectionUI\n              type={type}\n              onSelect={(value) => {\n                setData({ emailLogin: value });\n                props.select();\n              }}\n              placeholder={placeholder}\n              name=\"email\"\n              errorMessage={(input) => {\n                const isValidEmail = validateEmail(input.toLowerCase());\n                if (!isValidEmail) {\n                  return locale.invalidEmail;\n                }\n                return undefined;\n              }}\n              disabled={props.disabled}\n              emptyErrorMessage={emptyErrorMessage}\n              submitButtonText={locale.submitEmail}\n            />\n          ) : (\n            <WalletTypeRowButton\n              client={props.client}\n              icon={emailIcon}\n              onClick={() => {\n                setManualInputMode(\"email\");\n              }}\n              title={locale.emailPlaceholder}\n              disabled={props.disabled}\n            />\n          )}\n        </>\n      )}\n      {isPhoneEnabled && (\n        <>\n          {inputMode === \"phone\" ? (\n            <InputSelectionUI\n              format=\"phone\"\n              type={type}\n              onSelect={(value) => {\n                // removes white spaces and special characters\n                setData({ phoneLogin: value.replace(/[-\\(\\) ]/g, \"\") });\n                props.select();\n              }}\n              placeholder={placeholder}\n              name=\"phone\"\n              errorMessage={(_input) => {\n                // removes white spaces and special characters\n                const input = _input.replace(/[-\\(\\) ]/g, \"\");\n                const isPhone = /^[0-9]+$/.test(input);\n\n                if (!isPhone && isPhoneEnabled) {\n                  return locale.invalidPhone;\n                }\n\n                return undefined;\n              }}\n              disabled={props.disabled}\n              emptyErrorMessage={emptyErrorMessage}\n              submitButtonText={locale.submitEmail}\n            />\n          ) : (\n            <WalletTypeRowButton\n              client={props.client}\n              icon={phoneIcon}\n              onClick={() => {\n                setManualInputMode(\"phone\");\n              }}\n              title={locale.phonePlaceholder}\n              disabled={props.disabled}\n            />\n          )}\n        </>\n      )}\n\n      {passKeyEnabled && (\n        <>\n          <WalletTypeRowButton\n            client={props.client}\n            icon={passkeyIcon}\n            onClick={() => {\n              handlePassKeyLogin();\n            }}\n            title={locale.passkey}\n            disabled={props.disabled}\n          />\n        </>\n      )}\n\n      {props.isLinking && (\n        <>\n          <WalletTypeRowButton\n            client={props.client}\n            icon={getWalletIcon(\"\")}\n            onClick={() => {\n              handleWalletLogin();\n            }}\n            title={locale.linkWallet}\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\nconst SocialButton = /* @__PURE__ */ styled(Button)({\n  flexGrow: 1,\n  \"&[data-variant='full']\": {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    padding: spacing.md,\n    gap: spacing.sm,\n    fontSize: fontSize.md,\n    fontWeight: 500,\n    transition: \"background-color 0.2s ease\",\n    \"&:active\": {\n      boxShadow: \"none\",\n    },\n  },\n  \"&[data-variant='icon']\": {\n    padding: spacing.sm,\n  },\n});\n","import { getThirdwebBaseUrl } from \"../../utils/domains.js\";\nimport type { AuthOption } from \"../types.js\";\nimport type { EcosystemWalletId } from \"../wallet-types.js\";\n\n/**\n * Retrieves the specified auth options for a given ecosystem wallet, if any.\n * @param walletId The ecosystem wallet ID.\n * @returns {AuthOption[] | undefined} The auth options for the ecosystem wallet.\n * @internal\n */\nexport async function getEcosystemWalletAuthOptions(\n  walletId: EcosystemWalletId,\n): Promise<AuthOption[] | undefined> {\n  const res = await fetch(\n    `${getThirdwebBaseUrl(\"inAppWallet\")}/api/2024-05-05/ecosystem-wallet`,\n    {\n      headers: {\n        \"x-ecosystem-id\": walletId,\n      },\n    },\n  );\n\n  const data = await res.json();\n\n  if (!data || data.code === \"UNAUTHORIZED\") {\n    throw new Error(\n      data.message ||\n        `Could not find ecosystem wallet with id ${walletId}, please check your ecosystem wallet configuration.`,\n    );\n  }\n\n  return data.authOptions ?? undefined;\n}\n","// A super basic email validation function that is very forgiving to allow for a wide range emails\nexport function validateEmail(str: string) {\n  // <string> + @ + <string> + . + <string>\n  const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n\n  return emailRegex.test(str.replace(/\\+/g, \"\"));\n}\n","import type { ThirdwebClient } from \"../../../../client/client.js\";\nimport { getLoginUrl } from \"../../../../wallets/in-app/core/authentication/getLoginPath.js\";\nimport type { InAppWalletSocialAuth } from \"../../../../wallets/in-app/core/wallet/types.js\";\nimport type { Ecosystem } from \"../../../../wallets/in-app/web/types.js\";\nimport type { Theme } from \"../../../core/design-system/index.js\";\n\nfunction getBodyTitle(authOption: InAppWalletSocialAuth) {\n  switch (authOption) {\n    case \"google\":\n      return \"Sign In - Google Accounts\";\n    default:\n      return `Sign In - ${authOption\n        .slice(0, 1)\n        .toUpperCase()}${authOption.slice(1)}`;\n  }\n}\n\nfunction getWidthAndHeight(authOption: InAppWalletSocialAuth) {\n  switch (authOption) {\n    case \"facebook\":\n      return { width: 715, height: 555 };\n    default:\n      return { width: 350, height: 500 };\n  }\n}\n\nfunction getOauthLoginPath(\n  authOption: InAppWalletSocialAuth,\n  client: ThirdwebClient,\n  ecosystem?: Ecosystem,\n) {\n  switch (authOption) {\n    case \"apple\":\n    case \"facebook\":\n    case \"google\":\n    case \"farcaster\":\n    case \"telegram\":\n    case \"discord\":\n      return getLoginUrl({ authOption, client, ecosystem });\n    default:\n      return \"\";\n  }\n}\n\n/**\n * @internal\n */\nexport function openOauthSignInWindow({\n  authOption,\n  themeObj,\n  client,\n  ecosystem,\n}: {\n  authOption: InAppWalletSocialAuth;\n  themeObj: Theme;\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n}) {\n  // open the popup in the center of the screen\n  const { height, width } = getWidthAndHeight(authOption);\n  const top = (window.innerHeight - height) / 2;\n  const left = (window.innerWidth - width) / 2;\n\n  const win = window.open(\n    getOauthLoginPath(authOption, client, ecosystem),\n    undefined,\n    `width=${width}, height=${height}, top=${top}, left=${left}`,\n  );\n  if (win) {\n    const title = getBodyTitle(authOption);\n    win.document.title = title;\n    win.document.body.innerHTML = spinnerWindowHtml;\n    win.document.body.style.background = themeObj.colors.modalBg;\n    win.document.body.style.color = themeObj.colors.accentText;\n  }\n\n  // close it when current window is closed or refreshed\n  if (win) {\n    window.addEventListener(\"beforeunload\", () => {\n      win?.close();\n    });\n  }\n\n  return win;\n}\n\nconst spinnerWindowHtml = `\n<svg class=\"loader\" viewBox=\"0 0 50 50\">\n  <circle\n    cx=\"25\"\n    cy=\"25\"\n    r=\"20\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"4\"\n  />\n</svg>\n\n<style>\n  body,\n  html {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .loader {\n    width: 50px;\n    height: 50px;\n    animation: spin 2s linear infinite;\n  }\n\n  .loader circle {\n    animation: loading 1.5s linear infinite;\n  }\n\n  @keyframes loading {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n        }\n  }\n</style>\n`;\n","import type { ThirdwebClient } from \"../../../../client/client.js\";\nimport { getThirdwebBaseUrl } from \"../../../../utils/domains.js\";\nimport { type AuthOption, authOptions } from \"../../../../wallets/types.js\";\nimport type { Ecosystem } from \"../../web/types.js\";\n\nconst getLoginOptionRoute = (option: AuthOption | \"wallet\") => {\n  if (!authOptions.includes(option as AuthOption) && option !== \"wallet\") {\n    throw new Error(`Unknown auth option ${option}`);\n  }\n  switch (option) {\n    case \"wallet\":\n      return \"siwe\";\n    default:\n      return option;\n  }\n};\n\nexport const getLoginUrl = ({\n  authOption,\n  client,\n  ecosystem,\n  mode = \"popup\",\n  redirectUrl,\n}: {\n  authOption: AuthOption | \"wallet\";\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n  mode?: \"popup\" | \"redirect\" | \"window\";\n  redirectUrl?: string;\n}) => {\n  if (mode === \"popup\" && redirectUrl) {\n    throw new Error(\"Redirect URL is not supported for popup mode\");\n  }\n\n  if (mode === \"window\" && !redirectUrl) {\n    throw new Error(\"Redirect URL is required for window mode\");\n  }\n\n  const route = getLoginOptionRoute(authOption);\n  let baseUrl = `${getThirdwebBaseUrl(\"inAppWallet\")}/api/2024-05-05/login/${route}?clientId=${client.clientId}`;\n  if (ecosystem?.partnerId) {\n    baseUrl = `${baseUrl}&ecosystemId=${ecosystem.id}&ecosystemPartnerId=${ecosystem.partnerId}`;\n  } else if (ecosystem) {\n    baseUrl = `${baseUrl}&ecosystemId=${ecosystem.id}`;\n  }\n\n  // Always append redirectUrl to the baseUrl if mode is not popup\n  if (mode !== \"popup\") {\n    const formattedRedirectUrl = new URL(redirectUrl || window.location.href);\n    formattedRedirectUrl.searchParams.set(\"walletId\", ecosystem?.id || \"inApp\");\n    formattedRedirectUrl.searchParams.set(\"authProvider\", authOption);\n    baseUrl = `${baseUrl}&redirectUrl=${encodeURIComponent(formattedRedirectUrl.toString())}`;\n  }\n\n  return baseUrl;\n};\n\nexport const getLoginCallbackUrl = ({\n  authOption,\n  client,\n  ecosystem,\n}: {\n  authOption: AuthOption | \"wallet\";\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n}): string => {\n  const route = getLoginOptionRoute(authOption);\n  let baseUrl = `${getThirdwebBaseUrl(\"inAppWallet\")}/api/2024-05-05/login/${route}/callback?clientId=${client.clientId}`;\n  if (ecosystem?.partnerId) {\n    baseUrl = `${baseUrl}&ecosystemId=${ecosystem.id}&ecosystemPartnerId=${ecosystem.partnerId}`;\n  } else if (ecosystem) {\n    baseUrl = `${baseUrl}&ecosystemId=${ecosystem.id}`;\n  }\n\n  return baseUrl;\n};\n","export const DEFAULT_POP_UP_SIZE = \"width=350, height=500\";\n","import type { ThirdwebClient } from \"../../../../../client/client.js\";\nimport { getThirdwebBaseUrl } from \"../../../../../utils/domains.js\";\nimport type { SocialAuthOption } from \"../../../../../wallets/types.js\";\nimport { getLoginUrl } from \"../../../core/authentication/getLoginPath.js\";\nimport type { AuthStoredTokenWithCookieReturnType } from \"../../../core/authentication/types.js\";\nimport type { Ecosystem } from \"../../types.js\";\nimport { DEFAULT_POP_UP_SIZE } from \"./constants.js\";\n\nconst closeWindow = ({\n  isWindowOpenedByFn,\n  win,\n  closeOpenedWindow,\n}: {\n  win?: Window | null;\n  isWindowOpenedByFn: boolean;\n  closeOpenedWindow?: (openedWindow: Window) => void;\n}) => {\n  if (isWindowOpenedByFn) {\n    win?.close();\n  } else {\n    if (win && closeOpenedWindow) {\n      closeOpenedWindow(win);\n    } else if (win) {\n      win.close();\n    }\n  }\n};\n\nexport const loginWithOauthRedirect = (options: {\n  authOption: SocialAuthOption;\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n  redirectUrl?: string;\n  mode?: \"redirect\" | \"popup\" | \"window\";\n}): void => {\n  const loginUrl = getLoginUrl({\n    ...options,\n    mode: options.mode || \"redirect\",\n  });\n  if (options.mode === \"redirect\") {\n    window.location.href = loginUrl;\n  } else {\n    window.open(loginUrl);\n  }\n};\n\nexport const loginWithOauth = async (options: {\n  authOption: SocialAuthOption;\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n  openedWindow?: Window | null | undefined;\n  closeOpenedWindow?: ((openedWindow: Window) => void) | undefined;\n}): Promise<AuthStoredTokenWithCookieReturnType> => {\n  let win = options.openedWindow;\n  let isWindowOpenedByFn = false;\n  if (!win) {\n    win = window.open(\n      getLoginUrl({ ...options, mode: \"popup\" }),\n      `Login to ${options.authOption}`,\n      DEFAULT_POP_UP_SIZE,\n    );\n    isWindowOpenedByFn = true;\n  }\n  if (!win) {\n    throw new Error(\"Something went wrong opening pop-up\");\n  }\n\n  const result = await new Promise<AuthStoredTokenWithCookieReturnType>(\n    (resolve, reject) => {\n      // detect when the user closes the login window\n      const pollTimer = window.setInterval(async () => {\n        if (win.closed) {\n          clearInterval(pollTimer);\n          window.removeEventListener(\"message\", messageListener);\n          reject(new Error(\"User closed login window\"));\n        }\n      }, 1000);\n\n      const messageListener = async (\n        event: MessageEvent<{\n          eventType: string;\n          authResult?: AuthStoredTokenWithCookieReturnType;\n          errorString?: string;\n        }>,\n      ) => {\n        if (event.origin !== getThirdwebBaseUrl(\"inAppWallet\")) {\n          return;\n        }\n        if (typeof event.data !== \"object\") {\n          reject(new Error(\"Invalid event data\"));\n          return;\n        }\n\n        switch (event.data.eventType) {\n          case \"oauthSuccessResult\": {\n            window.removeEventListener(\"message\", messageListener);\n            clearInterval(pollTimer);\n            closeWindow({\n              isWindowOpenedByFn,\n              win,\n              closeOpenedWindow: options.closeOpenedWindow,\n            });\n            if (event.data.authResult) {\n              resolve(event.data.authResult);\n            }\n            break;\n          }\n          case \"oauthFailureResult\": {\n            window.removeEventListener(\"message\", messageListener);\n            clearInterval(pollTimer);\n            closeWindow({\n              isWindowOpenedByFn,\n              win,\n              closeOpenedWindow: options.closeOpenedWindow,\n            });\n            reject(new Error(event.data.errorString));\n            break;\n          }\n          default: {\n            // no-op, DO NOT THROW HERE\n          }\n        }\n      };\n      window.addEventListener(\"message\", messageListener);\n    },\n  );\n  return result;\n};\n"],"names":["useInAppWalletLocale","localeId","locale","setLocale","useState","undefined","useEffect","async","default","getInAppWalletLocale","then","l","defaultAuthOptions","ConnectWalletSocialOptions","props","wallet","setData","useSetSelectionData","themeObj","useCustomTheme","optionalImageMetadata","useMemo","id","getConfig","metadata","image","loginMethodsLabel","google","signInWithGoogle","facebook","signInWithFacebook","apple","signInWithApple","discord","signInWithDiscord","farcaster","telegram","data","ecosystemAuthOptions","isLoading","useQuery","queryKey","queryFn","isEcosystemWallet","walletId","res","fetch","getThirdwebBaseUrl","headers","json","code","Error","message","authOptions","getEcosystemWalletAuthOptions","enabled","retry","auth","options","emailIndex","indexOf","isEmailEnabled","phoneIndex","isPhoneEnabled","manualInputMode","setManualInputMode","inputMode","_jsx","LoadingScreen","passKeyEnabled","includes","placeholder","emailPlaceholder","phonePlaceholder","emptyErrorMessage","emailRequired","phoneRequired","type","socialLogins","filter","o","socialAuthOptions","hasSocialLogins","length","ecosystemInfo","partnerId","showOnlyIcons","_jsxs","Container","flex","gap","style","position","children","_Fragment","Img","client","src","alt","width","height","margin","Spacer","y","center","justifyContent","display","gridTemplateColumns","map","loginMethod","imgIconSize","iconSize","md","lg","SocialButton","variant","disabled","onClick","walletConfig","authMode","mode","isLinking","loginWithOauthRedirect","authOption","strategy","ecosystem","redirectUrl","socialLoginWindow","openOauthSignInWindow","connectOptions","chain","openedWindow","closeOpenedWindow","close","connectPromise","linkProfile","connect","setLastAuthProvider","webLocalStorage","socialLogin","connectionPromise","select","e","console","error","handleSocialLogin","socialIcons","size","TextDivider","text","or","InputSelectionUI","onSelect","value","emailLogin","name","errorMessage","input","str","toLowerCase","test","replace","invalidEmail","submitButtonText","submitEmail","WalletTypeRowButton","icon","emailIcon","title","format","phoneLogin","_input","invalidPhone","phoneIcon","passkeyIcon","passkeyLogin","passkey","getWalletIcon","walletLogin","linkWallet","styled","Button","flexGrow","padding","spacing","sm","fontSize","fontWeight","transition","boxShadow","_ref","getWidthAndHeight","top","window","innerHeight","left","innerWidth","win","open","getLoginUrl","getOauthLoginPath","slice","toUpperCase","getBodyTitle","document","body","innerHTML","spinnerWindowHtml","background","colors","modalBg","color","accentText","addEventListener","getLoginOptionRoute","option","route","baseUrl","clientId","formattedRedirectUrl","URL","location","href","searchParams","set","encodeURIComponent","toString","getLoginCallbackUrl","_ref2","closeWindow","isWindowOpenedByFn","loginUrl","loginWithOauth","Promise","resolve","reject","pollTimer","setInterval","closed","clearInterval","removeEventListener","messageListener","event","origin","eventType","authResult","errorString"],"sourceRoot":""}