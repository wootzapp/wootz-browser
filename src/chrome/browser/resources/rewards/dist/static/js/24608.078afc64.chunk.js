"use strict";(self.webpackChunkrewards=self.webpackChunkrewards||[]).push([[24608],{24608:(a,t,n)=>{n.d(t,{relayBiconomyTransaction:()=>w});var e=n(61595),s=n(28887),o=n(38736),r=n(97779),i=n(45287),c=n(77717),d=n(86511);const h=0n;async function w(a){const[t,n]=await async function(a){let{account:t,serializableTransaction:n,transaction:r,gasless:c}=a;const w=(0,o.P)({address:c.relayerForwarderAddress,chain:r.chain,client:r.client}),l=await(0,d.readContract)({contract:w,method:"function getNonce(address,uint256) view returns (uint256)",params:[t.address,h]}),p=Math.floor(Date.now()/1e3)+(c.deadlineSeconds??3600),u={from:t.address,to:n.to,token:s.Y4,txGas:n.gas,tokenGasPrice:0n,batchId:h,batchNonce:l,deadline:p,data:n.data};if(!u.to)throw new Error("Cannot send a transaction without a `to` address");if(!u.txGas)throw new Error("Cannot send a transaction without a `gas` value");if(!u.data)throw new Error("Cannot send a transaction without a `data` value");const y=(0,e.h)([{type:"address"},{type:"address"},{type:"address"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"bytes32"}],[u.from,u.to,u.token,u.txGas,u.tokenGasPrice,u.batchId,u.batchNonce,(0,i.S)(u.data)]);return[u,await t.signMessage({message:y})]}(a),w=await fetch("https://api.biconomy.io/api/v2/meta-tx/native",{method:"POST",body:(0,c.A)({apiId:a.gasless.apiId,params:[t,n],from:t.from,to:t.to,gasLimit:t.txGas}),headers:{"x-api-key":a.gasless.apiKey,"Content-Type":"application/json;charset=utf-8"}});if(!w.ok)throw w.body?.cancel(),new Error(`Failed to send transaction: ${await w.text()}`);const l=await w.json(),p=l.txHash;if((0,r.q)(p))return{transactionHash:p,chain:a.transaction.chain,client:a.transaction.client};throw new Error(`Failed to send transaction: ${(0,c.A)(l)}`)}}}]);
//# sourceMappingURL=24608.078afc64.chunk.js.map