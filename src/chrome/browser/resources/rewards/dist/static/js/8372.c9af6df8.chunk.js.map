{"version":3,"file":"static/js/8372.c9af6df8.chunk.js","mappings":"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","sources":["../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletFormUI.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletConnectUI.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { iconSize } from \"../../../core/design-system/index.js\";\nimport { TOS } from \"../../ui/ConnectWallet/Modal/TOS.js\";\nimport { useScreenContext } from \"../../ui/ConnectWallet/Modal/screen.js\";\nimport { PoweredByThirdweb } from \"../../ui/ConnectWallet/PoweredByTW.js\";\nimport type { ConnectLocale } from \"../../ui/ConnectWallet/locale/types.js\";\nimport { Img } from \"../../ui/components/Img.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { Container, ModalHeader } from \"../../ui/components/basic.js\";\nimport { ModalTitle } from \"../../ui/components/modalElements.js\";\nimport { ConnectWalletSocialOptions } from \"../shared/ConnectWalletSocialOptions.js\";\nimport type { InAppWalletLocale } from \"../shared/locale/types.js\";\n\ntype InAppWalletFormUIProps = {\n  select: () => void;\n  inAppWalletLocale: InAppWalletLocale;\n  connectLocale: ConnectLocale;\n  done: () => void;\n  wallet: Wallet<\"inApp\">;\n  goBack?: () => void;\n  size: \"compact\" | \"wide\";\n  meta?: {\n    title?: string;\n    titleIconUrl?: string;\n    showThirdwebBranding?: boolean;\n    termsOfServiceUrl?: string;\n    privacyPolicyUrl?: string;\n    requireApproval?: boolean;\n  };\n  client: ThirdwebClient;\n  chain: Chain | undefined;\n  isLinking?: boolean;\n};\n\n/**\n * @internal\n */\nexport function InAppWalletFormUIScreen(props: InAppWalletFormUIProps) {\n  const isCompact = props.size === \"compact\";\n  const { initialScreen, screen } = useScreenContext();\n  // This is only used when requireApproval is true to accept the TOS\n  const [isApproved, setIsApproved] = useState(false);\n\n  const isInitialScreen =\n    screen === props.wallet && initialScreen === props.wallet;\n\n  const onBack = isInitialScreen && !props.isLinking ? undefined : props.goBack;\n\n  return (\n    <Container\n      fullHeight\n      flex=\"column\"\n      p=\"lg\"\n      animate=\"fadein\"\n      style={{\n        minHeight: \"250px\",\n      }}\n    >\n      {isCompact &&\n        (isInitialScreen ? (\n          <>\n            <ModalHeader\n              onBack={onBack}\n              leftAligned={!props.isLinking}\n              title={\n                <>\n                  {!props.meta?.titleIconUrl ? null : (\n                    <Img\n                      src={props.meta?.titleIconUrl}\n                      width={iconSize.md}\n                      height={iconSize.md}\n                      client={props.client}\n                    />\n                  )}\n                  <ModalTitle>\n                    {props.meta?.title ??\n                      props.inAppWalletLocale.emailLoginScreen.title}\n                  </ModalTitle>\n                </>\n              }\n            />\n            <Spacer y=\"lg\" />\n          </>\n        ) : (\n          <ModalHeader onBack={onBack} title={props.inAppWalletLocale.signIn} />\n        ))}\n      <Container\n        expand\n        flex=\"column\"\n        center=\"y\"\n        p={isCompact ? undefined : \"lg\"}\n      >\n        <ConnectWalletSocialOptions\n          {...props}\n          locale={props.inAppWalletLocale}\n          disabled={props.meta?.requireApproval && !isApproved}\n        />\n      </Container>\n\n      {isCompact &&\n        (props.meta?.showThirdwebBranding !== false ||\n          props.meta?.termsOfServiceUrl ||\n          props.meta?.privacyPolicyUrl) && <Spacer y=\"xl\" />}\n      <Container flex=\"column\" gap=\"lg\">\n        <TOS\n          termsOfServiceUrl={props.meta?.termsOfServiceUrl}\n          privacyPolicyUrl={props.meta?.privacyPolicyUrl}\n          locale={props.connectLocale.agreement}\n          requireApproval={props.meta?.requireApproval}\n          onApprove={() => {\n            setIsApproved(!isApproved);\n          }}\n          isApproved={isApproved}\n        />\n\n        {props.meta?.showThirdwebBranding !== false && <PoweredByThirdweb />}\n      </Container>\n    </Container>\n  );\n}\n","\"use client\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport {\n  useSelectionData,\n  useSetSelectionData,\n} from \"../../providers/wallet-ui-states-provider.js\";\nimport { useScreenContext } from \"../../ui/ConnectWallet/Modal/screen.js\";\nimport type { ConnectLocale } from \"../../ui/ConnectWallet/locale/types.js\";\nimport type { ConnectWalletSelectUIState } from \"../shared/ConnectWalletSocialOptions.js\";\nimport { GuestLogin } from \"../shared/GuestLogin.js\";\nimport { LoadingScreen } from \"../shared/LoadingScreen.js\";\nimport { OTPLoginUI } from \"../shared/OTPLoginUI.js\";\nimport { PassKeyLogin } from \"../shared/PassKeyLogin.js\";\nimport { SocialLogin } from \"../shared/SocialLogin.js\";\nimport { InAppWalletFormUIScreen } from \"./InAppWalletFormUI.js\";\nimport { WalletAuth } from \"./WalletAuth.js\";\nimport { useInAppWalletLocale } from \"./useInAppWalletLocale.js\";\n\n/**\n *\n * @internal\n */\nfunction InAppWalletConnectUI(props: {\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  goBack?: () => void;\n  size: \"compact\" | \"wide\";\n  meta?: {\n    title?: string;\n    titleIconUrl?: string;\n    showThirdwebBranding?: boolean;\n    termsOfServiceUrl?: string;\n    privacyPolicyUrl?: string;\n  };\n  client: ThirdwebClient;\n  chain: Chain | undefined;\n  connectLocale: ConnectLocale;\n  isLinking?: boolean;\n  walletConnect: { projectId?: string } | undefined;\n}) {\n  const data = useSelectionData();\n  const setSelectionData = useSetSelectionData();\n  const state = data as ConnectWalletSelectUIState;\n  const localeId = props.connectLocale.id;\n  const locale = useInAppWalletLocale(localeId);\n  const { initialScreen } = useScreenContext();\n\n  if (!locale) {\n    return <LoadingScreen />;\n  }\n\n  // if the the modal starts out with the wallet's connect ui instead of wallet selector - going back to main screen requires staying on the same component and clearing the selection data\n  // otherwise, we go back to the wallet selector by calling props.goBack\n  const goBackToMain = () => {\n    if (initialScreen === props.wallet) {\n      setSelectionData({});\n    } else {\n      props.goBack?.();\n      setSelectionData({});\n    }\n  };\n\n  const done = () => {\n    props.done();\n    setSelectionData({});\n  };\n\n  const otpUserInfo = state?.emailLogin\n    ? { email: state.emailLogin }\n    : state?.phoneLogin\n      ? { phone: state.phoneLogin }\n      : undefined;\n\n  if (otpUserInfo) {\n    return (\n      <OTPLoginUI\n        userInfo={otpUserInfo}\n        locale={locale}\n        done={done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n        chain={props.chain}\n        client={props.client}\n        size={props.size}\n        isLinking={props.isLinking}\n      />\n    );\n  }\n\n  if (state?.passkeyLogin) {\n    return (\n      <PassKeyLogin\n        locale={props.connectLocale}\n        wallet={props.wallet}\n        done={done}\n        onBack={goBackToMain}\n        chain={props.chain}\n        client={props.client}\n        size={props.size}\n        isLinking={props.isLinking}\n      />\n    );\n  }\n\n  if (state?.walletLogin) {\n    return (\n      <WalletAuth\n        meta={props.meta}\n        inAppLocale={locale}\n        walletConnect={props.walletConnect}\n        wallet={props.wallet}\n        client={props.client}\n        size={props.size}\n        done={done}\n        onBack={goBackToMain || (() => setSelectionData({}))}\n        locale={props.connectLocale}\n      />\n    );\n  }\n\n  if (state?.socialLogin) {\n    return (\n      <SocialLogin\n        socialAuth={state.socialLogin.type}\n        locale={locale}\n        done={done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n        state={state}\n        chain={props.chain}\n        client={props.client}\n        size={props.size}\n        connectLocale={props.connectLocale}\n        isLinking={props.isLinking}\n      />\n    );\n  }\n\n  if (state?.guestLogin) {\n    return (\n      <GuestLogin\n        locale={locale}\n        done={done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n        state={state}\n        client={props.client}\n        size={props.size}\n        connectLocale={props.connectLocale}\n      />\n    );\n  }\n\n  return (\n    <InAppWalletFormUIScreen\n      select={() => {}}\n      connectLocale={props.connectLocale}\n      inAppWalletLocale={locale}\n      done={done}\n      goBack={props.goBack}\n      wallet={props.wallet}\n      client={props.client}\n      meta={props.meta}\n      size={props.size}\n      chain={props.chain}\n      isLinking={props.isLinking}\n    />\n  );\n}\n\nexport default InAppWalletConnectUI;\n"],"names":["InAppWalletFormUIScreen","props","isCompact","size","initialScreen","screen","useScreenContext","isApproved","setIsApproved","useState","isInitialScreen","wallet","onBack","isLinking","undefined","goBack","_jsxs","Container","fullHeight","flex","p","animate","style","minHeight","children","_Fragment","_jsx","ModalHeader","leftAligned","title","meta","titleIconUrl","Img","src","width","iconSize","md","height","client","ModalTitle","inAppWalletLocale","emailLoginScreen","Spacer","y","signIn","expand","center","ConnectWalletSocialOptions","locale","disabled","requireApproval","showThirdwebBranding","termsOfServiceUrl","privacyPolicyUrl","gap","TOS","connectLocale","agreement","onApprove","PoweredByThirdweb","data","useSelectionData","setSelectionData","useSetSelectionData","state","localeId","id","useInAppWalletLocale","LoadingScreen","goBackToMain","done","otpUserInfo","emailLogin","email","phoneLogin","phone","OTPLoginUI","userInfo","chain","passkeyLogin","PassKeyLogin","walletLogin","WalletAuth","inAppLocale","walletConnect","socialLogin","SocialLogin","socialAuth","type","guestLogin","GuestLogin","select"],"sourceRoot":""}