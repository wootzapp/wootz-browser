// Copyright 2024 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ash.screens_factory.mojom;

import "chrome/browser/ui/webui/ash/login/mojom/screens_common.mojom";
import "chrome/browser/ui/webui/ash/login/mojom/screens_oobe.mojom";
import "chrome/browser/ui/webui/ash/login/mojom/screens_osauth.mojom";

// Lives in the browser process. A renderer uses this to create a page handler
// that enables communication between a renderer and the browser process.
interface ScreensFactory {
  // ash.screens_common.mojom

  // Creates a DrivePinningPageHandler and connects it up to the
  // DrivePinningPage.
  CreateDrivePinningScreenHandler(
      pending_remote<ash.screens_common.mojom.DrivePinningPage> page,
      pending_receiver<ash.screens_common.mojom.DrivePinningPageHandler> handler);
  // Creates a GestureNavigationPageHandler and
  // connects it up to the GestureNavigationPage.
  CreateGestureNavigationPageHandler(
      pending_receiver<ash.screens_common.mojom.GestureNavigationPageHandler>
          handler);

  // Creates a GaiaInfoPageHandler and connects it up to the GaiaInfoPage.
  CreateGaiaInfoScreenHandler(
      pending_remote<ash.screens_common.mojom.GaiaInfoPage> page,
      pending_receiver<ash.screens_common.mojom.GaiaInfoPageHandler> handler);

  // ash.screens_oobe.mojom

  // Creates a ConsumerUpdatePageHandler and connects it up to the
  // ConsumerUpdatePage.
  CreateConsumerUpdatePageHandler(
      pending_remote<ash.screens_oobe.mojom.ConsumerUpdatePage> page,
      pending_receiver<ash.screens_oobe.mojom.ConsumerUpdatePageHandler> handler);

  // Creates a PackagedLicensePageHandler and
  // connects it up to the PackagedLicensePage.
  CreatePackagedLicensePageHandler(
        pending_receiver<ash.screens_oobe.mojom.PackagedLicensePageHandler>
            handler);

  // ash.screens_osauth.mojom

  // Creates a LocalDataLossWarningPageHandler and
  // connects it up to the LocalDataLossWarningPage.
  CreateLocalDataLossWarningPageHandler(
      pending_receiver<ash.screens_osauth.mojom.LocalDataLossWarningPageHandler>
          handler);
};
