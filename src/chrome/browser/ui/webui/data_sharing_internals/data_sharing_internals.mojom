// Copyright 2024 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module data_sharing_internals.mojom;

import "url/mojom/url.mojom";

// Type of group membership role.
enum RoleType {
  UNKNOWN,
  OWNER,
  MEMBER,
  INVITEE,
};

// Data representing a member in a group.
struct GroupMember {
  // Display name.
  string display_name;

  // Email address.
  string email;

  // Role of this member.
  RoleType role;

  // URL of the avatar of this member.
  url.mojom.Url avatar_url;
};

// Data representing a group of users.
struct GroupData {
  // ID of the group.
  string group_id;

  // Name of the group
  string name;

   // A list of members in this group.
  array<GroupMember> members;
};

// Used by the WebUI page to bootstrap bidirectional communication.
interface PageHandlerFactory {
  // The WebUI calls this method when the page is first initialized.
  CreatePageHandler(pending_remote<Page> page, pending_receiver<PageHandler>
    handler);
};

// Browser-side handler for requests from WebUI page.
interface PageHandler {
  // Gets whether the service is empty.
  IsEmptyService() => (bool is_empty);

  // Gets information about all groups.
  GetAllGroups() => (bool is_success,  array<GroupData> data);
};

// Renderer-side handler for internal page to process the updates from
// the data sharing service.
interface Page {
};
