// Copyright 2024 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module side_panel.customize_chrome.mojom;

// Unique identifiers for actions that can be pinned to the toolbar.
enum ActionId {
  kShowBookmarks,
  kShowHistoryCluster,
  kShowReadAnything,
  kShowReadingList,
  kShowSideSearch,
  kHome,
  kForward,
  kNewIncognitoWindow,
  kShowPasswordManager,
  kShowPaymentMethods,
  kShowAddresses,
  kShowDownloads,
  kClearBrowsingData,
  kPrint,
  kShowTranslate,
  kSendTabToSelf,
  kQrCodeGenerator,
  kRouteMedia,
  kTaskManager,
  kDevTools,
  kShowChromeLabs,
};

// An action that can be pinned to the toolbar.
struct Action {
  // Which action this is.
  ActionId id;
  // The name for the webui to display for this action.
  string display_name;
  // Whether the action is currently pinned to the toolbar.
  bool pinned;
  // TODO(crbug.com/323964782): Also include category.
  // TODO(crbug.com/323964874): Also include icon data.
};

// Used by the WebUI page to bootstrap bidirectional communication.
interface CustomizeToolbarHandlerFactory {
  // The WebUI calls this method when the page is first initialized.
  CreateCustomizeToolbarHandler(pending_remote<CustomizeToolbarClient> client,
                    pending_receiver<CustomizeToolbarHandler> handler);
};

// Browser-side handler for requests from WebUI page.
interface CustomizeToolbarHandler {
  // Returns the list of all actions that can be pinned to the toolbar.
  ListActions() => (array<Action> actions);
  // Pins the action with id `action_id` to (or unpins it from) the toolbar.
  PinAction(ActionId action_id, bool pinned);
};

// WebUI-side handler for requests from the browser.
interface CustomizeToolbarClient {
  // Sets the pinned state of the action with id `action_id`.
  SetActionPinned(ActionId action_id, bool pinned);
};
