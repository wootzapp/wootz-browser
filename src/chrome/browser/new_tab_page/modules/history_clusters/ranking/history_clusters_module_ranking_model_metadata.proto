// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

package new_tab_page.proto;

enum HistoryClustersModuleRankingModelSignals {
  HISTORY_CLUSTERS_MODULE_RANKING_MODEL_SIGNALS_UNKNOWN = 0;
  // Minutes since the most recent visit of the cluster occurred.
  HISTORY_CLUSTERS_MODULE_RANKING_MINUTES_SINCE_MOST_RECENT_VISIT = 1;
  // Whether the cluster belongs to a boosted category.
  HISTORY_CLUSTERS_MODULE_RANKING_BELONGS_TO_BOOSTED_CATEGORY = 2;
  // The number of visits that have an image.
  HISTORY_CLUSTERS_MODULE_RANKING_NUM_VISITS_WITH_IMAGE = 3;
  // The number of total visits within the cluster, including ones that are not
  // shown in the module.
  HISTORY_CLUSTERS_MODULE_RANKING_NUM_TOTAL_VISITS = 4;
  // The number of unique hosts for visits contained within the cluster.
  HISTORY_CLUSTERS_MODULE_RANKING_NUM_UNIQUE_HOSTS = 5;
  // The number of abandoned carts associated with the cluster.
  HISTORY_CLUSTERS_MODULE_RANKING_NUM_ABANDONED_CARTS = 6;
  // The number of times the cluster was seen by the user in a fixed time range.
  HISTORY_CLUSTERS_MODULE_RANKING_NUM_TIMES_SEEN = 7;
  // The number of times the cluster was seen by the user in a fixed time range.
  HISTORY_CLUSTERS_MODULE_RANKING_NUM_TIMES_USED = 8;
  // The number of categories associated with the cluster.
  HISTORY_CLUSTERS_MODULE_RANKING_NUM_ASSOCIATED_CATEGORIES = 9;
  // Whether the cluster is of the most seen category.
  HISTORY_CLUSTERS_MODULE_RANKING_BELONGS_TO_MOST_SEEN_CATEGORY = 10;
  // Whether the cluster is of the most used category.
  HISTORY_CLUSTERS_MODULE_RANKING_BELONGS_TO_MOST_USED_CATEGORY = 11;
  // The number of times the most frequently seen category by a user occurred in
  // a fixed time range.
  HISTORY_CLUSTERS_MODULE_RANKING_MOST_FREQUENT_SEEN_CATEGORY_COUNT = 12;
  // The number of times the most frequently used category by a user occurred in
  // a fixed time range.
  HISTORY_CLUSTERS_MODULE_RANKING_MOST_FREQUENT_USED_CATEGORY_COUNT = 13;
}

message HistoryClustersModuleRankingModelMetadata {
  // The version supported.
  //
  // If sent from the server, this is the maximum version the
  // returned model supports. If sent from the client, this is the maximum
  // version the client knows how to evaluate.
  int32 version = 1;

  // The features that are used by the model in the order that the input tensors
  // should be populated in.
  repeated HistoryClustersModuleRankingModelSignals signals = 2;
}
