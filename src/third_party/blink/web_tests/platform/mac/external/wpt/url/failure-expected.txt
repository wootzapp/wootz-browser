This is a testharness.js-based test.
Found 245 FAIL, 0 TIMEOUT, 0 NOTRUN.
[FAIL] URL's constructor's base argument: http://a.b.c.xn--pokxncvks should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: http://a.b.c.xn--pokxncvks should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: http://a.b.c.xn--pokxncvks should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] sendBeacon(): http://a.b.c.xn--pokxncvks should throw
  assert_throws_js: function "() => self.navigator.sendBeacon(test.input)" did not throw
[FAIL] Location's href: http://a.b.c.xn--pokxncvks should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): http://a.b.c.xn--pokxncvks should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: http://10.0.0.xn--pokxncvks should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: http://10.0.0.xn--pokxncvks should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: http://10.0.0.xn--pokxncvks should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] sendBeacon(): http://10.0.0.xn--pokxncvks should throw
  assert_throws_js: function "() => self.navigator.sendBeacon(test.input)" did not throw
[FAIL] Location's href: http://10.0.0.xn--pokxncvks should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): http://10.0.0.xn--pokxncvks should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: http://a.b.c.XN--pokxncvks should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: http://a.b.c.XN--pokxncvks should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: http://a.b.c.XN--pokxncvks should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] sendBeacon(): http://a.b.c.XN--pokxncvks should throw
  assert_throws_js: function "() => self.navigator.sendBeacon(test.input)" did not throw
[FAIL] Location's href: http://a.b.c.XN--pokxncvks should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): http://a.b.c.XN--pokxncvks should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: http://a.b.c.Xn--pokxncvks should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: http://a.b.c.Xn--pokxncvks should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: http://a.b.c.Xn--pokxncvks should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] sendBeacon(): http://a.b.c.Xn--pokxncvks should throw
  assert_throws_js: function "() => self.navigator.sendBeacon(test.input)" did not throw
[FAIL] Location's href: http://a.b.c.Xn--pokxncvks should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): http://a.b.c.Xn--pokxncvks should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: http://10.0.0.XN--pokxncvks should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: http://10.0.0.XN--pokxncvks should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: http://10.0.0.XN--pokxncvks should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] sendBeacon(): http://10.0.0.XN--pokxncvks should throw
  assert_throws_js: function "() => self.navigator.sendBeacon(test.input)" did not throw
[FAIL] Location's href: http://10.0.0.XN--pokxncvks should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): http://10.0.0.XN--pokxncvks should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: http://10.0.0.xN--pokxncvks should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: http://10.0.0.xN--pokxncvks should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: http://10.0.0.xN--pokxncvks should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] sendBeacon(): http://10.0.0.xN--pokxncvks should throw
  assert_throws_js: function "() => self.navigator.sendBeacon(test.input)" did not throw
[FAIL] Location's href: http://10.0.0.xN--pokxncvks should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): http://10.0.0.xN--pokxncvks should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: https://x x:12 should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: https://x x:12 should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: https://x x:12 should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] sendBeacon(): https://x x:12 should throw
  assert_throws_js: function "() => self.navigator.sendBeacon(test.input)" did not throw
[FAIL] Location's href: https://x x:12 should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): https://x x:12 should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://@/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://@/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://@/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://@/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://@/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://te@s:t@/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://te@s:t@/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://te@s:t@/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://te@s:t@/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://te@s:t@/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://:/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://:/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://:/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://:/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://:/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://:12/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://:12/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://:12/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://:12/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://:12/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://a\0b/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://a\0b/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://a\0b/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://a\0b/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://a\0b/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://a b/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://a b/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://a b/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://a b/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://a b/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://a<b should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://a<b should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://a<b should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://a<b should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://a<b should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://a>b should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://a>b should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://a>b should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://a>b should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://a>b should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://a[b/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://a[b/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://a[b/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://a[b/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://a[b/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://a\\b/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://a\\b/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://a\\b/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://a\\b/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://a\\b/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://a]b/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://a]b/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://a]b/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://a]b/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://a]b/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://a^b should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://a^b should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://a^b should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://a^b should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://a^b should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: sc://a|b/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: sc://a|b/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: sc://a|b/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: sc://a|b/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): sc://a|b/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: http://a b/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: http://a b/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: http://a b/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] sendBeacon(): http://a b/ should throw
  assert_throws_js: function "() => self.navigator.sendBeacon(test.input)" did not throw
[FAIL] Location's href: http://a b/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): http://a b/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: http://ho%20st/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: http://ho%20st/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: http://ho%20st/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] sendBeacon(): http://ho%20st/ should throw
  assert_throws_js: function "() => self.navigator.sendBeacon(test.input)" did not throw
[FAIL] Location's href: http://ho%20st/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): http://ho%20st/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: asdf://%43|/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: asdf://%43|/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: asdf://%43|/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: asdf://%43|/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): asdf://%43|/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: non-special://[:80/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: non-special://[:80/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: non-special://[:80/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: non-special://[:80/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): non-special://[:80/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: file://xn--/p should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: file://xn--/p should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: file://xn--/p should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: file://xn--/p should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): file://xn--/p should throw
  assert_throws_dom: function "() => self.open(test.input).close()" threw object "TypeError: Cannot read properties of null (reading 'close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
[FAIL] URL's constructor's base argument: https://xn--/ should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: https://xn--/ should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: https://xn--/ should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] sendBeacon(): https://xn--/ should throw
  assert_throws_js: function "() => self.navigator.sendBeacon(test.input)" did not throw
[FAIL] Location's href: https://xn--/ should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): https://xn--/ should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: data://:443 should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: data://:443 should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: data://:443 should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: data://:443 should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): data://:443 should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: data://test:test should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: data://test:test should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: data://test:test should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: data://test:test should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): data://test:test should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: data://[:1] should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: data://[:1] should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: data://[:1] should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: data://[:1] should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): data://[:1] should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: javascript://:443 should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: javascript://:443 should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: javascript://:443 should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: javascript://:443 should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): javascript://:443 should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: javascript://test:test should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: javascript://test:test should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: javascript://test:test should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: javascript://test:test should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): javascript://test:test should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: javascript://[:1] should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: javascript://[:1] should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: javascript://[:1] should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: javascript://[:1] should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): javascript://[:1] should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: mailto://:443 should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: mailto://:443 should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: mailto://:443 should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: mailto://:443 should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): mailto://:443 should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: mailto://test:test should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: mailto://test:test should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: mailto://test:test should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: mailto://test:test should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): mailto://test:test should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: mailto://[:1] should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: mailto://[:1] should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: mailto://[:1] should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: mailto://[:1] should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): mailto://[:1] should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: intent://:443 should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: intent://:443 should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: intent://:443 should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: intent://:443 should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): intent://:443 should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: intent://test:test should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: intent://test:test should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: intent://test:test should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: intent://test:test should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): intent://test:test should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: intent://[:1] should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: intent://[:1] should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: intent://[:1] should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: intent://[:1] should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): intent://[:1] should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: urn://:443 should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: urn://:443 should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: urn://:443 should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: urn://:443 should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): urn://:443 should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: urn://test:test should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: urn://test:test should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: urn://test:test should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: urn://test:test should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): urn://test:test should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: urn://[:1] should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: urn://[:1] should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: urn://[:1] should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: urn://[:1] should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): urn://[:1] should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: turn://:443 should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: turn://:443 should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: turn://:443 should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: turn://:443 should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): turn://:443 should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: turn://test:test should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: turn://test:test should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: turn://test:test should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: turn://test:test should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): turn://test:test should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: turn://[:1] should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: turn://[:1] should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: turn://[:1] should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: turn://[:1] should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): turn://[:1] should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: stun://:443 should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: stun://:443 should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: stun://:443 should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: stun://:443 should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): stun://:443 should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: stun://test:test should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: stun://test:test should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: stun://test:test should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: stun://test:test should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): stun://test:test should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
[FAIL] URL's constructor's base argument: stun://[:1] should throw
  assert_throws_js: function "() => new URL("about:blank", test.input)" did not throw
[FAIL] URL's href: stun://[:1] should throw
  assert_throws_js: function "() => url.href = test.input" did not throw
[FAIL] XHR: stun://[:1] should throw
  assert_throws_dom: function "() => client.open("GET", test.input)" did not throw
[FAIL] Location's href: stun://[:1] should throw
  assert_throws_dom: function "() => frame.contentWindow.location = test.input" did not throw
[FAIL] window.open(): stun://[:1] should throw
  assert_throws_dom: function "() => self.open(test.input).close()" did not throw
Harness: the test ran to completion.

