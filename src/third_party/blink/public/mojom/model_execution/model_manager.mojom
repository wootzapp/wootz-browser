// Copyright 2024 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module blink.mojom;

import "third_party/blink/public/mojom/model_execution/model_session.mojom";

struct ModelGenericSessionSamplingParams {
  uint32 top_k;
  float temperature;
};

// The manager that could create a new session for the model.
interface ModelManager {
  // Returns if it is possible to create a generic session. For example, when
  // the service in charge of model loading and session creation is not
  // available, this should return false.
  CanCreateGenericSession() => (bool can_create);
  // Creates a new session and returns if the session is created successfully.
  // Note that this could return false even if the previous
  // `CanCreateGenericSession()` returns true, because some errors can only
  // occur when we actually create the generic session.
  CreateGenericSession(
    pending_receiver<blink.mojom.ModelGenericSession> session,
    ModelGenericSessionSamplingParams? sampling_params
  ) => (bool success);
  // Returns the default configuration for `ModelGenericSessionSamplingParams`.
  GetDefaultGenericSessionSamplingParams() => (
    ModelGenericSessionSamplingParams default_sampling_params
  );
};
